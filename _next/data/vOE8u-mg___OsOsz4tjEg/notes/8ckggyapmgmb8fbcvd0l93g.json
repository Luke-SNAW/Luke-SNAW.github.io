{"pageProps":{"note":{"id":"8ckggyapmgmb8fbcvd0l93g","title":"ü¶ë The 14 pains of building your own billing system","desc":"","updated":1709017759690,"created":1709017352788,"custom":{},"fname":"dev.the-14-pains-of-billing","type":"note","vault":{"fsPath":"vault"},"contentHash":"fffa194add69f3f755a72c2be6e9af53","links":[],"anchors":{"the-three-patterns":{"type":"header","text":"The three patterns","value":"the-three-patterns","line":28,"column":0,"depth":2},"my-14-pains-of-billing-and-monetization":{"type":"header","text":"My 14 pains of billing and monetization","value":"my-14-pains-of-billing-and-monetization","line":62,"column":0,"depth":2},"why-are-these-hard":{"type":"header","text":"Why are these hard?","value":"why-are-these-hard","line":103,"column":0,"depth":2},"what-should-you-do-about-it":{"type":"header","text":"What should you do about it?","value":"what-should-you-do-about-it","line":121,"column":0,"depth":2}},"children":[],"parent":"ZbdkdApFqLdks4Moq92R9","data":{}},"body":"<h1 id=\"-the-14-pains-of-building-your-own-billing-system\">ü¶ë The 14 pains of building your own billing system<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#-the-14-pains-of-building-your-own-billing-system\"></a></h1>\n<blockquote>\n<p><a href=\"https://arnon.dk/the-14-pains-of-billing/\">https://arnon.dk/the-14-pains-of-billing/</a></p>\n</blockquote>\n<p>Billing and revenue systems are a necessity if you ever plan to monetize your business.</p>\n<p>If you‚Äôve spent any time with them, you know that billing systems are <em><strong>complicated</strong></em>, and no one wants to think about them. When they work, it‚Äôs great and everyone is happy.</p>\n<p>I‚Äôve seen them likened to an octopus, and I fully agree. They touch finance, product, experience, customer support, customers, legal, compliance, sales, and sometimes more.</p>\n<p>Billing is hard, intertwined, and complicated.</p>\n<p>Because it‚Äôs so inter-connected, it can go belly-up rather quickly if something breaks. And stuff does break. <em>Frequently</em>. (If you have a team that‚Äôs maintaining this system and it‚Äôs not you, ask them!).</p>\n<p>Also, if your system isn‚Äôt breaking just yet. Give it some time.</p>\n<p>Look, I know you are busy running the business and you already have lots on your plate. You just want to collect some money and move on to more pressing features that actually matter to customers.</p>\n<p>But remember:</p>\n<p>üëâ if you can‚Äôt collect revenue legally and correctly, it‚Äôll become your headache and you‚Äôll have more on your plate than you could possibly ever chew üëà</p>\n<h2 id=\"the-three-patterns\">The three patterns<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#the-three-patterns\"></a></h2>\n<p>This is not unique to billing systems. It is very common to see one of three patterns:</p>\n<ol>\n<li>Home-grown</li>\n<li>Full 3rd party system</li>\n<li>or a hybrid of a home-grown and 3rd party system</li>\n</ol>\n<p>These all have their own benefits and drawbacks, naturally.</p>\n<div class=\"table-responsive\">\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th><strong>Build your own / Home-grown</strong></th><th><strong>Hybrid</strong></th><th><strong>3rd party</strong></th></tr></thead><tbody><tr><td>An entirely home-grown solution.<br>The control is hard to beat. Full control, fully customizable, and you aren‚Äôt paying anyone from the outside for fees.<br>Many think (and this happens to many companies) that building and maintaining your own billing system is the best option for your business.</td><td>A mix of home-grown solutions and 3rd parties.<br>For example, your billing engine is internal, payments are handled by a PSP, and tax compliance by a tax SaaS.<br>Here, you can control the business logic (e.g., when do you update quantities), but the logic is handled by the 3rd parties.<br></td><td>A turnkey solution that handles everything for you.<br>All the business logic, payment processing, invoicing, tax compliance, usage, metering ‚Äì all done by one full-service solution.<br>This is convenient for companies, but you lose a lot of control and may have to shell out a lot of money to get to this place</td></tr></tbody></table></div>\n<p>It‚Äôs very natural, when you just start your company (or you‚Äôre taking your first steps with a new product) to build everything by yourself.</p>\n<p>You have engineers. You want to keep it very simple.</p>\n<p>Or so you think.</p>\n<p>Why not? <strong>Because you‚Äôre often still thinking like an engineer.</strong></p>\n<p>You‚Äôre thinking of billing as an engineering issue. You‚Äôll say to yourself <em>‚Äúwhy can‚Äôt we just dump a file of what we need to bill on S3, and have a CRON job pick it up and collect payment?‚Äù</em>.</p>\n<p>But you‚Äôre wrong. It‚Äôs a very big and difficult problem, you just aren‚Äôt seeing it yet.</p>\n<p>Here is my very high-level description of the things a typical billing team needs to worry about (YMMV):</p>\n<p><a href=\"https://arnon.dk/wp-content/uploads/2024/02/monetization-responsibilities@2x.png\">monetization-responsibilities</a></p>\n<p>A typical billing or monetization team has so many responsibilities that it‚Äôs hard to grasp even for seasoned professionals.</p>\n<p>Everyone knows you don‚Äôt do your own security (or date handling). You also shouldn‚Äôt do your own billing from scratch.</p>\n<h2 id=\"my-14-pains-of-billing-and-monetization\">My 14 pains of billing and monetization<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#my-14-pains-of-billing-and-monetization\"></a></h2>\n<p>Allow me to list <em>some</em> of the problems I‚Äôve had with home-grown billing systems, from least complex to most complex (partial list!):</p>\n<ol>\n<li>\n<p><strong>Idempotency</strong>. All requests to do billing, collecting payments need to be unique and idempotent. This will become apparent when you hit API limits and need to retry, or need to spin up more instances of your billing system. Then, you risk double-charging. Luckily crediting/refunding is not a big problem, but this is a problem nonetheless when you scale your infrastructure.</p>\n</li>\n<li>\n<p><strong>Date handling.</strong> When do you bill? Every 30 days (calendar), or every month (anniversary)? What about leap days, time-zones, etc?</p>\n<ul>\n<li><a href=\"https://xkcd.com/2867/\">DateTime via XKCD: 2687</a></li>\n</ul>\n</li>\n<li>\n<p><strong>Proration and ‚Äúleftovers‚Äù</strong>. Do you prorate on upgrade or only downgrade? Refund? Credits? Ignore it? Block it from happening (don‚Äôt allow upgrades/downgrades)?</p>\n</li>\n<li>\n<p><strong>Usage metering.</strong> There are dozens of way to decide how to calculate usage, <em>and</em> they can be changed frequently or by customer type</p>\n</li>\n<li>\n<p><strong>Invoice formatting</strong>. Sounds easy if you‚Äôre operating in one country. But when you expand you suddenly realise you have to collect not just sales tax, but also sometimes VAT and sometimes GST and sometimes additional levies (country-dependant) and you now need individual templates for each market.</p>\n</li>\n<li>\n<p><strong>Complex customer hierarchy</strong>. Customers (especially in B2B) could have subsidiaries and partners that they want to manage their billing relationships. How do you roll-up usage up to the paying entity?<br>\nThis is often something that you don‚Äôt think about at first, but changes when you grow and expand.</p>\n<ul>\n<li>Making that even more complex: They could be in different locations, and taxed differently based on their location or where the services are delivered. Then, you are legally required to split the bills/invoices.<br>\nThese rules can also change every few months</li>\n</ul>\n</li>\n<li>\n<p><strong>Payment collection and churn prevention</strong>. When do you give up retrying? How do you handle chargebacks (terminate the account, suspend, refund)?</p>\n</li>\n<li>\n<p><strong>Pausing/resuming</strong>. What level of access do you let customers have when they pause their subscription?</p>\n</li>\n<li>\n<p><strong>Crediting / refunding</strong>. If you always refund the entire amount it may not be hard, but what about partial mistakes? Would you maybe want to give a ‚Äústore credit‚Äù instead of a refund? Should that credit ever expire?</p>\n</li>\n<li>\n<p><strong>Tax handling</strong>. You may think different items having different tax rates is complex enough, but these also change frequently if you‚Äôre on the global level.</p>\n</li>\n<li>\n<p><strong>Custom deals</strong>. If you‚Äôre PLG-only this isn‚Äôt an issue but if you sign contracts, you will very quickly end up with edge cases and special deals that can‚Äôt be easily configured with the assumptions you made.</p>\n</li>\n<li>\n<p><strong>Human error.</strong> Customers are often comprised of humans who have made mistakes, and corrections need to be made. Businesses too are comprised of humans, who can misconfigure their customers and then need to make corrections. Crediting and reissuing invoices is a very time-consuming task.</p>\n<ul>\n<li>This is also true when customer‚Äôs legal details change (address, VAT ID, etc.)</li>\n</ul>\n</li>\n<li>\n<p><strong>Selective pricing changes</strong>. Pricing changes often don‚Äôt affect all customers. When only new customers are affected, you must keep distinct versions of your pricing points to ensure customers‚Äô agreements are kept.</p>\n</li>\n<li>\n<p><strong>Revenue recognition and accrued revenue.</strong> I can‚Äôt even begin to explain this ‚Äì but <a href=\"https://www.ifrs.org/content/dam/ifrs/publications/pdf-standards/english/2021/issued/part-a/ifrs-15-revenue-from-contracts-with-customers.pdf\">here‚Äôs a 64 page PDF specification of revenue recognition rules according to IFRS-15</a>. If you understand this ‚Äì you‚Äôre special and please e-mail me, I want to know why.\nBonus points if you also did a custom <strong>ERP integration</strong> ü•≤.</p>\n</li>\n</ol>\n<h2 id=\"why-are-these-hard\">Why are these hard?<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#why-are-these-hard\"></a></h2>\n<p>Some things change very regularly, more than you‚Äôd expect. Some things you only have to do once and never touch again.</p>\n<p>Idempotency is a great example of an engineering issue that, once solved, rarely has to be touched.</p>\n<p>However, tax rules change regularly across the world. The more countries you‚Äôre in, the more tax laws you have to keep track of.</p>\n<p>Customer problems around mistakes is a relatively constant issue, but it increases in size as you grow, requiring more customer support and more manual corrections.</p>\n<p>Let me try and put it in a table. It‚Äôs entirely subjective, but it should help explain the relationship between how frequently things change (== break), and how impacted they are by scale.</p>\n<table><tbody><tr><td><strong>Changes frequently</strong> <strong>/ Impacted by scale</strong></td><td><strong>ü§è</strong> <strong>Somewhat impacted by your scale</strong></td><td><strong>üìà</strong> <strong>Highly impacted by your scale</strong></td></tr><tr><td><strong>ü™® Doesn‚Äôt change</strong></td><td>* Idempotency<br>* Dates<br>* Pause and resume rules</td><td>* Crediting / refunding<br>* Human errors</td></tr><tr><td><strong>ü¶•</strong> <strong>Changes sometimes</strong></td><td>* Proration rules<br>* Customer hierarchies</td><td>* Usage calculations<br>* Payment collection<br>* Pricing changes</td></tr><tr><td><strong>üêá</strong> <strong>Changes frequently</strong></td><td>* Custom deals<br>* Revenue Recognition rules</td><td>* Tax handling<br>* Invoice formatting</td></tr></tbody></table>\n<p>My subjective assessment of why some topics are more difficult than others</p>\n<blockquote>\n<p>tl;dr: <strong>Billing is <em>initially</em> an engineering problem rooted in a very very complex problem space which is really hard to understand even for industry veterans.</strong></p>\n</blockquote>\n<h2 id=\"what-should-you-do-about-it\">What should you do about it?<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#what-should-you-do-about-it\"></a></h2>\n<p>Offload as many problems as you can to someone else. Buy something off-the-shelf. Buy as much as you can.</p>\n<p>I can‚Äôt stress this enough.</p>\n<p>Let <a href=\"https://www.chargebee.com/\">Chargebee</a>, <a href=\"https://www.solvimon.com/\">Solvimon</a>, <a href=\"https://stripe.com/en-dk/billing\">Stripe</a>, <a href=\"https://recurly.com/\">Recurly</a>, <a href=\"https://www.withorb.com/\">Orb</a>, <a href=\"https://metronome.com/\">Metronome</a>, <a href=\"https://www.getlago.com/\">Lago</a>, <a href=\"https://www.togai.com/\">Togai</a> or anyone else manage your billing when you start. 90% of the ‚ÄúSubscription and billing‚Äù section in the diagram above can be handled by any of these.</p>\n<p>Let <a href=\"https://www.stigg.io/\">Stigg</a> handle your pricing pages, experiments, and <a href=\"https://arnon.dk/why-you-should-separate-your-billing-from-entitlement/\">entitlements</a>.</p>\n<p>Let your ERP handle your RevRec/Accounting (or use what‚Äôs built in with something else).</p>\n<p><strong>You should only focus on updating the usage / basic customer lifecycle events, the things that are unique to your product.</strong></p>","noteIndex":{"id":"Iy0MoL0KnL55Br3AfTS2C","title":"Luke","desc":"","updated":1761796791487,"created":1644449449778,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"4e745570ca97988a0362cb939b760952","links":[{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"life-tips","position":{"start":{"line":41,"column":5,"offset":2603},"end":{"line":41,"column":29,"offset":2627},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"life-tips","anchorHeader":"wodenokoto"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-read-in.2025","alias":"What I read in 2025","position":{"start":{"line":70,"column":3,"offset":4333},"end":{"line":70,"column":54,"offset":4384},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-read-in.2025"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-read-in.2024","alias":"2024","position":{"start":{"line":71,"column":5,"offset":4389},"end":{"line":71,"column":41,"offset":4425},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-read-in.2024"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-read-in.2023","alias":"2023","position":{"start":{"line":72,"column":5,"offset":4430},"end":{"line":72,"column":41,"offset":4466},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-read-in.2023"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-read-in.2022","alias":"2022","position":{"start":{"line":73,"column":5,"offset":4471},"end":{"line":73,"column":41,"offset":4507},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-read-in.2022"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-struggled-brag-in","position":{"start":{"line":79,"column":3,"offset":4643},"end":{"line":79,"column":39,"offset":4679},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-struggled-brag-in"}}],"anchors":{"what-i-read-in-past":{"type":"header","text":"What I read in past","value":"what-i-read-in-past","line":74,"column":0,"depth":2}},"children":["zd4mq442jike0pr0wba1u3m","6hzeqsofq67gdk88flxlkhp","778ijii93yu5uwnrwmn5zi4","g1fngdjl25nes6fs3lip602","ZbdkdApFqLdks4Moq92R9","uoc5hhki3o4py15cesddu8q","9qf7j06jtdkm6rnx9ymvwb0","5zn10cvj7ajy2gh2is5nqmg","4qo9ma0z0yu1czns6pxl7y5","ok0e729ho7o09xetujkxc0m","GR5x8HnNFEN6fU2UBSEIK","yirtnlj8q24yutcf3ss1xqy","eq0wc6t7wl2wv221yb68ro4","7x2fnv4j6gxts08qk0jguny","ettkt3iClONnxpbGwBVLl","7l4knev6v613tbuoskvmbdg","hvh5bud6yp7dc89tuh95tr9","4fvoqrplw0cweo554usbjos","f8qsfql0a9v8thpeo82udfa","1swsbrhqi9jk41v9eodyi5q","SQqYupi6EFddTerBA8RRD","hjNeNc1F2JUh0lTWanH4h","qf0l4wbrc9jgooyzexmbq5v","uur1lkol353z9vfeqb3n5bv","cd9n1czq3ursgkby985wkmm","k1sr43vwnfqztwc0s43pkcf","wfde75rhdvq2yfa2zy2q6rv","rjcmdv60jokmbw6zoq8u2ef","ujapvww8o6v3kpmlhtryq4k","pkwewou9d5e8ystswn1j2b4"],"parent":null,"data":{},"body":"\nHi there üëã. I'm a Front-end developer.\n\n---\n\n- Îã®ÏàúÌï®Í≥º Íæ∏Ï§ÄÌï®ÏùÄ Í∞ÄÏû• Ïâ¨Ïö∞Î©¥ÏÑúÎèÑ ÏßÄÌÇ§Í∏∞ Ïñ¥Î†§Ïö¥ ÏõêÏπô.\n\n- ü•± -> ü§îüí°üå± - [On The Death of Daydreaming](https://www.afterbabel.com/p/on-the-death-of-daydreaming)\n  - boredom -> easy fun -> art -> profit?\n\n> I've often described my motivation for building software to others using imagery: I like to go find a secluded beach, build a large, magnificent sand castle, and then walk away. Will anyone notice? Probably not. Will the waves eventually destroy it? Yep. Did I still get immense satisfaction? Absolutely. - [aliasxneo](https://news.ycombinator.com/item?id=41497113)\n\n> We love to see the process, not just the result. The imperfections in your work can be beautiful if they show your struggle for perfection, not a lack of care. - [ralphammer](https://ralphammer.com/is-perfection-boring/)\n\n> Simplicity, even if it sacrifices some ideal functionality has better survival characteristics than the-right-thing. - [The Rise of Worse is Better](https://www.dreamsongs.com/RiseOfWorseIsBetter.html)\n\n> [Roberto Blake was talking about making 100 crappy videos](https://www.youtube.com/watch?v=OnUBaQ1Sp_E) to get better over time. Putting in the reps and improving a little bit each time.\n>\n> Putting in the work without expecting any external reward at first (eg views, followers, likes, etc) will pay off in the long run. - [100 Scrappy Things](https://www.florin-pop.com/blog/100-scrappy-things/)\n\n> Make the difficult habitual, the habitual easy, and the easy beautiful. - [Constantin S. Stanislavski](https://www.goodreads.com/quotes/7102271-make-the-difficult-habitual-the-habitual-easy-and-the-easy)\n\n> A good match is a **structured** dance, where players aim to **score** while they are following well-defined **rules**. This **freedom within a structure** is what makes it fun. - [ralphammer](https://ralphammer.com/how-to-get-started/)\n\n- [Pivot Points](https://longform.asmartbear.com/pivot-points/)\n\n  - non-judgmental aspects of personality that can be strengths in some contexts and weaknesses in others\n  - Pivot Points are fixed in the short term\n\n- [Hedged Bets](https://longform.asmartbear.com/predict-the-future/#hedged-bets)\n  - trading slightly less maximum upside for predictable, net-positive outcomes.\n\n> ‚ÄúMotivation often comes after starting, not before. Action produces momentum.‚Äù\n> [When you start a new habit, it should take less than two minutes to do.](https://jamesclear.com/how-to-stop-procrastinating)\n>\n> - James Clear\n\n> Focus is more about **not** keeping busy when you need to wait for something.  \n> Eat the boredom for a minute.\n>\n> - [[life-tips#wodenokoto]]\n\n> [4 minutes run hard enough to push heart rate to 90%, 3 minutes recover, repeat 4 times](https://news.ycombinator.com/item?id=34213181)\n>\n> - https://www.ntnu.edu/cerg/advice\n> - [Get running with Couch to 5K](https://www.nhs.uk/live-well/exercise/running-and-aerobic-exercises/get-running-with-couch-to-5k/)\n\n> [recommended routine - bodyweightfitness](https://www.reddit.com/r/bodyweightfitness/wiki/kb/recommended_routine/) - I Don't Have This Much Time!\n>\n> - Don't workout at all (saves anywhere from 20 to 60 minutes, but really, really, really, really, really, really, really, really, really not recommended)\n\n> ÎèÑÎ¨¥ÏßÄ ÏùΩÌûàÏßÄ ÏïäÎäî Ï±Ö ÏïûÏóêÏÑú ÎÇ¥Í∞Ä ÌÉùÌïú Î∞©Î≤ïÏùÄ ÌéºÏ≥êÏßÑ ÌéòÏù¥ÏßÄ ÏïûÏóêÏÑú Î©çÎïåÎ¶¨Í∏∞Ïù¥Îã§. Îã§Î•¥Í≤å ÌëúÌòÑÌïòÎ©¥ Ïù¥Î†áÎã§. ÌéºÏ≥êÏßÑ Îëê ÌéòÏù¥ÏßÄ ÏïûÏóêÏÑú Ïò§Îûò Î®∏Î¨ºÍ∏∞.\n>\n> Ï±ÖÏùÑ ÌéºÏ≥êÎÜìÎäî Í≤ÉÏúºÎ°ú Ï∂©Î∂ÑÌïòÎã§. ÏùΩÏßÄ Î™ªÌï¥ÎèÑ Ï¢ãÎã§. Îß§Ïùº Ï†ïÌï¥ÏßÑ ÏßÑÎèÑÎ•º ÎÇòÍ∞ÄÏïº ÌïòÎäî ÌïôÍµê ÏàòÏóÖÏù¥ ÏïÑÎãàÎãàÍπå. ÌïòÏßÄÎßå ÏùΩÏßÄ ÏïäÏïÑÎèÑ Í¥úÏ∞ÆÎã§Í≥† Ìï¥ÏÑú ÌéºÏ≥êÎëêÏßÄÏ°∞Ï∞® ÏïäÏúºÎ©¥ Í≥§ÎûÄÌïòÎã§. Í∞ÄÎä•Ìïú Ìïú ÏûêÏ£º Ï±ÖÏùÑ ÌéºÏ≥êÎëêÎèÑÎ°ù ÌïòÏûê. Ï†ÑÌòÄ ÏùΩÏßÄ ÏïäÍ≥† Î©çÌïòÎãà Î∞îÎùºÎ≥¥Í≥† ÏûàÎã§Í∞Ä Îã§Ïãú ÎçÆÍ≤å ÎêòÎçîÎùºÎèÑ\n>\n> - ÎßâÎßâÌïú ÎèÖÏÑú. ÏãúÎ°úÍµ∞. P.10~13\n\n> I think it should be everyone's primary focus to sleep well, drink water, get outside, get active, and eat generally decently. I hate to say it, but if you're not eating a good amount of vegetables and fruit, decent protein, sleep, etc, no amount of XYZ will catch up to that detriment. - [CE02](https://news.ycombinator.com/item?id=35056071)\n\n> My real battle is doing good versus doing nothing. - [Deirdre Sullivan](https://www.npr.org/2005/08/08/4785079/always-go-to-the-funeral)\n\n[Kind Engineering](https://kind.engineering/) - How To Engineer Kindness\n\n> Sometimes magic is just someone spending more time on something than anyone else might reasonably expect. - [Teller](https://www.goodreads.com/quotes/6641527-sometimes-magic-is-just-someone-spending-more-time-on-something)\n\n---\n\n## What I read in past\n\n- [[What I read in 2025|journal.what-i-read-in.2025]]\n  - [[2024|journal.what-i-read-in.2024]]\n  - [[2023|journal.what-i-read-in.2023]]\n  - [[2022|journal.what-i-read-in.2022]]\n- üìù [Gists](https://gist.github.com/Luke-SNAW)\n- üìú [Journals](https://luke-snaw.github.io/Luke-SNAW__netlify-CMS.github.io/)\n\n---\n\n- [[journal.what-i-struggled-brag-in]]\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":false,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"dendronVersion":"0.115.0","enableFullHierarchyNoteTitle":false,"enablePersistentHistory":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Luke SNAW","description":"Personal knowledge space"},"github":{"enableEditLink":false,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","siteUrl":"https://luke-snaw.github.io/","duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}