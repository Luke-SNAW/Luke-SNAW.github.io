{"pageProps":{"note":{"id":"qJYy3qzZt6rXHWQJPZd9Q","title":"Javascript Performance","desc":"","updated":1736382730440,"created":1644479524849,"custom":{},"fname":"dev.javascript.performance","type":"note","vault":{"fsPath":"vault"},"contentHash":"ea257cac18a254b0812bcc9f41ff1e19","links":[],"anchors":{"collections":{"type":"header","text":"Collections","value":"collections","line":8,"column":0,"depth":2},"speeding-up-the-javascript-ecosystem---the-barrel-file-debacle":{"type":"header","text":"Speeding up the JavaScript ecosystem - The barrel file debacle","value":"speeding-up-the-javascript-ecosystem---the-barrel-file-debacle","line":43,"column":0,"depth":2},"javascript-hydration-is-a-workaround-not-a-solution":{"type":"header","text":"JavaScript Hydration Is a Workaround, Not a Solution","value":"javascript-hydration-is-a-workaround-not-a-solution","line":53,"column":0,"depth":2}},"children":["cyzyd34z7l76mm9k1bgajq0","GdoKhw8BgqVT6ETDgQ7zT","l6abcjmsuol9bri9885t1kf"],"parent":"IowIScQvzEu3KQ4dvwPTt","data":{}},"body":"<h1 id=\"javascript-performance\">Javascript Performance<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#javascript-performance\"></a></h1>\n<h2 id=\"collections\">Collections<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#collections\"></a></h2>\n<ul>\n<li><a href=\"https://web.dev/rail/\">RAIL 모델을 사용한 성능 측정</a>\n<ul>\n<li>응답: 50ms 미만으로 이벤트 처리</li>\n<li>애니메이션: 10ms 안에 프레임 생성</li>\n<li>로드: 5초 이내에 콘텐츠를 전달하고 상호 작용 준비하기</li>\n<li><a href=\"https://web.dev/rail/#chrome-devtools\">RAIL 측정 도구</a></li>\n</ul>\n</li>\n<li><a href=\"https://michaelscodingspot.com/javascript-performance-apis/\">New browser APIs to detect JavaScript performance problems in production</a></li>\n<li><a href=\"https://blogg.bekk.no/how-javascript-engines-achieve-great-performance-fb0b36601557\">How JavaScript engines achieve great performance</a></li>\n<li><a href=\"https://css-tricks.com/add-a-service-worker-to-your-site/\">Add a Service Worker to Your Site</a>: Serve frequently accessed assets from your local cache instead of the network, reducing data usage and improving performance.</li>\n<li><a href=\"https://medium.com/geekculture/12-front-end-performance-patterns-you-need-to-know-def550620464\">12 Front End Performance Patterns You Need to Know</a>\n<ul>\n<li>SSG with SWR</li>\n<li>Use Responsive, Compressed, WebP Formatted Images, Served via a CDN</li>\n<li>Minify, Compress, &#x26; Serve Your Static Code Files via a CDN</li>\n<li>Prefetching</li>\n<li>Lazy Loading</li>\n<li>Caching</li>\n</ul>\n</li>\n<li><a href=\"https://jason-williams.co.uk/speeding-up-vscode-extensions-in-2022\">Speeding up VSCode (extensions) in 2022</a></li>\n<li><a href=\"https://www.patterns.dev/\">Patterns.dev</a> is a free book on design patterns and component patterns for building powerful web apps with vanilla JavaScript and React.</li>\n<li><a href=\"https://www.smashingmagazine.com/2022/06/precise-timing-web-animations-api/\">Precise Timing With Web Animations API</a></li>\n<li><a href=\"https://marvinh.dev/blog/speeding-up-javascript-ecosystem-part-3/\">Speeding up the JavaScript ecosystem - eslint</a></li>\n<li><a href=\"https://itnext.io/mastering-the-art-of-efficient-javascript-dom-manipulation-899b5cbf5a3f\">Mastering the Art of Efficient JavaScript DOM Manipulation</a>\n<ul>\n<li>Use document fragments</li>\n<li>Use event delegation - <code>event.target.matches</code></li>\n</ul>\n</li>\n<li><a href=\"https://csswizardry.com/2023/07/in-defence-of-domcontentloaded/\">In Defence of DOMContentLoaded</a>\n<blockquote>\n<p>The DOMContentLoaded event fires once all of your deferred JavaScript has finished running.</p>\n</blockquote>\n</li>\n<li><a href=\"https://marvinh.dev/blog/speeding-up-javascript-ecosystem-part-6/\">Speeding up the JavaScript ecosystem - Polyfills gone rogue</a>\n<blockquote>\n<p>Many popular npm packages depend on 6-8x more packages than they need to. Most of these are unnecessary polyfills.</p>\n</blockquote>\n</li>\n<li><a href=\"https://romgrk.com/posts/optimizing-javascript\">Optimizing Javascript for fun and for profit</a>\n<ul>\n<li><a href=\"https://romgrk.com/posts/optimizing-javascript#2-avoid-different-shapes\">Avoid different shapes</a></li>\n</ul>\n</li>\n<li><a href=\"https://byteofdev.com/posts/javascript-benchmarking-mess/\">JavaScript Benchmarking Is a Mess</a>\n<ul>\n<li>The garbage collector and its tendency to pause everything randomly</li>\n<li>The JIT compiler’s ability to delete all of your code because it “isn’t necessary”</li>\n<li>Terribly broad flame graphs in most JavaScript devtools</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"speeding-up-the-javascript-ecosystem---the-barrel-file-debacle\"><a href=\"https://marvinh.dev/blog/speeding-up-javascript-ecosystem-part-7/\">Speeding up the JavaScript ecosystem - The barrel file debacle</a><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#speeding-up-the-javascript-ecosystem---the-barrel-file-debacle\"></a></h2>\n<p>The use of barrel files, which only re-export other files, is very common in large JavaScript projects.</p>\n<p>However, they can significantly slow down development tasks by forcing the rebuilding of the entire module graph for every file. This is because JavaScript engines must fully parse and evaluate all import statements.</p>\n<p>The article provides data showing that constructing the module graph for 10 files is much faster than for 30,000 files. Barrel files can cause test runners to waste minutes rebuilding the graph for each test. Linters are also severely impacted, sometimes taking hours to run.</p>\n<p>Removing unnecessary barrel files can dramatically improve performance, speeding up builds by 60-80% according to the author.</p>\n<h2 id=\"javascript-hydration-is-a-workaround-not-a-solution\"><a href=\"https://thenewstack.io/javascript-hydration-is-a-workaround-not-a-solution/\">JavaScript Hydration Is a Workaround, Not a Solution</a><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#javascript-hydration-is-a-workaround-not-a-solution\"></a></h2>\n<p>JavaScript hydration is a technique used to add interactivity to server-rendered HTML pages by attaching event handlers to DOM elements on the client-side.</p>\n<p>However, this process requires recovering the necessary information to rebuild the application state and framework state. The document argues that hydration is an overhead because it duplicates the work already done by the server.</p>\n<p>A better approach called resumability avoids this overhead by serializing and transferring the necessary information from server to client. This allows lazy execution of event handlers on the client-side instead of eagerly executing all components.</p>\n<hr>\n<strong>Children</strong>\n<ol>\n<li><a href=\"/notes/cyzyd34z7l76mm9k1bgajq0\">JavaScript Hydration Is a Workaround Not a Solution</a></li>\n<li><a href=\"/notes/GdoKhw8BgqVT6ETDgQ7zT\">Javascript Performance Tools</a></li>\n<li><a href=\"/notes/l6abcjmsuol9bri9885t1kf\">What's up with monomorphism?</a></li>\n</ol>","noteIndex":{"id":"Iy0MoL0KnL55Br3AfTS2C","title":"Luke","desc":"","updated":1761796791487,"created":1644449449778,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"4e745570ca97988a0362cb939b760952","links":[{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"life-tips","position":{"start":{"line":41,"column":5,"offset":2603},"end":{"line":41,"column":29,"offset":2627},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"life-tips","anchorHeader":"wodenokoto"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-read-in.2025","alias":"What I read in 2025","position":{"start":{"line":70,"column":3,"offset":4333},"end":{"line":70,"column":54,"offset":4384},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-read-in.2025"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-read-in.2024","alias":"2024","position":{"start":{"line":71,"column":5,"offset":4389},"end":{"line":71,"column":41,"offset":4425},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-read-in.2024"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-read-in.2023","alias":"2023","position":{"start":{"line":72,"column":5,"offset":4430},"end":{"line":72,"column":41,"offset":4466},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-read-in.2023"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-read-in.2022","alias":"2022","position":{"start":{"line":73,"column":5,"offset":4471},"end":{"line":73,"column":41,"offset":4507},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-read-in.2022"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-struggled-brag-in","position":{"start":{"line":79,"column":3,"offset":4643},"end":{"line":79,"column":39,"offset":4679},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-struggled-brag-in"}}],"anchors":{"what-i-read-in-past":{"type":"header","text":"What I read in past","value":"what-i-read-in-past","line":74,"column":0,"depth":2}},"children":["zd4mq442jike0pr0wba1u3m","6hzeqsofq67gdk88flxlkhp","778ijii93yu5uwnrwmn5zi4","g1fngdjl25nes6fs3lip602","ZbdkdApFqLdks4Moq92R9","uoc5hhki3o4py15cesddu8q","9qf7j06jtdkm6rnx9ymvwb0","5zn10cvj7ajy2gh2is5nqmg","4qo9ma0z0yu1czns6pxl7y5","ok0e729ho7o09xetujkxc0m","GR5x8HnNFEN6fU2UBSEIK","yirtnlj8q24yutcf3ss1xqy","eq0wc6t7wl2wv221yb68ro4","7x2fnv4j6gxts08qk0jguny","ettkt3iClONnxpbGwBVLl","7l4knev6v613tbuoskvmbdg","hvh5bud6yp7dc89tuh95tr9","4fvoqrplw0cweo554usbjos","f8qsfql0a9v8thpeo82udfa","1swsbrhqi9jk41v9eodyi5q","SQqYupi6EFddTerBA8RRD","hjNeNc1F2JUh0lTWanH4h","qf0l4wbrc9jgooyzexmbq5v","uur1lkol353z9vfeqb3n5bv","cd9n1czq3ursgkby985wkmm","k1sr43vwnfqztwc0s43pkcf","wfde75rhdvq2yfa2zy2q6rv","rjcmdv60jokmbw6zoq8u2ef","ujapvww8o6v3kpmlhtryq4k","pkwewou9d5e8ystswn1j2b4"],"parent":null,"data":{},"body":"\nHi there 👋. I'm a Front-end developer.\n\n---\n\n- 단순함과 꾸준함은 가장 쉬우면서도 지키기 어려운 원칙.\n\n- 🥱 -> 🤔💡🌱 - [On The Death of Daydreaming](https://www.afterbabel.com/p/on-the-death-of-daydreaming)\n  - boredom -> easy fun -> art -> profit?\n\n> I've often described my motivation for building software to others using imagery: I like to go find a secluded beach, build a large, magnificent sand castle, and then walk away. Will anyone notice? Probably not. Will the waves eventually destroy it? Yep. Did I still get immense satisfaction? Absolutely. - [aliasxneo](https://news.ycombinator.com/item?id=41497113)\n\n> We love to see the process, not just the result. The imperfections in your work can be beautiful if they show your struggle for perfection, not a lack of care. - [ralphammer](https://ralphammer.com/is-perfection-boring/)\n\n> Simplicity, even if it sacrifices some ideal functionality has better survival characteristics than the-right-thing. - [The Rise of Worse is Better](https://www.dreamsongs.com/RiseOfWorseIsBetter.html)\n\n> [Roberto Blake was talking about making 100 crappy videos](https://www.youtube.com/watch?v=OnUBaQ1Sp_E) to get better over time. Putting in the reps and improving a little bit each time.\n>\n> Putting in the work without expecting any external reward at first (eg views, followers, likes, etc) will pay off in the long run. - [100 Scrappy Things](https://www.florin-pop.com/blog/100-scrappy-things/)\n\n> Make the difficult habitual, the habitual easy, and the easy beautiful. - [Constantin S. Stanislavski](https://www.goodreads.com/quotes/7102271-make-the-difficult-habitual-the-habitual-easy-and-the-easy)\n\n> A good match is a **structured** dance, where players aim to **score** while they are following well-defined **rules**. This **freedom within a structure** is what makes it fun. - [ralphammer](https://ralphammer.com/how-to-get-started/)\n\n- [Pivot Points](https://longform.asmartbear.com/pivot-points/)\n\n  - non-judgmental aspects of personality that can be strengths in some contexts and weaknesses in others\n  - Pivot Points are fixed in the short term\n\n- [Hedged Bets](https://longform.asmartbear.com/predict-the-future/#hedged-bets)\n  - trading slightly less maximum upside for predictable, net-positive outcomes.\n\n> “Motivation often comes after starting, not before. Action produces momentum.”\n> [When you start a new habit, it should take less than two minutes to do.](https://jamesclear.com/how-to-stop-procrastinating)\n>\n> - James Clear\n\n> Focus is more about **not** keeping busy when you need to wait for something.  \n> Eat the boredom for a minute.\n>\n> - [[life-tips#wodenokoto]]\n\n> [4 minutes run hard enough to push heart rate to 90%, 3 minutes recover, repeat 4 times](https://news.ycombinator.com/item?id=34213181)\n>\n> - https://www.ntnu.edu/cerg/advice\n> - [Get running with Couch to 5K](https://www.nhs.uk/live-well/exercise/running-and-aerobic-exercises/get-running-with-couch-to-5k/)\n\n> [recommended routine - bodyweightfitness](https://www.reddit.com/r/bodyweightfitness/wiki/kb/recommended_routine/) - I Don't Have This Much Time!\n>\n> - Don't workout at all (saves anywhere from 20 to 60 minutes, but really, really, really, really, really, really, really, really, really not recommended)\n\n> 도무지 읽히지 않는 책 앞에서 내가 택한 방법은 펼쳐진 페이지 앞에서 멍때리기이다. 다르게 표현하면 이렇다. 펼쳐진 두 페이지 앞에서 오래 머물기.\n>\n> 책을 펼쳐놓는 것으로 충분하다. 읽지 못해도 좋다. 매일 정해진 진도를 나가야 하는 학교 수업이 아니니까. 하지만 읽지 않아도 괜찮다고 해서 펼쳐두지조차 않으면 곤란하다. 가능한 한 자주 책을 펼쳐두도록 하자. 전혀 읽지 않고 멍하니 바라보고 있다가 다시 덮게 되더라도\n>\n> - 막막한 독서. 시로군. P.10~13\n\n> I think it should be everyone's primary focus to sleep well, drink water, get outside, get active, and eat generally decently. I hate to say it, but if you're not eating a good amount of vegetables and fruit, decent protein, sleep, etc, no amount of XYZ will catch up to that detriment. - [CE02](https://news.ycombinator.com/item?id=35056071)\n\n> My real battle is doing good versus doing nothing. - [Deirdre Sullivan](https://www.npr.org/2005/08/08/4785079/always-go-to-the-funeral)\n\n[Kind Engineering](https://kind.engineering/) - How To Engineer Kindness\n\n> Sometimes magic is just someone spending more time on something than anyone else might reasonably expect. - [Teller](https://www.goodreads.com/quotes/6641527-sometimes-magic-is-just-someone-spending-more-time-on-something)\n\n---\n\n## What I read in past\n\n- [[What I read in 2025|journal.what-i-read-in.2025]]\n  - [[2024|journal.what-i-read-in.2024]]\n  - [[2023|journal.what-i-read-in.2023]]\n  - [[2022|journal.what-i-read-in.2022]]\n- 📝 [Gists](https://gist.github.com/Luke-SNAW)\n- 📜 [Journals](https://luke-snaw.github.io/Luke-SNAW__netlify-CMS.github.io/)\n\n---\n\n- [[journal.what-i-struggled-brag-in]]\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":false,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"dendronVersion":"0.115.0","enableFullHierarchyNoteTitle":false,"enablePersistentHistory":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Luke SNAW","description":"Personal knowledge space"},"github":{"enableEditLink":false,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","siteUrl":"https://luke-snaw.github.io/","duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}