{"pageProps":{"note":{"id":"lptq5mubxtlhliuzn2k56t8","title":"My favorite tricks for navigating the Linux terminal faster","desc":"","updated":1668642334697,"created":1668641971357,"custom":{},"fname":"dev.cli.navigate-linux-terminal-faster","type":"note","vault":{"fsPath":"vault"},"contentHash":"c26d4d23ef5617db712024ce80c6519b","links":[],"anchors":{"navigate-without-the-arrow-keys":{"type":"header","text":"Navigate without the arrow keys","value":"navigate-without-the-arrow-keys","line":10,"column":0,"depth":2},"dont-use-the-backspace-or-delete-keys":{"type":"header","text":"Don't use the backspace or delete keys","value":"dont-use-the-backspace-or-delete-keys","line":17,"column":0,"depth":2},"execute-multiple-commands-in-a-single-line":{"type":"header","text":"Execute multiple commands in a single line","value":"execute-multiple-commands-in-a-single-line","line":26,"column":0,"depth":2},"alias-frequently-used-commands":{"type":"header","text":"Alias frequently used commands","value":"alias-frequently-used-commands","line":49,"column":0,"depth":2},"search-and-run-a-previous-command-without-using-the-arrow-keys":{"type":"header","text":"Search and run a previous command without using the arrow keys","value":"search-and-run-a-previous-command-without-using-the-arrow-keys","line":73,"column":0,"depth":2}},"children":[],"parent":"4ybwuj5k3hrpflb3snik3wh","data":{}},"body":"<h1 id=\"my-favorite-tricks-for-navigating-the-linux-terminal-faster\">My favorite tricks for navigating the Linux terminal faster<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#my-favorite-tricks-for-navigating-the-linux-terminal-faster\"></a></h1>\n<blockquote>\n<p><a href=\"https://opensource.com/article/22/11/navigate-linux-terminal-faster\">https://opensource.com/article/22/11/navigate-linux-terminal-faster</a></p>\n</blockquote>\n<h2 id=\"navigate-without-the-arrow-keys\">Navigate without the arrow keys<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#navigate-without-the-arrow-keys\"></a></h2>\n<p><strong>Shortcuts:</strong></p>\n<ul>\n<li>Instead of <em>Left arrow, left, left, left</em>, use <strong>CTRL+A</strong> to go to the start of the line or <strong>Alt+B</strong> to move back one word.</li>\n<li>Instead of <em>Right arrow, right, right, right</em>, use <strong>CTRL+E</strong> to move to the end of the line, or <strong>Alt+F</strong> to move forward a word.</li>\n</ul>\n<h2 id=\"dont-use-the-backspace-or-delete-keys\">Don't use the backspace or delete keys<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#dont-use-the-backspace-or-delete-keys\"></a></h2>\n<p>Use <strong>CTRL+U</strong> to erase everything from the current cursor position to the beginning of the line. Similarly, <strong>CTRL+K</strong> erases everything from the current cursor position to the end of the line.</p>\n<p><strong>Shortcuts:</strong></p>\n<ul>\n<li>Instead of <em>Backspace</em>, use <strong>CTRL+U</strong>.</li>\n<li>Instead of <em>Delete</em>, use <strong>CTRL+K</strong>.</li>\n</ul>\n<h2 id=\"execute-multiple-commands-in-a-single-line\">Execute multiple commands in a single line<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#execute-multiple-commands-in-a-single-line\"></a></h2>\n<p><strong>Shortcuts:</strong></p>\n<ul>\n<li>\n<p>Instead of:</p>\n<pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span>\n$ <span class=\"token function\">git</span> commit -m <span class=\"token string\">\"message\"</span>\n$ <span class=\"token function\">git</span> push origin main\n</code></pre>\n<p>Use:</p>\n<pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span><span class=\"token punctuation\">;</span><span class=\"token function\">git</span> commit -m <span class=\"token string\">\"message\"</span><span class=\"token punctuation\">;</span><span class=\"token function\">git</span> push origin main\n</code></pre>\n</li>\n<li>\n<p>Use the <code>;</code> symbol to concatenate and execute any number of commands in a single line. To stop the sequence of commands when one fails, use <code>&#x26;&#x26;</code> instead:</p>\n<pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span> <span class=\"token operator\">&#x26;&#x26;</span> <span class=\"token function\">git</span> commit -m <span class=\"token string\">\"message\"</span> <span class=\"token operator\">&#x26;&#x26;</span> <span class=\"token function\">git</span> push origin main\n</code></pre>\n</li>\n</ul>\n<h2 id=\"alias-frequently-used-commands\">Alias frequently used commands<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#alias-frequently-used-commands\"></a></h2>\n<p>To create an alias, open your <code>.bashrc</code> file in your favorite editor and add an alias:</p>\n<pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">gpom</span><span class=\"token operator\">=</span> <span class=\"token string\">\"git push origin main\"</span>\n</code></pre>\n<p>Try creating an alias for anything you run regularly.</p>\n<p>Note: The <code>.bashrc</code> file is for users using the Bash shell. If your system runs a different shell, you probably need to adjust the configuration file you use and possibly the syntax of the alias command. You can check the name of the default shell in your system with the <code>echo $SHELL</code> command.</p>\n<p>After creating the alias, reload your configuration:</p>\n<pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token builtin class-name\">.</span> ~/.bashrc\n</code></pre>\n<p>And then try your new command:</p>\n<pre class=\"language-shell\"><code class=\"language-shell\">$ gpom\n</code></pre>\n<h2 id=\"search-and-run-a-previous-command-without-using-the-arrow-keys\">Search and run a previous command without using the arrow keys<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#search-and-run-a-previous-command-without-using-the-arrow-keys\"></a></h2>\n<p><strong>Shortcuts:</strong></p>\n<ul>\n<li>\n<p>Instead of <em>Up arrow, up, up, up, Enter</em>, type <code>history</code>, and then look for the <code>history-number</code> of the command you want to run:</p>\n<pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token operator\">!</span><span class=\"token punctuation\">{</span>history-number<span class=\"token punctuation\">}</span>\n</code></pre>\n</li>\n<li>\n<p>You can also perform this task a different way: Instead of: <em>Up arrow, up, up, up, Enter</em>, use <strong>CTRL+R</strong> and type the first few letters of the command you want to repeat.</p>\n</li>\n</ul>","noteIndex":{"id":"Iy0MoL0KnL55Br3AfTS2C","title":"Luke","desc":"","updated":1761796791487,"created":1644449449778,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"4e745570ca97988a0362cb939b760952","links":[{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"life-tips","position":{"start":{"line":41,"column":5,"offset":2603},"end":{"line":41,"column":29,"offset":2627},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"life-tips","anchorHeader":"wodenokoto"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-read-in.2025","alias":"What I read in 2025","position":{"start":{"line":70,"column":3,"offset":4333},"end":{"line":70,"column":54,"offset":4384},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-read-in.2025"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-read-in.2024","alias":"2024","position":{"start":{"line":71,"column":5,"offset":4389},"end":{"line":71,"column":41,"offset":4425},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-read-in.2024"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-read-in.2023","alias":"2023","position":{"start":{"line":72,"column":5,"offset":4430},"end":{"line":72,"column":41,"offset":4466},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-read-in.2023"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-read-in.2022","alias":"2022","position":{"start":{"line":73,"column":5,"offset":4471},"end":{"line":73,"column":41,"offset":4507},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-read-in.2022"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-struggled-brag-in","position":{"start":{"line":79,"column":3,"offset":4643},"end":{"line":79,"column":39,"offset":4679},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-struggled-brag-in"}}],"anchors":{"what-i-read-in-past":{"type":"header","text":"What I read in past","value":"what-i-read-in-past","line":74,"column":0,"depth":2}},"children":["zd4mq442jike0pr0wba1u3m","6hzeqsofq67gdk88flxlkhp","778ijii93yu5uwnrwmn5zi4","g1fngdjl25nes6fs3lip602","ZbdkdApFqLdks4Moq92R9","uoc5hhki3o4py15cesddu8q","9qf7j06jtdkm6rnx9ymvwb0","5zn10cvj7ajy2gh2is5nqmg","4qo9ma0z0yu1czns6pxl7y5","ok0e729ho7o09xetujkxc0m","GR5x8HnNFEN6fU2UBSEIK","yirtnlj8q24yutcf3ss1xqy","eq0wc6t7wl2wv221yb68ro4","7x2fnv4j6gxts08qk0jguny","ettkt3iClONnxpbGwBVLl","7l4knev6v613tbuoskvmbdg","hvh5bud6yp7dc89tuh95tr9","4fvoqrplw0cweo554usbjos","f8qsfql0a9v8thpeo82udfa","1swsbrhqi9jk41v9eodyi5q","SQqYupi6EFddTerBA8RRD","hjNeNc1F2JUh0lTWanH4h","qf0l4wbrc9jgooyzexmbq5v","uur1lkol353z9vfeqb3n5bv","cd9n1czq3ursgkby985wkmm","k1sr43vwnfqztwc0s43pkcf","wfde75rhdvq2yfa2zy2q6rv","rjcmdv60jokmbw6zoq8u2ef","ujapvww8o6v3kpmlhtryq4k","pkwewou9d5e8ystswn1j2b4"],"parent":null,"data":{},"body":"\nHi there 👋. I'm a Front-end developer.\n\n---\n\n- 단순함과 꾸준함은 가장 쉬우면서도 지키기 어려운 원칙.\n\n- 🥱 -> 🤔💡🌱 - [On The Death of Daydreaming](https://www.afterbabel.com/p/on-the-death-of-daydreaming)\n  - boredom -> easy fun -> art -> profit?\n\n> I've often described my motivation for building software to others using imagery: I like to go find a secluded beach, build a large, magnificent sand castle, and then walk away. Will anyone notice? Probably not. Will the waves eventually destroy it? Yep. Did I still get immense satisfaction? Absolutely. - [aliasxneo](https://news.ycombinator.com/item?id=41497113)\n\n> We love to see the process, not just the result. The imperfections in your work can be beautiful if they show your struggle for perfection, not a lack of care. - [ralphammer](https://ralphammer.com/is-perfection-boring/)\n\n> Simplicity, even if it sacrifices some ideal functionality has better survival characteristics than the-right-thing. - [The Rise of Worse is Better](https://www.dreamsongs.com/RiseOfWorseIsBetter.html)\n\n> [Roberto Blake was talking about making 100 crappy videos](https://www.youtube.com/watch?v=OnUBaQ1Sp_E) to get better over time. Putting in the reps and improving a little bit each time.\n>\n> Putting in the work without expecting any external reward at first (eg views, followers, likes, etc) will pay off in the long run. - [100 Scrappy Things](https://www.florin-pop.com/blog/100-scrappy-things/)\n\n> Make the difficult habitual, the habitual easy, and the easy beautiful. - [Constantin S. Stanislavski](https://www.goodreads.com/quotes/7102271-make-the-difficult-habitual-the-habitual-easy-and-the-easy)\n\n> A good match is a **structured** dance, where players aim to **score** while they are following well-defined **rules**. This **freedom within a structure** is what makes it fun. - [ralphammer](https://ralphammer.com/how-to-get-started/)\n\n- [Pivot Points](https://longform.asmartbear.com/pivot-points/)\n\n  - non-judgmental aspects of personality that can be strengths in some contexts and weaknesses in others\n  - Pivot Points are fixed in the short term\n\n- [Hedged Bets](https://longform.asmartbear.com/predict-the-future/#hedged-bets)\n  - trading slightly less maximum upside for predictable, net-positive outcomes.\n\n> “Motivation often comes after starting, not before. Action produces momentum.”\n> [When you start a new habit, it should take less than two minutes to do.](https://jamesclear.com/how-to-stop-procrastinating)\n>\n> - James Clear\n\n> Focus is more about **not** keeping busy when you need to wait for something.  \n> Eat the boredom for a minute.\n>\n> - [[life-tips#wodenokoto]]\n\n> [4 minutes run hard enough to push heart rate to 90%, 3 minutes recover, repeat 4 times](https://news.ycombinator.com/item?id=34213181)\n>\n> - https://www.ntnu.edu/cerg/advice\n> - [Get running with Couch to 5K](https://www.nhs.uk/live-well/exercise/running-and-aerobic-exercises/get-running-with-couch-to-5k/)\n\n> [recommended routine - bodyweightfitness](https://www.reddit.com/r/bodyweightfitness/wiki/kb/recommended_routine/) - I Don't Have This Much Time!\n>\n> - Don't workout at all (saves anywhere from 20 to 60 minutes, but really, really, really, really, really, really, really, really, really not recommended)\n\n> 도무지 읽히지 않는 책 앞에서 내가 택한 방법은 펼쳐진 페이지 앞에서 멍때리기이다. 다르게 표현하면 이렇다. 펼쳐진 두 페이지 앞에서 오래 머물기.\n>\n> 책을 펼쳐놓는 것으로 충분하다. 읽지 못해도 좋다. 매일 정해진 진도를 나가야 하는 학교 수업이 아니니까. 하지만 읽지 않아도 괜찮다고 해서 펼쳐두지조차 않으면 곤란하다. 가능한 한 자주 책을 펼쳐두도록 하자. 전혀 읽지 않고 멍하니 바라보고 있다가 다시 덮게 되더라도\n>\n> - 막막한 독서. 시로군. P.10~13\n\n> I think it should be everyone's primary focus to sleep well, drink water, get outside, get active, and eat generally decently. I hate to say it, but if you're not eating a good amount of vegetables and fruit, decent protein, sleep, etc, no amount of XYZ will catch up to that detriment. - [CE02](https://news.ycombinator.com/item?id=35056071)\n\n> My real battle is doing good versus doing nothing. - [Deirdre Sullivan](https://www.npr.org/2005/08/08/4785079/always-go-to-the-funeral)\n\n[Kind Engineering](https://kind.engineering/) - How To Engineer Kindness\n\n> Sometimes magic is just someone spending more time on something than anyone else might reasonably expect. - [Teller](https://www.goodreads.com/quotes/6641527-sometimes-magic-is-just-someone-spending-more-time-on-something)\n\n---\n\n## What I read in past\n\n- [[What I read in 2025|journal.what-i-read-in.2025]]\n  - [[2024|journal.what-i-read-in.2024]]\n  - [[2023|journal.what-i-read-in.2023]]\n  - [[2022|journal.what-i-read-in.2022]]\n- 📝 [Gists](https://gist.github.com/Luke-SNAW)\n- 📜 [Journals](https://luke-snaw.github.io/Luke-SNAW__netlify-CMS.github.io/)\n\n---\n\n- [[journal.what-i-struggled-brag-in]]\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":false,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"dendronVersion":"0.115.0","enableFullHierarchyNoteTitle":false,"enablePersistentHistory":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Luke SNAW","description":"Personal knowledge space"},"github":{"enableEditLink":false,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","siteUrl":"https://luke-snaw.github.io/","duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}