{"pageProps":{"note":{"id":"ycff7izst5j0qjrtwjc576a","title":"Algorithms we develop software by","desc":"","updated":1724136327223,"created":1724136211370,"custom":{},"fname":"dev.software-pathfinding","type":"note","vault":{"fsPath":"vault"},"contentHash":"559f9f45793e5d1ed62695510f0dc5b3","links":[],"anchors":{"그의-방법":{"type":"header","text":"그의 방법","value":"그의-방법","line":14,"column":0,"depth":2},"방법에-대한-생각":{"type":"header","text":"방법에 대한 생각","value":"방법에-대한-생각","line":20,"column":0,"depth":2},"모든-것을-두-번-작성":{"type":"header","text":"\"모든 것을 두 번 작성\"","value":"모든-것을-두-번-작성","line":22,"column":0,"depth":3},"양이-질을-가진다":{"type":"header","text":"\"양이 질을 가진다\"","value":"양이-질을-가진다","line":29,"column":0,"depth":3},"총을-머리에-대고-휴리스틱과의-비교":{"type":"header","text":"\"총을 머리에 대고\" 휴리스틱과의 비교","value":"총을-머리에-대고-휴리스틱과의-비교","line":36,"column":0,"depth":3},"경로-찾기":{"type":"header","text":"경로 찾기","value":"경로-찾기","line":43,"column":0,"depth":2},"hn":{"type":"header","text":"HN","value":"hn","line":51,"column":0,"depth":2}},"children":[],"parent":"ZbdkdApFqLdks4Moq92R9","data":{}},"body":"<h1 id=\"algorithms-we-develop-software-by\">Algorithms we develop software by<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#algorithms-we-develop-software-by\"></a></h1>\n<blockquote>\n<p><a href=\"https://grantslatton.com/software-pathfinding\">https://grantslatton.com/software-pathfinding</a></p>\n</blockquote>\n<blockquote>\n<p><a href=\"https://news.hada.io/topic?id=16383\">https://news.hada.io/topic?id=16383</a></p>\n</blockquote>\n<ul>\n<li>최근 저명한 기술 CEO와 엔지니어와의 대화에서 흥미로운 소프트웨어 개발 방법론을 들음. 이 방법론을 통해 다른 휴리스틱과 일반화에 대해 생각하게 됨.</li>\n</ul>\n<h2 id=\"그의-방법\">그의 방법<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#그의-방법\"></a></h2>\n<ul>\n<li>하루를 시작할 때 기능 작업을 시작. 하루가 끝날 때까지 완료하지 못하면 모두 삭제하고 다음 날 다시 시작. 작성한 단위 테스트는 유지 가능.</li>\n<li>며칠 후에도 기능을 구현하지 못하면, 그 기능을 가능하게 할 기반, 인프라 또는 리팩토링을 생각하고 이를 구현한 후 기능으로 돌아옴.</li>\n<li>이 방법은 90년대 후반과 00년대 초반의 익스트림 프로그래밍 운동과 유사함.</li>\n</ul>\n<h2 id=\"방법에-대한-생각\">방법에 대한 생각<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#방법에-대한-생각\"></a></h2>\n<h3 id=\"모든-것을-두-번-작성\">\"모든 것을 두 번 작성\"<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#모든-것을-두-번-작성\"></a></h3>\n<ul>\n<li>주니어 엔지니어에게 주는 조언: 문제를 해결하고 코드를 브랜치에 저장한 후 다시 작성.</li>\n<li>노트북이 고장난 후 이 방법을 우연히 발견. 재작성은 초기 구현의 25% 시간만 소요되었고 결과는 훨씬 나아짐.</li>\n<li>1.25배의 시간으로 2배 더 높은 품질의 코드를 얻을 수 있음. 장기 유지보수가 필요한 프로젝트에 유용.</li>\n<li>\"매일 다시 시작\" 방법은 이보다 더 극단적. 재작성할 때마다 더 매끄러운 해결책을 찾게 됨.</li>\n</ul>\n<h3 id=\"양이-질을-가진다\">\"양이 질을 가진다\"<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#양이-질을-가진다\"></a></h3>\n<ul>\n<li>스탈린의 인용구가 소프트웨어 엔지니어에게 적용됨. 주니어 엔지니어에게는 첫 10만 줄의 코드가 필수적.</li>\n<li>\"매일 다시 시작\" 방법은 10만 줄을 더 빨리 작성하게 도움.</li>\n<li>같은 문제를 반복해서 해결하는 것이 패턴을 기억하는 데 유익함.</li>\n<li>5천 줄의 완벽한 코드로 주요 패턴을 모두 볼 수 있음. 나머지 9만 5천 줄은 반복을 통해 뉴런을 재배치함.</li>\n</ul>\n<h3 id=\"총을-머리에-대고-휴리스틱과의-비교\">\"총을 머리에 대고\" 휴리스틱과의 비교<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#총을-머리에-대고-휴리스틱과의-비교\"></a></h3>\n<ul>\n<li>문제 해결책을 제시한 사람에게 \"24시간 내에 끝내야 한다면 어떻게 할 것인가?\"라고 질문.</li>\n<li>이 방법은 프레임과 앵커링 편향을 깨뜨림. 종종 몇 분 만에 하루 만에 끝낼 수 있는 계획을 유도할 수 있음.</li>\n<li>실제로 하루 만에 끝낼 수 있는 계획은 아니지만, 새로운 해결책은 종종 며칠 내에 완료 가능.</li>\n<li>이 생각 실험의 목적은 실제 해결책을 생성하는 것이 아니라, 해결책의 하한을 설정하는 것임.</li>\n</ul>\n<h2 id=\"경로-찾기\">경로 찾기<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#경로-찾기\"></a></h2>\n<ul>\n<li>문제 공간에서 경로를 찾는 것이 핵심. 각 경로는 해결책이며, 엔지니어의 역할은 최상의 경로를 찾는 것.</li>\n<li>이러한 휴리스틱과 다양한 경로 찾기 알고리듬 간의 유사성을 생각해 볼 가치가 있음.</li>\n<li>엔지니어링 휴리스틱도 마찬가지로, 더 나은 엔지니어가 되는 것은 문제 공간에서 더 나은 경로를 찾는 것임.</li>\n</ul>\n<hr>\n<h2 id=\"hn\"><a href=\"https://news.ycombinator.com/item?id=41284409\">HN</a><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#hn\"></a></h2>\n<ul>\n<li>새로운 기능을 두 번 작성하는 것이 좋은 전략임. 하지만 비즈니스 개발자나 프로젝트 매니저에게는 불필요한 지연으로 보일 수 있음\n<ul>\n<li>기능을 처음부터 끝까지 작성하면 논리를 정리하고 리팩토링하는 데 도움이 됨</li>\n<li>재작성은 논리 흐름을 명확히 하고, 더 선형적으로 계획을 따를 수 있게 함</li>\n<li>나중에 대규모 리팩토링의 필요성을 줄이는 경향이 있음</li>\n</ul>\n</li>\n<li>\"24시간 내에 끝내야 한다면?\"이라는 질문은 프로젝트 매니저가 할 수 없는 질문임\n<ul>\n<li>이는 개인적인 교육적 연습이지, 일을 더 빨리 끝내기 위한 방법이 아님</li>\n</ul>\n</li>\n<li>좋은 코드는 적절한 추상화를 선택하여 작성됨\n<ul>\n<li>적절한 추상화를 선택하려면 전체를 알아야 함</li>\n<li>다른 공학 분야에서는 CAD 레이아웃 같은 좋은 청사진 패러다임을 사용함</li>\n<li>소프트웨어에서는 이러한 청사진이 부족함</li>\n<li>경험이 중요한 이유는 균형을 맞추는 데 있음</li>\n</ul>\n</li>\n<li>유능한 동료가 있으면 단시간에 무엇을 할 수 있는지 보여줄 수 있음\n<ul>\n<li>빠르게 작업하는 것이 중요한 이유는 많음</li>\n<li>자동차 수리와 마찬가지로, 시간이 오래 걸릴수록 재조립을 잊을 가능성이 높음</li>\n<li>하루 만에 기능을 구현하면 위험이 줄어듦</li>\n<li>도구에 대한 확실한 이해와 신뢰할 수 있는 CI/CD 프로세스가 필요함</li>\n</ul>\n</li>\n<li>소프트웨어를 두 번 작성하는 것이 좋다는 의견에 공감함\n<ul>\n<li>한 번 작성한 코드를 잃어버린 후 다시 작성할 의욕을 잃음</li>\n<li>다시 작성하려고 하면 집중이 안 되고, 접근 방식을 기억하지 못함</li>\n</ul>\n</li>\n<li>며칠 후에도 기능을 구현할 수 없다면, 필요한 인프라나 리팩토링을 먼저 수행해야 함\n<ul>\n<li>도구의 '어휘'를 구축하고 유지하는 것이 중요함</li>\n</ul>\n</li>\n<li>\"24시간 내에\"와 \"모든 것을 두 번 작성\"은 서로 연관이 있음\n<ul>\n<li>코드를 대충 작성하면 결국 다시 작성하게 됨</li>\n</ul>\n</li>\n<li>이 게시물은 최고의 \"프로그래밍 조언\" 중 하나임\n<ul>\n<li>grug brained developer의 조언과 비슷함</li>\n</ul>\n</li>\n<li>때로는 문제를 해결하기 위해 백그라운드 스레드를 돌리는 것이 필요함\n<ul>\n<li>경험이 많은 사람은 이러한 문제를 더 빨리 식별할 수 있음</li>\n<li>문제를 잠시 놔두고 다른 일을 하는 것이 더 나을 때가 있음</li>\n</ul>\n</li>\n<li>다음 접근 방식이 유용함\n<ul>\n<li>문제를 해결할 여러 아이디어를 먼저 작성함</li>\n<li>작업을 '한 세션 내에 완료할 수 있는' 방식으로 나눔</li>\n<li>세션이 끝날 때마다 코드가 항상 '작동'하도록 구현함</li>\n<li>세션이 끝날 때마다 주석이나 README에 브레인 덤프를 작성함</li>\n</ul>\n</li>\n</ul>","noteIndex":{"id":"Iy0MoL0KnL55Br3AfTS2C","title":"Luke","desc":"","updated":1761796791487,"created":1644449449778,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"4e745570ca97988a0362cb939b760952","links":[{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"life-tips","position":{"start":{"line":41,"column":5,"offset":2603},"end":{"line":41,"column":29,"offset":2627},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"life-tips","anchorHeader":"wodenokoto"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-read-in.2025","alias":"What I read in 2025","position":{"start":{"line":70,"column":3,"offset":4333},"end":{"line":70,"column":54,"offset":4384},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-read-in.2025"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-read-in.2024","alias":"2024","position":{"start":{"line":71,"column":5,"offset":4389},"end":{"line":71,"column":41,"offset":4425},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-read-in.2024"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-read-in.2023","alias":"2023","position":{"start":{"line":72,"column":5,"offset":4430},"end":{"line":72,"column":41,"offset":4466},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-read-in.2023"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-read-in.2022","alias":"2022","position":{"start":{"line":73,"column":5,"offset":4471},"end":{"line":73,"column":41,"offset":4507},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-read-in.2022"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-struggled-brag-in","position":{"start":{"line":79,"column":3,"offset":4643},"end":{"line":79,"column":39,"offset":4679},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-struggled-brag-in"}}],"anchors":{"what-i-read-in-past":{"type":"header","text":"What I read in past","value":"what-i-read-in-past","line":74,"column":0,"depth":2}},"children":["zd4mq442jike0pr0wba1u3m","6hzeqsofq67gdk88flxlkhp","778ijii93yu5uwnrwmn5zi4","g1fngdjl25nes6fs3lip602","ZbdkdApFqLdks4Moq92R9","uoc5hhki3o4py15cesddu8q","9qf7j06jtdkm6rnx9ymvwb0","5zn10cvj7ajy2gh2is5nqmg","4qo9ma0z0yu1czns6pxl7y5","ok0e729ho7o09xetujkxc0m","GR5x8HnNFEN6fU2UBSEIK","yirtnlj8q24yutcf3ss1xqy","eq0wc6t7wl2wv221yb68ro4","7x2fnv4j6gxts08qk0jguny","ettkt3iClONnxpbGwBVLl","7l4knev6v613tbuoskvmbdg","hvh5bud6yp7dc89tuh95tr9","4fvoqrplw0cweo554usbjos","f8qsfql0a9v8thpeo82udfa","1swsbrhqi9jk41v9eodyi5q","SQqYupi6EFddTerBA8RRD","hjNeNc1F2JUh0lTWanH4h","qf0l4wbrc9jgooyzexmbq5v","uur1lkol353z9vfeqb3n5bv","cd9n1czq3ursgkby985wkmm","k1sr43vwnfqztwc0s43pkcf","wfde75rhdvq2yfa2zy2q6rv","rjcmdv60jokmbw6zoq8u2ef","ujapvww8o6v3kpmlhtryq4k","pkwewou9d5e8ystswn1j2b4"],"parent":null,"data":{},"body":"\nHi there 👋. I'm a Front-end developer.\n\n---\n\n- 단순함과 꾸준함은 가장 쉬우면서도 지키기 어려운 원칙.\n\n- 🥱 -> 🤔💡🌱 - [On The Death of Daydreaming](https://www.afterbabel.com/p/on-the-death-of-daydreaming)\n  - boredom -> easy fun -> art -> profit?\n\n> I've often described my motivation for building software to others using imagery: I like to go find a secluded beach, build a large, magnificent sand castle, and then walk away. Will anyone notice? Probably not. Will the waves eventually destroy it? Yep. Did I still get immense satisfaction? Absolutely. - [aliasxneo](https://news.ycombinator.com/item?id=41497113)\n\n> We love to see the process, not just the result. The imperfections in your work can be beautiful if they show your struggle for perfection, not a lack of care. - [ralphammer](https://ralphammer.com/is-perfection-boring/)\n\n> Simplicity, even if it sacrifices some ideal functionality has better survival characteristics than the-right-thing. - [The Rise of Worse is Better](https://www.dreamsongs.com/RiseOfWorseIsBetter.html)\n\n> [Roberto Blake was talking about making 100 crappy videos](https://www.youtube.com/watch?v=OnUBaQ1Sp_E) to get better over time. Putting in the reps and improving a little bit each time.\n>\n> Putting in the work without expecting any external reward at first (eg views, followers, likes, etc) will pay off in the long run. - [100 Scrappy Things](https://www.florin-pop.com/blog/100-scrappy-things/)\n\n> Make the difficult habitual, the habitual easy, and the easy beautiful. - [Constantin S. Stanislavski](https://www.goodreads.com/quotes/7102271-make-the-difficult-habitual-the-habitual-easy-and-the-easy)\n\n> A good match is a **structured** dance, where players aim to **score** while they are following well-defined **rules**. This **freedom within a structure** is what makes it fun. - [ralphammer](https://ralphammer.com/how-to-get-started/)\n\n- [Pivot Points](https://longform.asmartbear.com/pivot-points/)\n\n  - non-judgmental aspects of personality that can be strengths in some contexts and weaknesses in others\n  - Pivot Points are fixed in the short term\n\n- [Hedged Bets](https://longform.asmartbear.com/predict-the-future/#hedged-bets)\n  - trading slightly less maximum upside for predictable, net-positive outcomes.\n\n> “Motivation often comes after starting, not before. Action produces momentum.”\n> [When you start a new habit, it should take less than two minutes to do.](https://jamesclear.com/how-to-stop-procrastinating)\n>\n> - James Clear\n\n> Focus is more about **not** keeping busy when you need to wait for something.  \n> Eat the boredom for a minute.\n>\n> - [[life-tips#wodenokoto]]\n\n> [4 minutes run hard enough to push heart rate to 90%, 3 minutes recover, repeat 4 times](https://news.ycombinator.com/item?id=34213181)\n>\n> - https://www.ntnu.edu/cerg/advice\n> - [Get running with Couch to 5K](https://www.nhs.uk/live-well/exercise/running-and-aerobic-exercises/get-running-with-couch-to-5k/)\n\n> [recommended routine - bodyweightfitness](https://www.reddit.com/r/bodyweightfitness/wiki/kb/recommended_routine/) - I Don't Have This Much Time!\n>\n> - Don't workout at all (saves anywhere from 20 to 60 minutes, but really, really, really, really, really, really, really, really, really not recommended)\n\n> 도무지 읽히지 않는 책 앞에서 내가 택한 방법은 펼쳐진 페이지 앞에서 멍때리기이다. 다르게 표현하면 이렇다. 펼쳐진 두 페이지 앞에서 오래 머물기.\n>\n> 책을 펼쳐놓는 것으로 충분하다. 읽지 못해도 좋다. 매일 정해진 진도를 나가야 하는 학교 수업이 아니니까. 하지만 읽지 않아도 괜찮다고 해서 펼쳐두지조차 않으면 곤란하다. 가능한 한 자주 책을 펼쳐두도록 하자. 전혀 읽지 않고 멍하니 바라보고 있다가 다시 덮게 되더라도\n>\n> - 막막한 독서. 시로군. P.10~13\n\n> I think it should be everyone's primary focus to sleep well, drink water, get outside, get active, and eat generally decently. I hate to say it, but if you're not eating a good amount of vegetables and fruit, decent protein, sleep, etc, no amount of XYZ will catch up to that detriment. - [CE02](https://news.ycombinator.com/item?id=35056071)\n\n> My real battle is doing good versus doing nothing. - [Deirdre Sullivan](https://www.npr.org/2005/08/08/4785079/always-go-to-the-funeral)\n\n[Kind Engineering](https://kind.engineering/) - How To Engineer Kindness\n\n> Sometimes magic is just someone spending more time on something than anyone else might reasonably expect. - [Teller](https://www.goodreads.com/quotes/6641527-sometimes-magic-is-just-someone-spending-more-time-on-something)\n\n---\n\n## What I read in past\n\n- [[What I read in 2025|journal.what-i-read-in.2025]]\n  - [[2024|journal.what-i-read-in.2024]]\n  - [[2023|journal.what-i-read-in.2023]]\n  - [[2022|journal.what-i-read-in.2022]]\n- 📝 [Gists](https://gist.github.com/Luke-SNAW)\n- 📜 [Journals](https://luke-snaw.github.io/Luke-SNAW__netlify-CMS.github.io/)\n\n---\n\n- [[journal.what-i-struggled-brag-in]]\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":false,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"dendronVersion":"0.115.0","enableFullHierarchyNoteTitle":false,"enablePersistentHistory":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Luke SNAW","description":"Personal knowledge space"},"github":{"enableEditLink":false,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","siteUrl":"https://luke-snaw.github.io/","duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}