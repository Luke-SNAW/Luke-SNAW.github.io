{"pageProps":{"note":{"id":"oupetc54rid9460a481qly3","title":"Node.js Tools","desc":"","updated":1723428233286,"created":1646012035359,"custom":{},"fname":"dev.javascript.node.tools","type":"note","vault":{"fsPath":"vault"},"contentHash":"e784b0a9eadddd0cbd4d1c0cdaf025ae","links":[],"anchors":{"collections":{"type":"header","text":"Collections","value":"collections","line":8,"column":0,"depth":2},"cli":{"type":"header","text":"CLI","value":"cli","line":22,"column":0,"depth":2},"npm":{"type":"header","text":"NPM","value":"npm","line":31,"column":0,"depth":2},"validation":{"type":"header","text":"Validation","value":"validation","line":35,"column":0,"depth":2},"log":{"type":"header","text":"Log","value":"log","line":41,"column":0,"depth":2},"auth":{"type":"header","text":"Auth","value":"auth","line":46,"column":0,"depth":2},"framework":{"type":"header","text":"Framework","value":"framework","line":50,"column":0,"depth":2}},"children":["et7kp8oq15hay41wj8ihdku"],"parent":"dnqq11162p04a178qiuu23x","data":{}},"body":"<h1 id=\"nodejs-tools\">Node.js Tools<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#nodejs-tools\"></a></h1>\n<h2 id=\"collections\">Collections<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#collections\"></a></h2>\n<ul>\n<li><a href=\"https://2ality.com/2021/12/node-protocol-imports.html\">New in Node.js: <code>node:</code> protocol imports</a></li>\n<li><a href=\"https://blog.bitsrc.io/5-express-middleware-libraries-every-developer-should-know-94e2728f7503\">5 Express Middleware Libraries Every Developer Should Know</a>\n<ol>\n<li>Helmet — Increase HTTP Header Security</li>\n<li>Cookie-parser — Parse Cookies</li>\n<li>Passport — Access to Wide Range of Authentication Mechanisms</li>\n<li>Morgan— Log HTTP Requests and Errors</li>\n<li>CORS — Allow or Restrict Requested Resources on a Web Server</li>\n</ol>\n</li>\n<li><a href=\"https://github.com/WiseLibs/better-sqlite3\">better-sqlite3</a> - The fastest and simplest library for SQLite3 in Node.js.</li>\n<li><a href=\"https://runtime-compat.unjs.io/\">Runtime compatibility across JavaScript runtimes</a>\n<ul>\n<li><a href=\"https://node.green/\">https://node.green/</a></li>\n</ul>\n</li>\n<li><a href=\"https://nodejstoolbox.com/\">Node.js Toolbox</a> - Find actively maintained and popular libraries in the Node.js ecosystem</li>\n</ul>\n<h2 id=\"cli\">CLI<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#cli\"></a></h2>\n<ul>\n<li><a href=\"https://pm2.keymetrics.io/\">PM2</a> is a production process manager for Node.js applications with a built-in load balancer. It allows you to keep applications alive forever, to reload them without downtime and to facilitate common system admin tasks.</li>\n<li><a href=\"https://www.peerbits.com/blog/development-practices-for-nodejs-developers.html\">Development practices our NodeJS developers follow</a>\n<ul>\n<li>Use efficient tools to restart your app\n<ul>\n<li>Nodemon: Nodemon automatically restarts the application whenever a fresh change is made to the code. You can initialize Nodemon by replacing the node with nodemon on the command line.</li>\n<li>Forever: Forever provides automatic restarting along with additional configuration options. These options include writing logs and setting a working directory that would normally be printed on stdout to a file.</li>\n<li>PM2: PM2 is an excellent process management tool you can use to better up your development. It allows more control and features to manage processes running in production compared to the other two. Furthermore, it ensures that the application restarts as quickly as possible in case the server it’s running on goes down.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"npm\">NPM<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#npm\"></a></h2>\n<ul>\n<li><a href=\"https://blog.logrocket.com/npm-query-better-dependency-management/\">Using <code>npm query</code> for better dependency management</a></li>\n</ul>\n<h2 id=\"validation\">Validation<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#validation\"></a></h2>\n<ul>\n<li><a href=\"https://github.com/sideway/joi\">joi</a> - The most powerful data validation library for JS</li>\n<li><a href=\"https://github.com/ajv-validator/ajv\">Ajv JSON schema validator</a> - The fastest JSON schema Validator. Supports JSON Schema draft-04/06/07/2019-09/2020-12 and JSON Type Definition (RFC8927)</li>\n<li><a href=\"https://github.com/express-validator/express-validator\">express-validator</a> - An express.js middleware for validator.js.</li>\n</ul>\n<h2 id=\"log\">Log<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#log\"></a></h2>\n<ul>\n<li><a href=\"https://github.com/winstonjs/winston\">winston</a> is designed to be a simple and universal logging library with support for multiple transports. A transport is essentially a storage device for your logs. Each winston logger can have multiple transports (see: <a href=\"https://github.com/winstonjs/winston#transports\">Transports</a>) configured at different levels (see: <a href=\"https://github.com/winstonjs/winston#logging-levels\">Logging levels</a>). For example, one may want error logs to be stored in a persistent remote location (like a database), but all logs output to the console or a local file.</li>\n<li>🌲 <a href=\"https://github.com/pinojs/pino\">pino</a> - super fast, all natural json logger</li>\n</ul>\n<h2 id=\"auth\">Auth<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#auth\"></a></h2>\n<ul>\n<li><a href=\"https://github.com/auth0/node-jsonwebtoken\">node-jsonwebtoken</a> - JsonWebToken implementation for node.js <a href=\"http://self-issued.info/docs/draft-ietf-oauth-json-web-token.html\">http://self-issued.info/docs/draft-ietf-oauth-json-web-token.html</a></li>\n</ul>\n<h2 id=\"framework\">Framework<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#framework\"></a></h2>\n<blockquote>\n<p><a href=\"https://news.ycombinator.com/item?id=33138903\">https://news.ycombinator.com/item?id=33138903</a></p>\n</blockquote>\n<p>There is a Laravel for Node.js - <a href=\"https://adonisjs.com/\">https://adonisjs.com/</a></p>\n<p>+1 for Adonis. I've been using it for some time, together with unpoly + alpinejs and it's a real pleasure. I'm really productive with this stack. In fact, their docs site is built using these tools: <a href=\"https://github.com/adonisjs/docs.adonisjs.com/blob/develop/package.json\">https://github.com/adonisjs/docs.adonisjs.com/blob/develop/package.json</a></p>\n<hr>\n<strong>Children</strong>\n<ol>\n<li><a href=\"/notes/et7kp8oq15hay41wj8ihdku\">Process Management in Node.js with PM2</a></li>\n</ol>","noteIndex":{"id":"Iy0MoL0KnL55Br3AfTS2C","title":"Luke","desc":"","updated":1761796791487,"created":1644449449778,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"4e745570ca97988a0362cb939b760952","links":[{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"life-tips","position":{"start":{"line":41,"column":5,"offset":2603},"end":{"line":41,"column":29,"offset":2627},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"life-tips","anchorHeader":"wodenokoto"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-read-in.2025","alias":"What I read in 2025","position":{"start":{"line":70,"column":3,"offset":4333},"end":{"line":70,"column":54,"offset":4384},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-read-in.2025"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-read-in.2024","alias":"2024","position":{"start":{"line":71,"column":5,"offset":4389},"end":{"line":71,"column":41,"offset":4425},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-read-in.2024"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-read-in.2023","alias":"2023","position":{"start":{"line":72,"column":5,"offset":4430},"end":{"line":72,"column":41,"offset":4466},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-read-in.2023"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-read-in.2022","alias":"2022","position":{"start":{"line":73,"column":5,"offset":4471},"end":{"line":73,"column":41,"offset":4507},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-read-in.2022"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-struggled-brag-in","position":{"start":{"line":79,"column":3,"offset":4643},"end":{"line":79,"column":39,"offset":4679},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-struggled-brag-in"}}],"anchors":{"what-i-read-in-past":{"type":"header","text":"What I read in past","value":"what-i-read-in-past","line":74,"column":0,"depth":2}},"children":["zd4mq442jike0pr0wba1u3m","6hzeqsofq67gdk88flxlkhp","778ijii93yu5uwnrwmn5zi4","g1fngdjl25nes6fs3lip602","ZbdkdApFqLdks4Moq92R9","uoc5hhki3o4py15cesddu8q","9qf7j06jtdkm6rnx9ymvwb0","5zn10cvj7ajy2gh2is5nqmg","4qo9ma0z0yu1czns6pxl7y5","ok0e729ho7o09xetujkxc0m","GR5x8HnNFEN6fU2UBSEIK","yirtnlj8q24yutcf3ss1xqy","eq0wc6t7wl2wv221yb68ro4","7x2fnv4j6gxts08qk0jguny","ettkt3iClONnxpbGwBVLl","7l4knev6v613tbuoskvmbdg","hvh5bud6yp7dc89tuh95tr9","4fvoqrplw0cweo554usbjos","f8qsfql0a9v8thpeo82udfa","1swsbrhqi9jk41v9eodyi5q","SQqYupi6EFddTerBA8RRD","hjNeNc1F2JUh0lTWanH4h","qf0l4wbrc9jgooyzexmbq5v","uur1lkol353z9vfeqb3n5bv","cd9n1czq3ursgkby985wkmm","k1sr43vwnfqztwc0s43pkcf","wfde75rhdvq2yfa2zy2q6rv","rjcmdv60jokmbw6zoq8u2ef","ujapvww8o6v3kpmlhtryq4k","pkwewou9d5e8ystswn1j2b4"],"parent":null,"data":{},"body":"\nHi there 👋. I'm a Front-end developer.\n\n---\n\n- 단순함과 꾸준함은 가장 쉬우면서도 지키기 어려운 원칙.\n\n- 🥱 -> 🤔💡🌱 - [On The Death of Daydreaming](https://www.afterbabel.com/p/on-the-death-of-daydreaming)\n  - boredom -> easy fun -> art -> profit?\n\n> I've often described my motivation for building software to others using imagery: I like to go find a secluded beach, build a large, magnificent sand castle, and then walk away. Will anyone notice? Probably not. Will the waves eventually destroy it? Yep. Did I still get immense satisfaction? Absolutely. - [aliasxneo](https://news.ycombinator.com/item?id=41497113)\n\n> We love to see the process, not just the result. The imperfections in your work can be beautiful if they show your struggle for perfection, not a lack of care. - [ralphammer](https://ralphammer.com/is-perfection-boring/)\n\n> Simplicity, even if it sacrifices some ideal functionality has better survival characteristics than the-right-thing. - [The Rise of Worse is Better](https://www.dreamsongs.com/RiseOfWorseIsBetter.html)\n\n> [Roberto Blake was talking about making 100 crappy videos](https://www.youtube.com/watch?v=OnUBaQ1Sp_E) to get better over time. Putting in the reps and improving a little bit each time.\n>\n> Putting in the work without expecting any external reward at first (eg views, followers, likes, etc) will pay off in the long run. - [100 Scrappy Things](https://www.florin-pop.com/blog/100-scrappy-things/)\n\n> Make the difficult habitual, the habitual easy, and the easy beautiful. - [Constantin S. Stanislavski](https://www.goodreads.com/quotes/7102271-make-the-difficult-habitual-the-habitual-easy-and-the-easy)\n\n> A good match is a **structured** dance, where players aim to **score** while they are following well-defined **rules**. This **freedom within a structure** is what makes it fun. - [ralphammer](https://ralphammer.com/how-to-get-started/)\n\n- [Pivot Points](https://longform.asmartbear.com/pivot-points/)\n\n  - non-judgmental aspects of personality that can be strengths in some contexts and weaknesses in others\n  - Pivot Points are fixed in the short term\n\n- [Hedged Bets](https://longform.asmartbear.com/predict-the-future/#hedged-bets)\n  - trading slightly less maximum upside for predictable, net-positive outcomes.\n\n> “Motivation often comes after starting, not before. Action produces momentum.”\n> [When you start a new habit, it should take less than two minutes to do.](https://jamesclear.com/how-to-stop-procrastinating)\n>\n> - James Clear\n\n> Focus is more about **not** keeping busy when you need to wait for something.  \n> Eat the boredom for a minute.\n>\n> - [[life-tips#wodenokoto]]\n\n> [4 minutes run hard enough to push heart rate to 90%, 3 minutes recover, repeat 4 times](https://news.ycombinator.com/item?id=34213181)\n>\n> - https://www.ntnu.edu/cerg/advice\n> - [Get running with Couch to 5K](https://www.nhs.uk/live-well/exercise/running-and-aerobic-exercises/get-running-with-couch-to-5k/)\n\n> [recommended routine - bodyweightfitness](https://www.reddit.com/r/bodyweightfitness/wiki/kb/recommended_routine/) - I Don't Have This Much Time!\n>\n> - Don't workout at all (saves anywhere from 20 to 60 minutes, but really, really, really, really, really, really, really, really, really not recommended)\n\n> 도무지 읽히지 않는 책 앞에서 내가 택한 방법은 펼쳐진 페이지 앞에서 멍때리기이다. 다르게 표현하면 이렇다. 펼쳐진 두 페이지 앞에서 오래 머물기.\n>\n> 책을 펼쳐놓는 것으로 충분하다. 읽지 못해도 좋다. 매일 정해진 진도를 나가야 하는 학교 수업이 아니니까. 하지만 읽지 않아도 괜찮다고 해서 펼쳐두지조차 않으면 곤란하다. 가능한 한 자주 책을 펼쳐두도록 하자. 전혀 읽지 않고 멍하니 바라보고 있다가 다시 덮게 되더라도\n>\n> - 막막한 독서. 시로군. P.10~13\n\n> I think it should be everyone's primary focus to sleep well, drink water, get outside, get active, and eat generally decently. I hate to say it, but if you're not eating a good amount of vegetables and fruit, decent protein, sleep, etc, no amount of XYZ will catch up to that detriment. - [CE02](https://news.ycombinator.com/item?id=35056071)\n\n> My real battle is doing good versus doing nothing. - [Deirdre Sullivan](https://www.npr.org/2005/08/08/4785079/always-go-to-the-funeral)\n\n[Kind Engineering](https://kind.engineering/) - How To Engineer Kindness\n\n> Sometimes magic is just someone spending more time on something than anyone else might reasonably expect. - [Teller](https://www.goodreads.com/quotes/6641527-sometimes-magic-is-just-someone-spending-more-time-on-something)\n\n---\n\n## What I read in past\n\n- [[What I read in 2025|journal.what-i-read-in.2025]]\n  - [[2024|journal.what-i-read-in.2024]]\n  - [[2023|journal.what-i-read-in.2023]]\n  - [[2022|journal.what-i-read-in.2022]]\n- 📝 [Gists](https://gist.github.com/Luke-SNAW)\n- 📜 [Journals](https://luke-snaw.github.io/Luke-SNAW__netlify-CMS.github.io/)\n\n---\n\n- [[journal.what-i-struggled-brag-in]]\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":false,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"dendronVersion":"0.115.0","enableFullHierarchyNoteTitle":false,"enablePersistentHistory":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Luke SNAW","description":"Personal knowledge space"},"github":{"enableEditLink":false,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","siteUrl":"https://luke-snaw.github.io/","duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}