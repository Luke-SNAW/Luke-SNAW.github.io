{"pageProps":{"note":{"id":"68plnpawbzlhk9cdivnsfnp","title":"Have You Mastered These 9 Vue Techniques","desc":"","updated":1670078725605,"created":1670078530754,"custom":{},"fname":"dev.javascript.vue.have-you-mastered-these-9-vue-techniques","type":"note","vault":{"fsPath":"vault"},"contentHash":"f1b40bfec2291ee8e90bea1bc5ea2b29","links":[],"anchors":{"-1-functional-component":{"type":"header","text":"# 1. Functional Component","value":"-1-functional-component","line":10,"column":0,"depth":2},"-2-deep-selectors":{"type":"header","text":"# 2. Deep Selectors","value":"-2-deep-selectors","line":49,"column":0,"depth":2},"-3-advanced-watcher":{"type":"header","text":"# 3. Advanced “watcher”","value":"-3-advanced-watcher","line":79,"column":0,"depth":2},"-execute-immedately":{"type":"header","text":"# execute immedately","value":"-execute-immedately","line":81,"column":0,"depth":4},"-deep-listening":{"type":"header","text":"# deep listening","value":"-deep-listening","line":103,"column":0,"depth":4},"-multiple-handlers":{"type":"header","text":"# multiple handlers","value":"-multiple-handlers","line":134,"column":0,"depth":4},"-subscribe-to-multiple-variables-mutation":{"type":"header","text":"# subscribe to multiple variables mutation","value":"-subscribe-to-multiple-variables-mutation","line":158,"column":0,"depth":4},"-4-event-argument-event":{"type":"header","text":"# 4. Event argument: $event","value":"-4-event-argument-event","line":178,"column":0,"depth":2},"-native-events":{"type":"header","text":"# native events","value":"-native-events","line":182,"column":0,"depth":4},"-custom-events":{"type":"header","text":"# custom events","value":"-custom-events","line":202,"column":0,"depth":4},"-5-router-parameter-decoupling":{"type":"header","text":"# 5. Router Parameter Decoupling","value":"-5-router-parameter-decoupling","line":230,"column":0,"depth":2},"-6-two-way-binding-for-custom-components":{"type":"header","text":"# 6. Two-way Binding for Custom Components","value":"-6-two-way-binding-for-custom-components","line":287,"column":0,"depth":2},"-7-component-lifecycle-hook":{"type":"header","text":"# 7. Component Lifecycle Hook","value":"-7-component-lifecycle-hook","line":325,"column":0,"depth":2},"-8-event-listener-apis":{"type":"header","text":"# 8. Event Listener APIs","value":"-8-event-listener-apis","line":356,"column":0,"depth":2},"-9-mount-components-programmatically":{"type":"header","text":"# 9. Mount Components Programmatically","value":"-9-mount-components-programmatically","line":398,"column":0,"depth":2},"-references":{"type":"header","text":"# References","value":"-references","line":425,"column":0,"depth":2}},"children":[],"parent":"p6jdsvhol2ebyzilnb5u3ot","data":{}},"body":"<h1 id=\"have-you-mastered-these-9-vue-techniques\">Have You Mastered These 9 Vue Techniques<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#have-you-mastered-these-9-vue-techniques\"></a></h1>\n<blockquote>\n<p><a href=\"https://pitayan.com/posts/vue-techniques/\">https://pitayan.com/posts/vue-techniques/</a></p>\n</blockquote>\n<h2 id=\"-1-functional-component\"><a href=\"https://pitayan.com/posts/vue-techniques/?ref=medium#1-functional-component\">#</a> 1. Functional Component<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#-1-functional-component\"></a></h2>\n<p>A <a href=\"https://vuejs.org/v2/guide/render-function.html#Functional-Components\">functional component</a> is <strong>stateless</strong> and has not <code>lifecycle</code> or <code>methods</code>. So it cannot be instantiated</p>\n<p>It’s very easy to create a functional component, all you need to do is to add a <code>functional: true</code> property to the SFC or adding <code>functional</code> to the template. Since it’s as light as a function and has no instance reference, the rendering performance is quite improved.</p>\n<p>Functional component relys on the <code>context</code> and mutates along with the given data within it.</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>template</span> <span class=\"token attr-name\">functional</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>book<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{{book.name}} {{book.price}}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>template</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token maybe-class-name\">Vue</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">component</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"book\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    functional<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    props<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      books<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function-variable function\">type</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        required<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">render</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">createElement<span class=\"token punctuation\">,</span> context</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword control-flow\">return</span> <span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span>\n        <span class=\"token string\">\"div\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span>\n          attrs<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">class</span><span class=\"token operator\">:</span> <span class=\"token string\">\"book\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">[</span>context<span class=\"token punctuation\">.</span><span class=\"token property-access\">props</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">book</span><span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>script</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<h2 id=\"-2-deep-selectors\"><a href=\"https://pitayan.com/posts/vue-techniques/?ref=medium#2-deep-selectors\">#</a> 2. Deep Selectors<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#-2-deep-selectors\"></a></h2>\n<p>Sometimes you even need to cha the third party components CSS which are <code>scoped</code> styles. It’ impossbile to remove the <code>sc ope</code> or open a new style.</p>\n<p>Now the <a href=\"https://vue-loader.vuejs.org/guide/scoped-css.html#child-component-root-elements\">deep selectors</a> <code>>>></code> <code>/deep/</code> <code>::v-deep</code> come into the right place for help.</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>style</span> <span class=\"token attr-name\">scoped</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n  <span class=\"token selector\"><span class=\"token combinator\">></span><span class=\"token combinator\">></span><span class=\"token combinator\">></span> <span class=\"token class\">.scoped-third-party-class</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token color\">gray</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>style</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>style</span> <span class=\"token attr-name\">scoped</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n  <span class=\"token selector\">/deep/ <span class=\"token class\">.scoped-third-party-class</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token color\">gray</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>style</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>style</span> <span class=\"token attr-name\">scoped</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n  <span class=\"token selector\"><span class=\"token pseudo-element\">::v-deep</span> <span class=\"token class\">.scoped-third-party-class</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token color\">gray</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>style</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<h2 id=\"-3-advanced-watcher\"><a href=\"https://pitayan.com/posts/vue-techniques/?ref=medium#3-advanced-watcher\">#</a> 3. Advanced “watcher”<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#-3-advanced-watcher\"></a></h2>\n<h4 id=\"-execute-immedately\"><a href=\"https://pitayan.com/posts/vue-techniques/?ref=medium#execute-immedately\">#</a> execute immedately<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#-execute-immedately\"></a></h4>\n<p><code>watch</code> handler triggers when the monitered prop mutates. But sometimes, it’s expected right after the component icreated.</p>\n<p>Yea, there’s a simple solution: invoke the handler in the <code>created</code> hook. But that doesn’t look elegant and meanwhile levels up the complexity.</p>\n<p>Or you could add an <code>immediate</code> property to watcher:</p>\n<pre class=\"language-js\"><code class=\"language-js\">watch<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    value<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        handler<span class=\"token operator\">:</span> <span class=\"token string\">'printValue'</span><span class=\"token punctuation\">,</span>\n        immediate<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\nmethods <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">printValue</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">value</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h4 id=\"-deep-listening\"><a href=\"https://pitayan.com/posts/vue-techniques/?ref=medium#deep-listening\">#</a> deep listening<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#-deep-listening\"></a></h4>\n<p>Sometimes the watcher prop is an <code>Object</code>. But its properties mutation cannot trigger the watcher handler. In this case, adding <code>deep: true</code> to watcher can make its properties’ mutation detectable.</p>\n<p><strong>Note</strong> that <code>deep</code> may cause some serious performance issues when your <code>Object</code> has many layers. It’s better to think about using a rather flatten data structure instead.</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">data</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span>\n    value<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      one<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        two<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          three<span class=\"token operator\">:</span> <span class=\"token number\">3</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\nwatch<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  value<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    handler<span class=\"token operator\">:</span> <span class=\"token string\">'printValue'</span><span class=\"token punctuation\">,</span>\n    deep<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\nmethods <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">printValue</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">value</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h4 id=\"-multiple-handlers\"><a href=\"https://pitayan.com/posts/vue-techniques/?ref=medium#multiple-handlers\">#</a> multiple handlers<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#-multiple-handlers\"></a></h4>\n<p>Actually watcher can be set as an <code>Array</code>. Supported types are <code>String</code> | <code>Function</code> | <code>Object</code>. The registered watcher handlers will be invoked one by one when triggered.</p>\n<pre class=\"language-js\"><code class=\"language-js\">watch<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  value<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'printValue'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">val<span class=\"token punctuation\">,</span> oldVal</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      handler<span class=\"token operator\">:</span> <span class=\"token string\">'printValue'</span><span class=\"token punctuation\">,</span>\n      deep<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\nmethods <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">printValue</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">value</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h4 id=\"-subscribe-to-multiple-variables-mutation\"><a href=\"https://pitayan.com/posts/vue-techniques/?ref=medium#subscribe-to-multiple-variables-mutation\">#</a> subscribe to multiple variables mutation<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#-subscribe-to-multiple-variables-mutation\"></a></h4>\n<p><code>watcher</code> cannot listen to multiple variables , but we could combine the targets together as a new <code>computed</code> and watch this new “variable”.</p>\n<pre class=\"language-js\"><code class=\"language-js\">computed<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">multipleValues</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span>\n      value1<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">value1</span><span class=\"token punctuation\">,</span>\n      value2<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">value2</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\nwatch<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">multipleValues</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">val<span class=\"token punctuation\">,</span> oldVal</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2 id=\"-4-event-argument-event\"><a href=\"https://pitayan.com/posts/vue-techniques/?ref=medium#4-event-argument-event\">#</a> 4. Event argument: $event<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#-4-event-argument-event\"></a></h2>\n<p><code>$event</code> is a special variable of Event Object. It provides more optional arugment in some scenarios for the complex functionalities.</p>\n<h4 id=\"-native-events\"><a href=\"https://pitayan.com/posts/vue-techniques/?ref=medium#native-events\">#</a> native events<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#-native-events\"></a></h4>\n<p>In native events, the value is the same to the default event (DOM event or window event).</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">@input</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>handleInput(<span class=\"token punctuation\">'</span>hello<span class=\"token punctuation\">'</span>, $event)<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>template</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> <span class=\"token punctuation\">{</span>\n    methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">handleInput</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">val<span class=\"token punctuation\">,</span> e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token property-access\">target</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">value</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// hello</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>script</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<h4 id=\"-custom-events\"><a href=\"https://pitayan.com/posts/vue-techniques/?ref=medium#custom-events\">#</a> custom events<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#-custom-events\"></a></h4>\n<p>In custom events, the value is what’s captured from its child component.</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&#x3C;!-- Child --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">@input</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>$emit(<span class=\"token punctuation\">'</span>custom-event<span class=\"token punctuation\">'</span>, <span class=\"token punctuation\">'</span>hello<span class=\"token punctuation\">'</span>)<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>template</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&#x3C;!-- Parent --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>Child</span> <span class=\"token attr-name\">@custom-event</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>handleCustomevent<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>template</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> <span class=\"token punctuation\">{</span>\n    methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">handleCustomevent</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token comment\">// hello</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>script</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<h2 id=\"-5-router-parameter-decoupling\"><a href=\"https://pitayan.com/posts/vue-techniques/?ref=medium#5-router-parameter-decoupling\">#</a> 5. Router Parameter Decoupling<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#-5-router-parameter-decoupling\"></a></h2>\n<p>I believe this is how most people handle the router parameters in a component:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> <span class=\"token punctuation\">{</span>\n  methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">getRouteParamsId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword control-flow\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">$route</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">params</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">id</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>Using <code>$route</code> inside a component will generate a strong coupling for the certain URL. This limited the flexibility of a component.</p>\n<p>The correct solution is to add <code>props</code> to the <code>Router</code>.</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> router <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">VueRouter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  routes<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      path<span class=\"token operator\">:</span> <span class=\"token string\">\"/:id\"</span><span class=\"token punctuation\">,</span>\n      component<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Component</span><span class=\"token punctuation\">,</span>\n      props<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>In this way, component can get <code>params</code> directly from props.</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> <span class=\"token punctuation\">{</span>\n  props<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">getParamsId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword control-flow\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">id</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>In addition, you can also pass in a function to return the <code>props</code> for customization purposes.</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> router <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">VueRouter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  routes<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      path<span class=\"token operator\">:</span> <span class=\"token string\">\"/:id\"</span><span class=\"token punctuation\">,</span>\n      component<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Component</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function-variable function\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">router</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> id<span class=\"token operator\">:</span> route<span class=\"token punctuation\">.</span><span class=\"token property-access\">query</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">id</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2 id=\"-6-two-way-binding-for-custom-components\"><a href=\"https://pitayan.com/posts/vue-techniques/?ref=medium#6-two-way-binding-for-custom-components\">#</a> 6. Two-way Binding for Custom Components<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#-6-two-way-binding-for-custom-components\"></a></h2>\n<blockquote>\n<p>Allows a custom component to customize the prop and event used when it’s used with v-model. By default, v-model on a component uses value as the prop and input as the event, but some input types such as checkboxes and radio buttons may want to use the value prop for a different purpose. Using the model option can avoid the conflict in such cases.</p>\n</blockquote>\n<p><code>v-model</code> is well-known for two-way binding. <code>input</code> is the default update event. The value can be updated via <code>$emit</code>. The only limitation is that the component needs an <code>&#x3C;input></code> tag to bind with the <code>value</code> prop.</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>my-checkbox</span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>val<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>my-checkbox</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>checkbox<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>value<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">@input</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>handleInputChange(value)<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>template</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> <span class=\"token punctuation\">{</span>\n    props<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      value<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        type<span class=\"token operator\">:</span> <span class=\"token known-class-name class-name\">Boolean</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword module\">default</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">handleInputChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">val</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>script</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<p>There’s another solution to two-way binding which is <code>sync</code> modifier. Different to <code>v-model</code>, it doesn’t require your component to have an <code>&#x3C;input></code> tag and bind the value to it. It only triggers <code>update:&#x3C;your_prop></code> to mutate the prop via event system.</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>custom-component</span> <span class=\"token attr-name\">:value.sync</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>value<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n</code></pre>\n<h2 id=\"-7-component-lifecycle-hook\"><a href=\"https://pitayan.com/posts/vue-techniques/?ref=medium#7-component-lifecycle-hook\">#</a> 7. Component Lifecycle Hook<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#-7-component-lifecycle-hook\"></a></h2>\n<p>Normally, you can listen to child component lifecycle (e.g <code>mounted</code>) like this</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&#x3C;!-- Child --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">mounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">$emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"onMounted\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>script</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&#x3C;!-- Parent --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>Child</span> <span class=\"token attr-name\">@onMounted</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>handleOnMounted<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>template</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<p>There’s another simple solution to this. You can use the <code>@hook:mounted</code> instead. It’s used within the Vue internal system.</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&#x3C;!-- Parent --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>Child</span> <span class=\"token attr-name\"><span class=\"token namespace\">@hook:</span>mounted</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>handleOnMounted<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>template</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<h2 id=\"-8-event-listener-apis\"><a href=\"https://pitayan.com/posts/vue-techniques/?ref=medium#8-event-listener-apis\">#</a> 8. Event Listener APIs<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#-8-event-listener-apis\"></a></h2>\n<p>For instance, adding a timer when the page mounted but the timer needs to be cleared when destroyed. This looks good.</p>\n<p>Frankly speaking, <code>this.timer</code> only makes sense whenused within <code>beforeDestroy</code> to get the timer id. Not being mean, but fewer reative variables you have the better performance you’ll have.</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span>\n      timer<span class=\"token operator\">:</span> <span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">mounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">timer</span> <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token known-class-name class-name\">Date</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">beforeDestroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">timer</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>Make it accessable only within the lifecycle hook. Using <code>$once</code> to let go of the unnecessary stuffs.</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">mounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> timer <span class=\"token operator\">=</span> <span class=\"token keyword null nil\">null</span>\n\n    timer <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token known-class-name class-name\">Date</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">$once</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hook:beforeDestroy\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2 id=\"-9-mount-components-programmatically\"><a href=\"https://pitayan.com/posts/vue-techniques/?ref=medium#9-mount-components-programmatically\">#</a> 9. Mount Components Programmatically<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#-9-mount-components-programmatically\"></a></h2>\n<p>In some scenarios, it’s much more elegant to load a component programmatically. For instance, a popup window or modal can be open up via a global context <code>$popup()</code> or <code>$modal.open()</code>.</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token maybe-class-name\">Vue</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"vue\"</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token maybe-class-name\">Popup</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"./popup\"</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">PopupCtor</span> <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">Vue</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">extend</span><span class=\"token punctuation\">(</span><span class=\"token maybe-class-name\">Popup</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">PopupIns</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PopupCtr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token maybe-class-name\">PopupIns</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">$mount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">body</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">append</span><span class=\"token punctuation\">(</span><span class=\"token maybe-class-name\">PopupIns</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">$el</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token class-name\">Vue</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">prototype</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">$popup</span> <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">Vue</span><span class=\"token punctuation\">.</span><span class=\"token method-variable function-variable method function property-access\">$popup</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token maybe-class-name\">PopupIns</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><a href=\"https://github.com/ElemeFE/element/blob/dev/packages/message-box/src/main.js\">Element UI</a> implemented a well structured modal component which allows to use custom APIs to control the lifecycle of the instance. The theory is pretty much the same to what I demo above.</p>\n<p>These are the 9 techniques about Vue 2.x. Hope throughout this artcile you can have a better vision of utilizing the framework. If you think this article is great, please share it on other social networks.</p>\n<p>Thank you reading!</p>\n<h2 id=\"-references\"><a href=\"https://pitayan.com/posts/vue-techniques/?ref=medium#references\">#</a> References<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#-references\"></a></h2>\n<ul>\n<li><a href=\"https://vuejs.org/\">https://vuejs.org</a></li>\n<li><a href=\"https://www.digitalocean.com/community/tutorials/vuejs-add-v-model-support\">https://www.digitalocean.com/community/tutorials/vuejs-add-v-model-support</a></li>\n<li><a href=\"https://vue-loader.vuejs.org/guide/scoped-css.html#child-component-root-elements\">https://vue-loader.vuejs.org/guide/scoped-css.html#child-component-root-elements</a></li>\n</ul>","noteIndex":{"id":"Iy0MoL0KnL55Br3AfTS2C","title":"Luke","desc":"","updated":1761796791487,"created":1644449449778,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"4e745570ca97988a0362cb939b760952","links":[{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"life-tips","position":{"start":{"line":41,"column":5,"offset":2603},"end":{"line":41,"column":29,"offset":2627},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"life-tips","anchorHeader":"wodenokoto"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-read-in.2025","alias":"What I read in 2025","position":{"start":{"line":70,"column":3,"offset":4333},"end":{"line":70,"column":54,"offset":4384},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-read-in.2025"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-read-in.2024","alias":"2024","position":{"start":{"line":71,"column":5,"offset":4389},"end":{"line":71,"column":41,"offset":4425},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-read-in.2024"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-read-in.2023","alias":"2023","position":{"start":{"line":72,"column":5,"offset":4430},"end":{"line":72,"column":41,"offset":4466},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-read-in.2023"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-read-in.2022","alias":"2022","position":{"start":{"line":73,"column":5,"offset":4471},"end":{"line":73,"column":41,"offset":4507},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-read-in.2022"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-struggled-brag-in","position":{"start":{"line":79,"column":3,"offset":4643},"end":{"line":79,"column":39,"offset":4679},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-struggled-brag-in"}}],"anchors":{"what-i-read-in-past":{"type":"header","text":"What I read in past","value":"what-i-read-in-past","line":74,"column":0,"depth":2}},"children":["zd4mq442jike0pr0wba1u3m","6hzeqsofq67gdk88flxlkhp","778ijii93yu5uwnrwmn5zi4","g1fngdjl25nes6fs3lip602","ZbdkdApFqLdks4Moq92R9","uoc5hhki3o4py15cesddu8q","9qf7j06jtdkm6rnx9ymvwb0","5zn10cvj7ajy2gh2is5nqmg","4qo9ma0z0yu1czns6pxl7y5","ok0e729ho7o09xetujkxc0m","GR5x8HnNFEN6fU2UBSEIK","yirtnlj8q24yutcf3ss1xqy","eq0wc6t7wl2wv221yb68ro4","7x2fnv4j6gxts08qk0jguny","ettkt3iClONnxpbGwBVLl","7l4knev6v613tbuoskvmbdg","hvh5bud6yp7dc89tuh95tr9","4fvoqrplw0cweo554usbjos","f8qsfql0a9v8thpeo82udfa","1swsbrhqi9jk41v9eodyi5q","SQqYupi6EFddTerBA8RRD","hjNeNc1F2JUh0lTWanH4h","qf0l4wbrc9jgooyzexmbq5v","uur1lkol353z9vfeqb3n5bv","cd9n1czq3ursgkby985wkmm","k1sr43vwnfqztwc0s43pkcf","wfde75rhdvq2yfa2zy2q6rv","rjcmdv60jokmbw6zoq8u2ef","ujapvww8o6v3kpmlhtryq4k","pkwewou9d5e8ystswn1j2b4"],"parent":null,"data":{},"body":"\nHi there 👋. I'm a Front-end developer.\n\n---\n\n- 단순함과 꾸준함은 가장 쉬우면서도 지키기 어려운 원칙.\n\n- 🥱 -> 🤔💡🌱 - [On The Death of Daydreaming](https://www.afterbabel.com/p/on-the-death-of-daydreaming)\n  - boredom -> easy fun -> art -> profit?\n\n> I've often described my motivation for building software to others using imagery: I like to go find a secluded beach, build a large, magnificent sand castle, and then walk away. Will anyone notice? Probably not. Will the waves eventually destroy it? Yep. Did I still get immense satisfaction? Absolutely. - [aliasxneo](https://news.ycombinator.com/item?id=41497113)\n\n> We love to see the process, not just the result. The imperfections in your work can be beautiful if they show your struggle for perfection, not a lack of care. - [ralphammer](https://ralphammer.com/is-perfection-boring/)\n\n> Simplicity, even if it sacrifices some ideal functionality has better survival characteristics than the-right-thing. - [The Rise of Worse is Better](https://www.dreamsongs.com/RiseOfWorseIsBetter.html)\n\n> [Roberto Blake was talking about making 100 crappy videos](https://www.youtube.com/watch?v=OnUBaQ1Sp_E) to get better over time. Putting in the reps and improving a little bit each time.\n>\n> Putting in the work without expecting any external reward at first (eg views, followers, likes, etc) will pay off in the long run. - [100 Scrappy Things](https://www.florin-pop.com/blog/100-scrappy-things/)\n\n> Make the difficult habitual, the habitual easy, and the easy beautiful. - [Constantin S. Stanislavski](https://www.goodreads.com/quotes/7102271-make-the-difficult-habitual-the-habitual-easy-and-the-easy)\n\n> A good match is a **structured** dance, where players aim to **score** while they are following well-defined **rules**. This **freedom within a structure** is what makes it fun. - [ralphammer](https://ralphammer.com/how-to-get-started/)\n\n- [Pivot Points](https://longform.asmartbear.com/pivot-points/)\n\n  - non-judgmental aspects of personality that can be strengths in some contexts and weaknesses in others\n  - Pivot Points are fixed in the short term\n\n- [Hedged Bets](https://longform.asmartbear.com/predict-the-future/#hedged-bets)\n  - trading slightly less maximum upside for predictable, net-positive outcomes.\n\n> “Motivation often comes after starting, not before. Action produces momentum.”\n> [When you start a new habit, it should take less than two minutes to do.](https://jamesclear.com/how-to-stop-procrastinating)\n>\n> - James Clear\n\n> Focus is more about **not** keeping busy when you need to wait for something.  \n> Eat the boredom for a minute.\n>\n> - [[life-tips#wodenokoto]]\n\n> [4 minutes run hard enough to push heart rate to 90%, 3 minutes recover, repeat 4 times](https://news.ycombinator.com/item?id=34213181)\n>\n> - https://www.ntnu.edu/cerg/advice\n> - [Get running with Couch to 5K](https://www.nhs.uk/live-well/exercise/running-and-aerobic-exercises/get-running-with-couch-to-5k/)\n\n> [recommended routine - bodyweightfitness](https://www.reddit.com/r/bodyweightfitness/wiki/kb/recommended_routine/) - I Don't Have This Much Time!\n>\n> - Don't workout at all (saves anywhere from 20 to 60 minutes, but really, really, really, really, really, really, really, really, really not recommended)\n\n> 도무지 읽히지 않는 책 앞에서 내가 택한 방법은 펼쳐진 페이지 앞에서 멍때리기이다. 다르게 표현하면 이렇다. 펼쳐진 두 페이지 앞에서 오래 머물기.\n>\n> 책을 펼쳐놓는 것으로 충분하다. 읽지 못해도 좋다. 매일 정해진 진도를 나가야 하는 학교 수업이 아니니까. 하지만 읽지 않아도 괜찮다고 해서 펼쳐두지조차 않으면 곤란하다. 가능한 한 자주 책을 펼쳐두도록 하자. 전혀 읽지 않고 멍하니 바라보고 있다가 다시 덮게 되더라도\n>\n> - 막막한 독서. 시로군. P.10~13\n\n> I think it should be everyone's primary focus to sleep well, drink water, get outside, get active, and eat generally decently. I hate to say it, but if you're not eating a good amount of vegetables and fruit, decent protein, sleep, etc, no amount of XYZ will catch up to that detriment. - [CE02](https://news.ycombinator.com/item?id=35056071)\n\n> My real battle is doing good versus doing nothing. - [Deirdre Sullivan](https://www.npr.org/2005/08/08/4785079/always-go-to-the-funeral)\n\n[Kind Engineering](https://kind.engineering/) - How To Engineer Kindness\n\n> Sometimes magic is just someone spending more time on something than anyone else might reasonably expect. - [Teller](https://www.goodreads.com/quotes/6641527-sometimes-magic-is-just-someone-spending-more-time-on-something)\n\n---\n\n## What I read in past\n\n- [[What I read in 2025|journal.what-i-read-in.2025]]\n  - [[2024|journal.what-i-read-in.2024]]\n  - [[2023|journal.what-i-read-in.2023]]\n  - [[2022|journal.what-i-read-in.2022]]\n- 📝 [Gists](https://gist.github.com/Luke-SNAW)\n- 📜 [Journals](https://luke-snaw.github.io/Luke-SNAW__netlify-CMS.github.io/)\n\n---\n\n- [[journal.what-i-struggled-brag-in]]\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":false,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"dendronVersion":"0.115.0","enableFullHierarchyNoteTitle":false,"enablePersistentHistory":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Luke SNAW","description":"Personal knowledge space"},"github":{"enableEditLink":false,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","siteUrl":"https://luke-snaw.github.io/","duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}