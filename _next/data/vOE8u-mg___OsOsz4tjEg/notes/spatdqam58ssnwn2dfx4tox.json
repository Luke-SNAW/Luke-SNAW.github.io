{"pageProps":{"note":{"id":"spatdqam58ssnwn2dfx4tox","title":"Google Apps Script","desc":"","updated":1697006841675,"created":1667286051672,"custom":{},"fname":"dev.tools.google.apps-script","type":"note","vault":{"fsPath":"vault"},"contentHash":"0f0eea7758ed804ffd332f299a5f00e2","links":[{"from":{"fname":"journal.what-i-struggled-brag-in","id":"6645fjtiqxtko03nuccgjj2","vaultName":"vault"},"type":"backlink","position":{"start":{"line":1491,"column":20,"offset":52323},"end":{"line":1491,"column":109,"offset":52412},"indent":[]},"value":"dev.tools.google.apps-script"}],"anchors":{"add-apps-script-on-sheet":{"type":"header","text":"Add apps script on sheet","value":"add-apps-script-on-sheet","line":8,"column":0,"depth":2},"script-of-sheet---i18n-json":{"type":"header","text":"Script of Sheet -> i18n JSON","value":"script-of-sheet---i18n-json","line":28,"column":0,"depth":2},"sheet-data":{"type":"header","text":"Sheet data","value":"sheet-data","line":33,"column":0,"depth":3},"library":{"type":"header","text":"Library","value":"library","line":40,"column":0,"depth":3},"google-apps-script-side":{"type":"header","text":"Google Apps Script side:","value":"google-apps-script-side","line":42,"column":0,"depth":4},"htmljavascript-side":{"type":"header","text":"HTML&Javascript side:","value":"htmljavascript-side","line":102,"column":0,"depth":4},"client---use-library":{"type":"header","text":"Client - use library","value":"client---use-library","line":128,"column":0,"depth":3},"google-apps-script-side-1":{"type":"header","text":"Google Apps Script side:","value":"google-apps-script-side-1","line":130,"column":0,"depth":4},"주의":{"type":"header","text":"주의","value":"주의","line":143,"column":0,"depth":3},"make-as-a-library":{"type":"header","text":"Make as a library","value":"make-as-a-library","line":152,"column":0,"depth":2},"etc":{"type":"header","text":"Etc","value":"etc","line":160,"column":0,"depth":2},"form":{"type":"header","text":"Form","value":"form","line":164,"column":0,"depth":2}},"children":[],"parent":"vmkslwz94blh6jl95zd3sgu","data":{}},"body":"<h1 id=\"google-apps-script\">Google Apps Script<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#google-apps-script\"></a></h1>\n<h2 id=\"add-apps-script-on-sheet\">Add apps script on sheet<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#add-apps-script-on-sheet\"></a></h2>\n<blockquote>\n<p><a href=\"https://thenewstack.io/how-to-convert-google-spreadsheet-to-json-formatted-text/\">https://thenewstack.io/how-to-convert-google-spreadsheet-to-json-formatted-text/</a></p>\n</blockquote>\n<p>You’ve added your data into the spreadsheet, the next step is to create an <a href=\"https://developers.google.com/apps-script\">Apps Script</a>, a Google Cloud  JavaScript tool to integrate and automate tasks. To do this, click <em>Extensions > Apps Script</em>. In the resulting window, paste the following script found in <a href=\"https://gist.githubusercontent.com/pamelafox/1878143/raw/6c23f71231ce1fa09be2d515f317ffe70e4b19aa/exportjson.js\">this Gist</a>.</p>\n<p>After pasting the script, click Untitled Document and then name it something like JSON EXPORT. Next, click the <em>Save</em> button to save your work so far. Once it’s saved, click the Run button (<strong>Figure 1</strong>).</p>\n<p><strong>Figure 1:</strong> The run button is the small right-pointing arrow directly to the left of Debug.</p>\n<p>When you click Run, you’ll be prompted that the script needs permissions to continue (<strong>Figure 2</strong>).</p>\n<p><strong>Figure 2:</strong> Permissions are always an issue.</p>\n<p>Make sure you walk through handing over the proper permissions for the account in question. Curing this process you’ll get a warning that Google hasn’t verified the app. Go ahead and okay that by clicking Advanced and then Go to JSON (unsafe). Finish up the permissions and you’ll be directed back to the Apps Script window.</p>\n<p>If you now go back to the spreadsheet and reload it, you should see a new menu entry, labeled Export JSON (<strong>Figure 3</strong>).</p>\n<p><strong>Figure 3:</strong> Our new menu entry for the conversion to JSON.</p>\n<h2 id=\"script-of-sheet---i18n-json\">Script of Sheet -> i18n JSON<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#script-of-sheet---i18n-json\"></a></h2>\n<blockquote>\n<p><a href=\"https://stackoverflow.com/questions/66308153/download-google-sheet-data-as-json-from-browser-through-custom-menu\">https://stackoverflow.com/questions/66308153/download-google-sheet-data-as-json-from-browser-through-custom-menu</a><br>\n<a href=\"https://stackoverflow.com/a/66308417/5163033\">https://stackoverflow.com/a/66308417/5163033</a></p>\n</blockquote>\n<h3 id=\"sheet-data\">Sheet data<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#sheet-data\"></a></h3>\n<div class=\"table-responsive\">\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>Key</th><th>ko</th><th>ja</th><th>en</th><th>zh_hant</th></tr></thead><tbody><tr><td>company.desc.offices-seoul</td><td>서울</td><td>ソウル</td><td>Seoul</td><td>首爾</td></tr><tr><td>company.desc.offices-fukuoka</td><td>후쿠오카</td><td>福岡</td><td>Fukuoka</td><td>福岡</td></tr></tbody></table></div>\n<h3 id=\"library\">Library<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#library\"></a></h3>\n<h4 id=\"google-apps-script-side\">Google Apps Script side:<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#google-apps-script-side\"></a></h4>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Code.gs</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">onOpen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token maybe-class-name\">SpreadsheetApp</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getUi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">createMenu</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"JSON\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">addItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Export\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ExportJsonForI18n.download\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// html에 노출되는 부분은 library의 namespace가 필요</span>\n    <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">addToUi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">download</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> html <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">HtmlService</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">createHtmlOutputFromFile</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"index\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token maybe-class-name\">SpreadsheetApp</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getUi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">showModalDialog</span><span class=\"token punctuation\">(</span>\n    html<span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"Wait for a while -> 10 seconds +\"</span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">downloadFile</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">language</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> jsonString <span class=\"token operator\">=</span> <span class=\"token function\">generateJsonString</span><span class=\"token punctuation\">(</span>language<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> filename <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>language<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.json</span><span class=\"token template-punctuation string\">`</span></span>\n\n  <span class=\"token keyword\">const</span> blob <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">Utilities</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">newBlob</span><span class=\"token punctuation\">(</span>jsonString<span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">MimeType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">PLAIN_TEXT</span><span class=\"token punctuation\">,</span> filename<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span>\n    data<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token maybe-class-name\">MimeType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">PLAIN_TEXT</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">;base64,</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token maybe-class-name\">Utilities</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">base64Encode</span><span class=\"token punctuation\">(</span>\n      blob<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    filename<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">generateJsonString</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">language</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> sheets <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">SpreadsheetApp</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getActiveSpreadsheet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getSheets</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> sheetsData <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token keyword control-flow\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> sheet <span class=\"token keyword\">of</span> sheets<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> rowsData <span class=\"token operator\">=</span> <span class=\"token function\">getRowsData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> sheet<span class=\"token punctuation\">,</span> language <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token known-class-name class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">assign</span><span class=\"token punctuation\">(</span>sheetsData<span class=\"token punctuation\">,</span> rowsData<span class=\"token punctuation\">)</span> <span class=\"token comment\">//! 같은 key가 여러 sheet에 있는 경우, 후자의 내용으로 덮어씀</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token known-class-name class-name\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">stringify</span><span class=\"token punctuation\">(</span>sheetsData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\\",</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">gi</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'\",\\n'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//! git diff로 관리하기 위해 줄바꿈 추가</span>\n  <span class=\"token comment\">// Utilities.jsonStringify는 key를 정렬시켜도 json 파일에선 제멋대로 나옴</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">getRowsData</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> sheet<span class=\"token punctuation\">,</span> language <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>_indexes<span class=\"token punctuation\">,</span> <span class=\"token spread operator\">...</span>values<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> sheet<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getDataRange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getValues</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> indexes <span class=\"token operator\">=</span> _indexes<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">i</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> i<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> <span class=\"token constant\">INDEX_KEY</span> <span class=\"token operator\">=</span> indexes<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">findIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">i</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> i <span class=\"token operator\">==</span> <span class=\"token string\">\"key\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> <span class=\"token constant\">INDEX_COLUMN</span> <span class=\"token operator\">=</span> indexes<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">findIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">i</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> i <span class=\"token operator\">==</span> language<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">INDEX_KEY</span> <span class=\"token operator\">===</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">||</span> <span class=\"token constant\">INDEX_COLUMN</span> <span class=\"token operator\">===</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  values<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">raw</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">[</span>raw<span class=\"token punctuation\">[</span><span class=\"token constant\">INDEX_KEY</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> raw<span class=\"token punctuation\">[</span><span class=\"token constant\">INDEX_COLUMN</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword control-flow\">return</span> obj\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h4 id=\"htmljavascript-side\">HTML&#x26;Javascript side:<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#htmljavascript-side\"></a></h4>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&#x3C;!--index.html--></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword\">function</span> <span class=\"token function\">downloadJsons</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">languages<span class=\"token punctuation\">,</span> indexProcessing</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    google<span class=\"token punctuation\">.</span><span class=\"token property-access\">script</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">run</span>\n      <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">withSuccessHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> data<span class=\"token punctuation\">,</span> filename <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>data <span class=\"token operator\">&#x26;&#x26;</span> filename<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span>\n          <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">body</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">appendChild</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n          a<span class=\"token punctuation\">.</span><span class=\"token property-access\">download</span> <span class=\"token operator\">=</span> filename\n          a<span class=\"token punctuation\">.</span><span class=\"token property-access\">href</span> <span class=\"token operator\">=</span> data\n          a<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">++</span>indexProcessing <span class=\"token operator\">&#x3C;</span> languages<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span><span class=\"token punctuation\">)</span>\n          <span class=\"token function\">downloadJsons</span><span class=\"token punctuation\">(</span>languages<span class=\"token punctuation\">,</span> indexProcessing<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword control-flow\">else</span> google<span class=\"token punctuation\">.</span><span class=\"token property-access\">script</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">host</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">downloadFile</span><span class=\"token punctuation\">(</span>languages<span class=\"token punctuation\">[</span>indexProcessing<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">downloadJsons</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"ko\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ja\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"en\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"zh_hant\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>script</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<h3 id=\"client---use-library\">Client - use library<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#client---use-library\"></a></h3>\n<h4 id=\"google-apps-script-side-1\">Google Apps Script side:<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#google-apps-script-side-1\"></a></h4>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Code.gs</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">onOpen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token maybe-class-name\">ExportJsonForI18n</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">onOpen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">downloadFile</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">language</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token maybe-class-name\">ExportJsonForI18n</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">downloadFile</span><span class=\"token punctuation\">(</span>language<span class=\"token punctuation\">)</span> <span class=\"token comment\">// html의 script에서 호출하므로 library의 namespace를 연결시켜줌</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3 id=\"주의\">주의<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#주의\"></a></h3>\n<ul>\n<li>Export 실행 후 다운로드까지 10초 이상 소요.\n<ul>\n<li>언어 하나만 export할 때와 4개 export할 때 시간이 x4가 아닌걸로 봐선, script setup이 대부분의 시간을 차지하는 듯</li>\n<li>script fail 시 modal 창이 그대로 유지되므로 30초 지났을 때까지 반응 없다면 Apps Script의 left nav의 실행에서 log를 확인해볼 것 <img src=\"/assets/images/google__apps-script__log.webp\"></li>\n</ul>\n</li>\n<li>같은 key가 여러 sheet에 있는 경우, 후자의 내용으로 덮어씀</li>\n<li>공유 - sheet, script, library가 모두 공유되어야 함</li>\n<li>column명 고정. key, ko, ja, en, zh_hant (대소문자 상관 없음)</li>\n</ul>\n<h2 id=\"make-as-a-library\">Make as a library<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#make-as-a-library\"></a></h2>\n<ul>\n<li>프로젝트 하나에만 script를 쓸 거라면 Code-library.gs, index-library.html 내용만 프로젝트에 추가</li>\n<li>라이브러리 프로젝트를 만들어 여러 프로젝트에서 쓸거면,\n<ol>\n<li>Code-library.gs, index-library.html 내용을 프로젝트로 생성 (라이브러리로 사용)</li>\n<li>라이브러리의 Apps Script의 프로젝트 설정 메뉴에서 스크립트 ID를 가져와, client로 쓸 프로젝트에서 편집기 -> 라이브러리에 추가</li>\n<li>Code-client.gs 내용만 client 프로젝트에 추가</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"etc\">Etc<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#etc\"></a></h2>\n<ul>\n<li><a href=\"https://github.com/liddiard/google-sheet-s3\">https://github.com/liddiard/google-sheet-s3</a></li>\n</ul>\n<h2 id=\"form\">Form<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#form\"></a></h2>\n<ul>\n<li><a href=\"https://developers.google.com/apps-script/reference/forms/form-response?hl=ko#submit\">https://developers.google.com/apps-script/reference/forms/form-response?hl=ko#submit</a></li>\n<li><a href=\"https://stackoverflow.com/a/25295822/5163033\">https://stackoverflow.com/a/25295822/5163033</a></li>\n<li><a href=\"https://developers.google.com/apps-script/reference/url-fetch/url-fetch-app?hl=ko#fetchurl,-params\">https://developers.google.com/apps-script/reference/url-fetch/url-fetch-app?hl=ko#fetchurl,-params</a></li>\n</ul>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/notes/6645fjtiqxtko03nuccgjj2\">What I struggled 🧗/📣 brag In</a></li>\n</ul>","noteIndex":{"id":"Iy0MoL0KnL55Br3AfTS2C","title":"Luke","desc":"","updated":1761796791487,"created":1644449449778,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"4e745570ca97988a0362cb939b760952","links":[{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"life-tips","position":{"start":{"line":41,"column":5,"offset":2603},"end":{"line":41,"column":29,"offset":2627},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"life-tips","anchorHeader":"wodenokoto"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-read-in.2025","alias":"What I read in 2025","position":{"start":{"line":70,"column":3,"offset":4333},"end":{"line":70,"column":54,"offset":4384},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-read-in.2025"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-read-in.2024","alias":"2024","position":{"start":{"line":71,"column":5,"offset":4389},"end":{"line":71,"column":41,"offset":4425},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-read-in.2024"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-read-in.2023","alias":"2023","position":{"start":{"line":72,"column":5,"offset":4430},"end":{"line":72,"column":41,"offset":4466},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-read-in.2023"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-read-in.2022","alias":"2022","position":{"start":{"line":73,"column":5,"offset":4471},"end":{"line":73,"column":41,"offset":4507},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-read-in.2022"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-struggled-brag-in","position":{"start":{"line":79,"column":3,"offset":4643},"end":{"line":79,"column":39,"offset":4679},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-struggled-brag-in"}}],"anchors":{"what-i-read-in-past":{"type":"header","text":"What I read in past","value":"what-i-read-in-past","line":74,"column":0,"depth":2}},"children":["zd4mq442jike0pr0wba1u3m","6hzeqsofq67gdk88flxlkhp","778ijii93yu5uwnrwmn5zi4","g1fngdjl25nes6fs3lip602","ZbdkdApFqLdks4Moq92R9","uoc5hhki3o4py15cesddu8q","9qf7j06jtdkm6rnx9ymvwb0","5zn10cvj7ajy2gh2is5nqmg","4qo9ma0z0yu1czns6pxl7y5","ok0e729ho7o09xetujkxc0m","GR5x8HnNFEN6fU2UBSEIK","yirtnlj8q24yutcf3ss1xqy","eq0wc6t7wl2wv221yb68ro4","7x2fnv4j6gxts08qk0jguny","ettkt3iClONnxpbGwBVLl","7l4knev6v613tbuoskvmbdg","hvh5bud6yp7dc89tuh95tr9","4fvoqrplw0cweo554usbjos","f8qsfql0a9v8thpeo82udfa","1swsbrhqi9jk41v9eodyi5q","SQqYupi6EFddTerBA8RRD","hjNeNc1F2JUh0lTWanH4h","qf0l4wbrc9jgooyzexmbq5v","uur1lkol353z9vfeqb3n5bv","cd9n1czq3ursgkby985wkmm","k1sr43vwnfqztwc0s43pkcf","wfde75rhdvq2yfa2zy2q6rv","rjcmdv60jokmbw6zoq8u2ef","ujapvww8o6v3kpmlhtryq4k","pkwewou9d5e8ystswn1j2b4"],"parent":null,"data":{},"body":"\nHi there 👋. I'm a Front-end developer.\n\n---\n\n- 단순함과 꾸준함은 가장 쉬우면서도 지키기 어려운 원칙.\n\n- 🥱 -> 🤔💡🌱 - [On The Death of Daydreaming](https://www.afterbabel.com/p/on-the-death-of-daydreaming)\n  - boredom -> easy fun -> art -> profit?\n\n> I've often described my motivation for building software to others using imagery: I like to go find a secluded beach, build a large, magnificent sand castle, and then walk away. Will anyone notice? Probably not. Will the waves eventually destroy it? Yep. Did I still get immense satisfaction? Absolutely. - [aliasxneo](https://news.ycombinator.com/item?id=41497113)\n\n> We love to see the process, not just the result. The imperfections in your work can be beautiful if they show your struggle for perfection, not a lack of care. - [ralphammer](https://ralphammer.com/is-perfection-boring/)\n\n> Simplicity, even if it sacrifices some ideal functionality has better survival characteristics than the-right-thing. - [The Rise of Worse is Better](https://www.dreamsongs.com/RiseOfWorseIsBetter.html)\n\n> [Roberto Blake was talking about making 100 crappy videos](https://www.youtube.com/watch?v=OnUBaQ1Sp_E) to get better over time. Putting in the reps and improving a little bit each time.\n>\n> Putting in the work without expecting any external reward at first (eg views, followers, likes, etc) will pay off in the long run. - [100 Scrappy Things](https://www.florin-pop.com/blog/100-scrappy-things/)\n\n> Make the difficult habitual, the habitual easy, and the easy beautiful. - [Constantin S. Stanislavski](https://www.goodreads.com/quotes/7102271-make-the-difficult-habitual-the-habitual-easy-and-the-easy)\n\n> A good match is a **structured** dance, where players aim to **score** while they are following well-defined **rules**. This **freedom within a structure** is what makes it fun. - [ralphammer](https://ralphammer.com/how-to-get-started/)\n\n- [Pivot Points](https://longform.asmartbear.com/pivot-points/)\n\n  - non-judgmental aspects of personality that can be strengths in some contexts and weaknesses in others\n  - Pivot Points are fixed in the short term\n\n- [Hedged Bets](https://longform.asmartbear.com/predict-the-future/#hedged-bets)\n  - trading slightly less maximum upside for predictable, net-positive outcomes.\n\n> “Motivation often comes after starting, not before. Action produces momentum.”\n> [When you start a new habit, it should take less than two minutes to do.](https://jamesclear.com/how-to-stop-procrastinating)\n>\n> - James Clear\n\n> Focus is more about **not** keeping busy when you need to wait for something.  \n> Eat the boredom for a minute.\n>\n> - [[life-tips#wodenokoto]]\n\n> [4 minutes run hard enough to push heart rate to 90%, 3 minutes recover, repeat 4 times](https://news.ycombinator.com/item?id=34213181)\n>\n> - https://www.ntnu.edu/cerg/advice\n> - [Get running with Couch to 5K](https://www.nhs.uk/live-well/exercise/running-and-aerobic-exercises/get-running-with-couch-to-5k/)\n\n> [recommended routine - bodyweightfitness](https://www.reddit.com/r/bodyweightfitness/wiki/kb/recommended_routine/) - I Don't Have This Much Time!\n>\n> - Don't workout at all (saves anywhere from 20 to 60 minutes, but really, really, really, really, really, really, really, really, really not recommended)\n\n> 도무지 읽히지 않는 책 앞에서 내가 택한 방법은 펼쳐진 페이지 앞에서 멍때리기이다. 다르게 표현하면 이렇다. 펼쳐진 두 페이지 앞에서 오래 머물기.\n>\n> 책을 펼쳐놓는 것으로 충분하다. 읽지 못해도 좋다. 매일 정해진 진도를 나가야 하는 학교 수업이 아니니까. 하지만 읽지 않아도 괜찮다고 해서 펼쳐두지조차 않으면 곤란하다. 가능한 한 자주 책을 펼쳐두도록 하자. 전혀 읽지 않고 멍하니 바라보고 있다가 다시 덮게 되더라도\n>\n> - 막막한 독서. 시로군. P.10~13\n\n> I think it should be everyone's primary focus to sleep well, drink water, get outside, get active, and eat generally decently. I hate to say it, but if you're not eating a good amount of vegetables and fruit, decent protein, sleep, etc, no amount of XYZ will catch up to that detriment. - [CE02](https://news.ycombinator.com/item?id=35056071)\n\n> My real battle is doing good versus doing nothing. - [Deirdre Sullivan](https://www.npr.org/2005/08/08/4785079/always-go-to-the-funeral)\n\n[Kind Engineering](https://kind.engineering/) - How To Engineer Kindness\n\n> Sometimes magic is just someone spending more time on something than anyone else might reasonably expect. - [Teller](https://www.goodreads.com/quotes/6641527-sometimes-magic-is-just-someone-spending-more-time-on-something)\n\n---\n\n## What I read in past\n\n- [[What I read in 2025|journal.what-i-read-in.2025]]\n  - [[2024|journal.what-i-read-in.2024]]\n  - [[2023|journal.what-i-read-in.2023]]\n  - [[2022|journal.what-i-read-in.2022]]\n- 📝 [Gists](https://gist.github.com/Luke-SNAW)\n- 📜 [Journals](https://luke-snaw.github.io/Luke-SNAW__netlify-CMS.github.io/)\n\n---\n\n- [[journal.what-i-struggled-brag-in]]\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":false,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"dendronVersion":"0.115.0","enableFullHierarchyNoteTitle":false,"enablePersistentHistory":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Luke SNAW","description":"Personal knowledge space"},"github":{"enableEditLink":false,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","siteUrl":"https://luke-snaw.github.io/","duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}