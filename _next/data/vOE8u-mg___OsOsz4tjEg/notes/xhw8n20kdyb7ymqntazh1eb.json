{"pageProps":{"note":{"id":"xhw8n20kdyb7ymqntazh1eb","title":"How the CSS :is, :where and :has Pseudo-class Selectors Work","desc":"","updated":1661901765786,"created":1661901394289,"custom":{},"fname":"dev.CSS.selectors.css-is-where-has-pseudo-class-selectors","type":"note","vault":{"fsPath":"vault"},"contentHash":"66331055b464f8905f19052300af8514","links":[],"anchors":{"the-css-is-pseudo-class-selector":{"type":"header","text":"The CSS :is Pseudo-class Selector","value":"the-css-is-pseudo-class-selector","line":32,"column":0,"depth":2},"the-css-where-pseudo-class-selector":{"type":"header","text":"The CSS :where Pseudo-class Selector","value":"the-css-where-pseudo-class-selector","line":113,"column":0,"depth":2},"the-css-has-pseudo-class-selector":{"type":"header","text":"The CSS :has Pseudo-class Selector","value":"the-css-has-pseudo-class-selector","line":166,"column":0,"depth":2}},"children":[],"parent":"y20bq777m2hbjiupa8h6kyn","data":{}},"body":"<h1 id=\"how-the-css-is-where-and-has-pseudo-class-selectors-work\">How the CSS :is, :where and :has Pseudo-class Selectors Work<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#how-the-css-is-where-and-has-pseudo-class-selectors-work\"></a></h1>\n<blockquote>\n<p><a href=\"https://www.sitepoint.com/css-is-where-has-pseudo-class-selectors/\">https://www.sitepoint.com/css-is-where-has-pseudo-class-selectors/</a></p>\n</blockquote>\n<blockquote>\n<p>The zero specificity of <code>:where()</code> could be practical for CSS resets.</p>\n</blockquote>\n<hr>\n<p><a href=\"https://www.sitepoint.com/getting-to-know-css3-selectors-structural-pseudo-classes/\">Pseudo-class selectors</a> target HTML elements based on their current state. Perhaps the most well known is <code>:hover</code>, which applies styles when the cursor moves over an element, so it’s used to highlight clickable links and buttons. Other <a href=\"https://developer.mozilla.org/docs/Web/CSS/Pseudo-classes\">popular options include</a>:</p>\n<ul>\n<li><code>:visited</code>: matches visited links</li>\n<li><code>:target</code>: matches an element targeted by a document URL</li>\n<li><code>:first-child</code>: targets the first child element</li>\n<li><code>:nth-child</code>: selects specific child elements</li>\n<li><code>:empty</code>: matches an element with no content or child elements</li>\n<li><code>:checked</code>: matches a toggled-on checkbox or radio button</li>\n<li><code>:blank</code>: styles an empty input field</li>\n<li><code>:enabled</code>: matches <a href=\"https://www.sitepoint.com/atoz-css-enabled-pseudo-class/\">an enabled input field</a></li>\n<li><code>:disabled</code>: matches a disabled input field</li>\n<li><code>:required</code>: targets a required input field</li>\n<li><code>:valid</code>: matches a valid input field</li>\n<li><code>:invalid</code>: matches an invalid input field</li>\n<li><code>:playing</code>: targets a playing audio or video element</li>\n</ul>\n<p>Browsers have recently received three more pseudo-class selectors…</p>\n<h2 id=\"the-css-is-pseudo-class-selector\">The CSS :is Pseudo-class Selector<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#the-css-is-pseudo-class-selector\"></a></h2>\n<p><em>Note: this was originally specified as <code>:matches()</code> and <code>:any()</code>, but <code>:is()</code> has become the CSS standard.</em></p>\n<p>You often need to apply the same styling to more than one element. For example, <code>&#x3C;p></code> paragraph text is black by default, but gray when it appears within an <code>&#x3C;article></code>, <code>&#x3C;section></code>, or <code>&#x3C;aside></code>:</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token comment\">/* default black */</span>\n<span class=\"token selector\">p</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token hexcode color\">#000</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/* gray in &#x3C;article>, &#x3C;section>, or &#x3C;aside> */</span>\n<span class=\"token selector\">article p<span class=\"token punctuation\">,</span>\nsection p<span class=\"token punctuation\">,</span>\naside p</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token hexcode color\">#444</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>This is a simple example, but more sophisticated pages will lead to more complicated and verbose selector strings. A syntax error in any selector could break styling for all elements.</p>\n<p>CSS preprocessors such as Sass permit nesting (which is also coming to <a href=\"https://www.w3.org/TR/css-nesting-1/\">native CSS</a>):</p>\n<pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token selector\">article,\nsection,\naside </span><span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">p </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token hexcode color\">#444</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>This creates identical CSS code, reduces typing effort, and can prevent errors. But:</p>\n<ul>\n<li>Until native nesting arrives, you’ll need a CSS build tool. You may want to use an option like Sass, but that can introduce complications for some development teams.</li>\n<li>Nesting can cause other problems. It’s easy to construct deeply nested selectors that become increasingly difficult to read and output verbose CSS.</li>\n</ul>\n<p><code>:is()</code> provides a native CSS solution which has <a href=\"https://caniuse.com/css-matches-pseudo\">full support in all modern browsers</a> (not IE):</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token pseudo-class\">:is</span><span class=\"token punctuation\">(</span>article<span class=\"token punctuation\">,</span> section<span class=\"token punctuation\">,</span> aside<span class=\"token punctuation\">)</span> p</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token hexcode color\">#444</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>A single selector can contain any number of <code>:is()</code> pseudo-classes. For example, the following complex selector applies a green text color to all <code>&#x3C;h1></code>, <code>&#x3C;h2></code>, and <code>&#x3C;p></code> elements that are children of a <code>&#x3C;section></code> which has a class of <code>.primary</code> or <code>.secondary</code> and which isn’t the first child of an <code>&#x3C;article></code>:</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">article section<span class=\"token pseudo-class\">:not</span><span class=\"token punctuation\">(</span><span class=\"token pseudo-class\">:first-child</span><span class=\"token punctuation\">)</span><span class=\"token pseudo-class\">:is</span><span class=\"token punctuation\">(</span><span class=\"token class\">.primary</span><span class=\"token punctuation\">,</span> <span class=\"token class\">.secondary</span><span class=\"token punctuation\">)</span> <span class=\"token pseudo-class\">:is</span><span class=\"token punctuation\">(</span>h1<span class=\"token punctuation\">,</span> h2<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token color\">green</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>The equivalent code without <code>:is()</code> required six CSS selectors:</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">article section<span class=\"token class\">.primary</span><span class=\"token pseudo-class\">:not</span><span class=\"token punctuation\">(</span><span class=\"token pseudo-class\">:first-child</span><span class=\"token punctuation\">)</span> h1<span class=\"token punctuation\">,</span>\narticle section<span class=\"token class\">.primary</span><span class=\"token pseudo-class\">:not</span><span class=\"token punctuation\">(</span><span class=\"token pseudo-class\">:first-child</span><span class=\"token punctuation\">)</span> h2<span class=\"token punctuation\">,</span>\narticle section<span class=\"token class\">.primary</span><span class=\"token pseudo-class\">:not</span><span class=\"token punctuation\">(</span><span class=\"token pseudo-class\">:first-child</span><span class=\"token punctuation\">)</span> p<span class=\"token punctuation\">,</span>\narticle section<span class=\"token class\">.secondary</span><span class=\"token pseudo-class\">:not</span><span class=\"token punctuation\">(</span><span class=\"token pseudo-class\">:first-child</span><span class=\"token punctuation\">)</span> h1<span class=\"token punctuation\">,</span>\narticle section<span class=\"token class\">.secondary</span><span class=\"token pseudo-class\">:not</span><span class=\"token punctuation\">(</span><span class=\"token pseudo-class\">:first-child</span><span class=\"token punctuation\">)</span> h2<span class=\"token punctuation\">,</span>\narticle section<span class=\"token class\">.secondary</span><span class=\"token pseudo-class\">:not</span><span class=\"token punctuation\">(</span><span class=\"token pseudo-class\">:first-child</span><span class=\"token punctuation\">)</span> p</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token color\">green</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>Note that <code>:is()</code> can’t match <code>::before</code> and <code>::after</code> pseudo-elements, so this example code will fail:</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token comment\">/* NOT VALID - selector will not work */</span>\n<span class=\"token selector\">div<span class=\"token pseudo-class\">:is</span><span class=\"token punctuation\">(</span><span class=\"token pseudo-element\">::before</span><span class=\"token punctuation\">,</span> <span class=\"token pseudo-element\">::after</span><span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token unit\">em</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token unit\">em</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token color\">blue</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2 id=\"the-css-where-pseudo-class-selector\">The CSS :where Pseudo-class Selector<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#the-css-where-pseudo-class-selector\"></a></h2>\n<p><code>:where()</code> selector syntax is identical to <code>:is()</code> and is also <a href=\"https://caniuse.com/mdn-css_selectors_where\">supported in all modern browsers</a> (not IE). It will often result in identical styling. For example:</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token pseudo-class\">:where</span><span class=\"token punctuation\">(</span>article<span class=\"token punctuation\">,</span> section<span class=\"token punctuation\">,</span> aside<span class=\"token punctuation\">)</span> p</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token hexcode color\">#444</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>The difference is <em><a href=\"https://developer.mozilla.org/docs/Web/CSS/Specificity\">specificity</a></em>. <strong>Specificity</strong> is the algorithm used to determine which CSS selector should override all others. In the following example, <code>article p</code> is more specific than <code>p</code> alone, so all paragraph elements within an <code>&#x3C;article></code> will be gray:</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">article p</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token hexcode color\">#444</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">p</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token hexcode color\">#000</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>In the case of <code>:is()</code>, the specificity is the most specific selector found within its arguments. In the case of <code>:where()</code>, the specificity is zero.</p>\n<p>Consider the following CSS:</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">article p</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token color\">black</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\"><span class=\"token pseudo-class\">:is</span><span class=\"token punctuation\">(</span>article<span class=\"token punctuation\">,</span> section<span class=\"token punctuation\">,</span> aside<span class=\"token punctuation\">)</span> p</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token color\">red</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\"><span class=\"token pseudo-class\">:where</span><span class=\"token punctuation\">(</span>article<span class=\"token punctuation\">,</span> section<span class=\"token punctuation\">,</span> aside<span class=\"token punctuation\">)</span> p</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token color\">blue</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>Let’s apply this CSS to the following HTML:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>article</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>p</span><span class=\"token punctuation\">></span></span>paragraph text<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>article</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<p>The paragraph text will be colored red.</p>\n<p>The <code>:is()</code> selector has the same specificity as <code>article p</code>, but it comes later in the stylesheet, so the text becomes red. It’s necessary to remove both the <code>article p</code> and <code>:is()</code> selectors to apply a blue color, because the <code>:where()</code> selector is less specific than either.</p>\n<p>More codebases will use <code>:is()</code> than <code>:where()</code>. However, the zero specificity of <code>:where()</code> could be practical for CSS resets, which apply a baseline of standard styles when no specific styling is available. Typically, resets apply a default font, color, paddings and margins.</p>\n<h2 id=\"the-css-has-pseudo-class-selector\">The CSS :has Pseudo-class Selector<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#the-css-has-pseudo-class-selector\"></a></h2>\n<p>The <code>:has()</code> selector uses a similar syntax to <code>:is()</code> and <code>:where()</code>, but it targets an element which <em>contains</em> a set of others.</p>","noteIndex":{"id":"Iy0MoL0KnL55Br3AfTS2C","title":"Luke","desc":"","updated":1761796791487,"created":1644449449778,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"4e745570ca97988a0362cb939b760952","links":[{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"life-tips","position":{"start":{"line":41,"column":5,"offset":2603},"end":{"line":41,"column":29,"offset":2627},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"life-tips","anchorHeader":"wodenokoto"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-read-in.2025","alias":"What I read in 2025","position":{"start":{"line":70,"column":3,"offset":4333},"end":{"line":70,"column":54,"offset":4384},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-read-in.2025"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-read-in.2024","alias":"2024","position":{"start":{"line":71,"column":5,"offset":4389},"end":{"line":71,"column":41,"offset":4425},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-read-in.2024"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-read-in.2023","alias":"2023","position":{"start":{"line":72,"column":5,"offset":4430},"end":{"line":72,"column":41,"offset":4466},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-read-in.2023"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-read-in.2022","alias":"2022","position":{"start":{"line":73,"column":5,"offset":4471},"end":{"line":73,"column":41,"offset":4507},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-read-in.2022"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-struggled-brag-in","position":{"start":{"line":79,"column":3,"offset":4643},"end":{"line":79,"column":39,"offset":4679},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-struggled-brag-in"}}],"anchors":{"what-i-read-in-past":{"type":"header","text":"What I read in past","value":"what-i-read-in-past","line":74,"column":0,"depth":2}},"children":["zd4mq442jike0pr0wba1u3m","6hzeqsofq67gdk88flxlkhp","778ijii93yu5uwnrwmn5zi4","g1fngdjl25nes6fs3lip602","ZbdkdApFqLdks4Moq92R9","uoc5hhki3o4py15cesddu8q","9qf7j06jtdkm6rnx9ymvwb0","5zn10cvj7ajy2gh2is5nqmg","4qo9ma0z0yu1czns6pxl7y5","ok0e729ho7o09xetujkxc0m","GR5x8HnNFEN6fU2UBSEIK","yirtnlj8q24yutcf3ss1xqy","eq0wc6t7wl2wv221yb68ro4","7x2fnv4j6gxts08qk0jguny","ettkt3iClONnxpbGwBVLl","7l4knev6v613tbuoskvmbdg","hvh5bud6yp7dc89tuh95tr9","4fvoqrplw0cweo554usbjos","f8qsfql0a9v8thpeo82udfa","1swsbrhqi9jk41v9eodyi5q","SQqYupi6EFddTerBA8RRD","hjNeNc1F2JUh0lTWanH4h","qf0l4wbrc9jgooyzexmbq5v","uur1lkol353z9vfeqb3n5bv","cd9n1czq3ursgkby985wkmm","k1sr43vwnfqztwc0s43pkcf","wfde75rhdvq2yfa2zy2q6rv","rjcmdv60jokmbw6zoq8u2ef","ujapvww8o6v3kpmlhtryq4k","pkwewou9d5e8ystswn1j2b4"],"parent":null,"data":{},"body":"\nHi there 👋. I'm a Front-end developer.\n\n---\n\n- 단순함과 꾸준함은 가장 쉬우면서도 지키기 어려운 원칙.\n\n- 🥱 -> 🤔💡🌱 - [On The Death of Daydreaming](https://www.afterbabel.com/p/on-the-death-of-daydreaming)\n  - boredom -> easy fun -> art -> profit?\n\n> I've often described my motivation for building software to others using imagery: I like to go find a secluded beach, build a large, magnificent sand castle, and then walk away. Will anyone notice? Probably not. Will the waves eventually destroy it? Yep. Did I still get immense satisfaction? Absolutely. - [aliasxneo](https://news.ycombinator.com/item?id=41497113)\n\n> We love to see the process, not just the result. The imperfections in your work can be beautiful if they show your struggle for perfection, not a lack of care. - [ralphammer](https://ralphammer.com/is-perfection-boring/)\n\n> Simplicity, even if it sacrifices some ideal functionality has better survival characteristics than the-right-thing. - [The Rise of Worse is Better](https://www.dreamsongs.com/RiseOfWorseIsBetter.html)\n\n> [Roberto Blake was talking about making 100 crappy videos](https://www.youtube.com/watch?v=OnUBaQ1Sp_E) to get better over time. Putting in the reps and improving a little bit each time.\n>\n> Putting in the work without expecting any external reward at first (eg views, followers, likes, etc) will pay off in the long run. - [100 Scrappy Things](https://www.florin-pop.com/blog/100-scrappy-things/)\n\n> Make the difficult habitual, the habitual easy, and the easy beautiful. - [Constantin S. Stanislavski](https://www.goodreads.com/quotes/7102271-make-the-difficult-habitual-the-habitual-easy-and-the-easy)\n\n> A good match is a **structured** dance, where players aim to **score** while they are following well-defined **rules**. This **freedom within a structure** is what makes it fun. - [ralphammer](https://ralphammer.com/how-to-get-started/)\n\n- [Pivot Points](https://longform.asmartbear.com/pivot-points/)\n\n  - non-judgmental aspects of personality that can be strengths in some contexts and weaknesses in others\n  - Pivot Points are fixed in the short term\n\n- [Hedged Bets](https://longform.asmartbear.com/predict-the-future/#hedged-bets)\n  - trading slightly less maximum upside for predictable, net-positive outcomes.\n\n> “Motivation often comes after starting, not before. Action produces momentum.”\n> [When you start a new habit, it should take less than two minutes to do.](https://jamesclear.com/how-to-stop-procrastinating)\n>\n> - James Clear\n\n> Focus is more about **not** keeping busy when you need to wait for something.  \n> Eat the boredom for a minute.\n>\n> - [[life-tips#wodenokoto]]\n\n> [4 minutes run hard enough to push heart rate to 90%, 3 minutes recover, repeat 4 times](https://news.ycombinator.com/item?id=34213181)\n>\n> - https://www.ntnu.edu/cerg/advice\n> - [Get running with Couch to 5K](https://www.nhs.uk/live-well/exercise/running-and-aerobic-exercises/get-running-with-couch-to-5k/)\n\n> [recommended routine - bodyweightfitness](https://www.reddit.com/r/bodyweightfitness/wiki/kb/recommended_routine/) - I Don't Have This Much Time!\n>\n> - Don't workout at all (saves anywhere from 20 to 60 minutes, but really, really, really, really, really, really, really, really, really not recommended)\n\n> 도무지 읽히지 않는 책 앞에서 내가 택한 방법은 펼쳐진 페이지 앞에서 멍때리기이다. 다르게 표현하면 이렇다. 펼쳐진 두 페이지 앞에서 오래 머물기.\n>\n> 책을 펼쳐놓는 것으로 충분하다. 읽지 못해도 좋다. 매일 정해진 진도를 나가야 하는 학교 수업이 아니니까. 하지만 읽지 않아도 괜찮다고 해서 펼쳐두지조차 않으면 곤란하다. 가능한 한 자주 책을 펼쳐두도록 하자. 전혀 읽지 않고 멍하니 바라보고 있다가 다시 덮게 되더라도\n>\n> - 막막한 독서. 시로군. P.10~13\n\n> I think it should be everyone's primary focus to sleep well, drink water, get outside, get active, and eat generally decently. I hate to say it, but if you're not eating a good amount of vegetables and fruit, decent protein, sleep, etc, no amount of XYZ will catch up to that detriment. - [CE02](https://news.ycombinator.com/item?id=35056071)\n\n> My real battle is doing good versus doing nothing. - [Deirdre Sullivan](https://www.npr.org/2005/08/08/4785079/always-go-to-the-funeral)\n\n[Kind Engineering](https://kind.engineering/) - How To Engineer Kindness\n\n> Sometimes magic is just someone spending more time on something than anyone else might reasonably expect. - [Teller](https://www.goodreads.com/quotes/6641527-sometimes-magic-is-just-someone-spending-more-time-on-something)\n\n---\n\n## What I read in past\n\n- [[What I read in 2025|journal.what-i-read-in.2025]]\n  - [[2024|journal.what-i-read-in.2024]]\n  - [[2023|journal.what-i-read-in.2023]]\n  - [[2022|journal.what-i-read-in.2022]]\n- 📝 [Gists](https://gist.github.com/Luke-SNAW)\n- 📜 [Journals](https://luke-snaw.github.io/Luke-SNAW__netlify-CMS.github.io/)\n\n---\n\n- [[journal.what-i-struggled-brag-in]]\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":false,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"dendronVersion":"0.115.0","enableFullHierarchyNoteTitle":false,"enablePersistentHistory":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Luke SNAW","description":"Personal knowledge space"},"github":{"enableEditLink":false,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","siteUrl":"https://luke-snaw.github.io/","duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}