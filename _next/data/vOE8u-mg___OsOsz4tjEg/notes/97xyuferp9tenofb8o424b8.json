{"pageProps":{"note":{"id":"97xyuferp9tenofb8o424b8","title":"Pdf Generator","desc":"","updated":1692948140682,"created":1692948041152,"custom":{},"fname":"dev.journal.genoplan.pdf-generator","type":"note","vault":{"fsPath":"vault"},"contentHash":"2bfc026f3e279b804da3ff59434c96bc","links":[{"from":{"fname":"journal.what-i-struggled-brag-in","id":"6645fjtiqxtko03nuccgjj2","vaultName":"vault"},"type":"backlink","position":{"start":{"line":240,"column":4,"offset":6596},"end":{"line":240,"column":56,"offset":6648},"indent":[]},"value":"dev.journal.genoplan.pdf-generator"},{"from":{"fname":"journal.what-i-struggled-brag-in","id":"6645fjtiqxtko03nuccgjj2","vaultName":"vault"},"type":"backlink","position":{"start":{"line":609,"column":8,"offset":21049},"end":{"line":609,"column":60,"offset":21101},"indent":[]},"value":"dev.journal.genoplan.pdf-generator"},{"from":{"fname":"journal.what-i-struggled-brag-in","id":"6645fjtiqxtko03nuccgjj2","vaultName":"vault"},"type":"backlink","position":{"start":{"line":653,"column":5,"offset":22350},"end":{"line":653,"column":57,"offset":22402},"indent":[]},"value":"dev.journal.genoplan.pdf-generator"}],"anchors":{"goal":{"type":"header","text":"Goal","value":"goal","line":11,"column":0,"depth":2},"requirements-overview":{"type":"header","text":"Requirements Overview","value":"requirements-overview","line":15,"column":0,"depth":3},"quality-goals":{"type":"header","text":"Quality Goals","value":"quality-goals","line":19,"column":0,"depth":3},"stakeholders":{"type":"header","text":"Stakeholders","value":"stakeholders","line":26,"column":0,"depth":3},"constraints":{"type":"header","text":"Constraints","value":"constraints","line":32,"column":0,"depth":2},"technical-constraints":{"type":"header","text":"Technical Constraints","value":"technical-constraints","line":34,"column":0,"depth":3},"context":{"type":"header","text":"Context","value":"context","line":40,"column":0,"depth":2},"user":{"type":"header","text":"User","value":"user","line":59,"column":0,"depth":3},"build-deployment":{"type":"header","text":"Build, Deployment","value":"build-deployment","line":67,"column":0,"depth":3},"html-page-to-pdf-render":{"type":"header","text":"HTML page to PDF render","value":"html-page-to-pdf-render","line":76,"column":0,"depth":3},"pdf-file":{"type":"header","text":"PDF file","value":"pdf-file","line":89,"column":0,"depth":3},"solution-strategy":{"type":"header","text":"Solution Strategy","value":"solution-strategy","line":96,"column":0,"depth":2},"building-block-view":{"type":"header","text":"Building Block View","value":"building-block-view","line":105,"column":0,"depth":2},"serverroutes":{"type":"header","text":"/server/routes/*","value":"serverroutes","line":107,"column":0,"depth":3},"pages":{"type":"header","text":"/pages/*","value":"pages","line":111,"column":0,"depth":3},"runtime-view":{"type":"header","text":"Runtime View","value":"runtime-view","line":115,"column":0,"depth":2},"deployment-view":{"type":"header","text":"Deployment View","value":"deployment-view","line":124,"column":0,"depth":2},"gpj-dev-계정":{"type":"header","text":"GPJ dev 계정","value":"gpj-dev-계정","line":126,"column":0,"depth":3},"decision-log":{"type":"header","text":"Decision Log","value":"decision-log","line":134,"column":0,"depth":2},"client가-아닌-server-generator을-쓰는-이유":{"type":"header","text":"Client가 아닌 server generator을 쓰는 이유","value":"client가-아닌-server-generator을-쓰는-이유","line":136,"column":0,"depth":3},"aws-lambda를-쓰는-이유":{"type":"header","text":"AWS Lambda를 쓰는 이유","value":"aws-lambda를-쓰는-이유","line":147,"column":0,"depth":3},"lambda-resource-setting":{"type":"header","text":"Lambda resource setting","value":"lambda-resource-setting","line":155,"column":0,"depth":3},"생성에-걸리는-시간-quality-goals2-관련":{"type":"header","text":"생성에 걸리는 시간 Quality Goals#2 관련","value":"생성에-걸리는-시간-quality-goals2-관련","line":157,"column":0,"depth":4},"가격-quality-goals1-충족":{"type":"header","text":"가격 Quality Goals#1 충족","value":"가격-quality-goals1-충족","line":172,"column":0,"depth":4},"s3를-써야-하는-이유":{"type":"header","text":"S3를 써야 하는 이유","value":"s3를-써야-하는-이유","line":177,"column":0,"depth":3},"하루-한-번-s3-directory-삭제-quality-goals4":{"type":"header","text":"하루 한 번 S3 directory 삭제 Quality Goals#4","value":"하루-한-번-s3-directory-삭제-quality-goals4","line":181,"column":0,"depth":3},"download-multiple-pdf-into-one-zip-file":{"type":"header","text":"Download multiple PDF into one zip file","value":"download-multiple-pdf-into-one-zip-file","line":188,"column":0,"depth":3},"references":{"type":"header","text":"References","value":"references","line":198,"column":0,"depth":2},"generation-pdf-with-headless-chrome":{"type":"header","text":"Generation pdf with headless chrome","value":"generation-pdf-with-headless-chrome","line":200,"column":0,"depth":3},"etc":{"type":"header","text":"Etc","value":"etc","line":223,"column":0,"depth":3}},"children":[],"parent":"djdvoLLYDZe9TkgbPbnIt","data":{}},"body":"<h1 id=\"pdf-generator\">Pdf Generator<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#pdf-generator\"></a></h1>\n<p><a href=\"https://arc42.org/overview\">Arc42</a>와 <a href=\"https://c4model.com/\">C4 model</a>을 참고하여\n프로젝트 문서를 작성</p>\n<h2 id=\"goal\">Goal<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#goal\"></a></h2>\n<p>제공되는 웹페이지를 A4 크기의 PDF로 만들어 client에게 제공</p>\n<h3 id=\"requirements-overview\">Requirements Overview<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#requirements-overview\"></a></h3>\n<p>기존에 PDF 생성에 사용하던 <a href=\"https://pdfcrowd.com/\">PDFCrowd</a>를 대체할 도구 제작</p>\n<h3 id=\"quality-goals\">Quality Goals<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#quality-goals\"></a></h3>\n<ol>\n<li>PDFCrowd보다 저럼하게 → $276/month 보다 저렴히</li>\n<li>PDFCrowd보다 빠르게 PDF 생성 → 20~30초보다 빠르게</li>\n<li>PDFCrowd보다 Scalability 좋게 → 동시 생성 가능 개수를 전체 8개보다 많게</li>\n<li>생성된 PDF를 S3 저장하여 서비스하고 그대로 파일을 방치하는 프로세스를 개선하여 인프라·관리 비용을 줄일 것</li>\n</ol>\n<h3 id=\"stakeholders\">Stakeholders<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#stakeholders\"></a></h3>\n<div class=\"table-responsive\">\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>Name</th><th>Expectations</th></tr></thead><tbody><tr><td>Luke</td><td>Project, AWS Infra 관리</td></tr></tbody></table></div>\n<h2 id=\"constraints\">Constraints<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#constraints\"></a></h2>\n<h3 id=\"technical-constraints\">Technical Constraints<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#technical-constraints\"></a></h3>\n<div class=\"table-responsive\">\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>Constraint</th><th>Background and / or motivation</th></tr></thead><tbody><tr><td>Web browser로 다운가능</td><td>파트너사나 Report 고객에게 PDF를 제공할 때 가장 접근성이 좋다.</td></tr></tbody></table></div>\n<h2 id=\"context\">Context<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#context\"></a></h2>\n<div class=\"mermaid\">\n  C4Context\n  title System Context diagram for PDF download\n\n  Person(user, \"User\", \"People that need PDF\")\n  System_Boundary(WebApp, \"Web App\") {\n    Container(WebPage, \"Web Page\", \"Report, Portal, .com\")\n    Container(PdfGenerator, \"PDF Generator\", \"AWS Lambda, S3\")\n  }\n\n  BiRel(user, WebPage, \"1. Request to download PDF ⬇️ / 4. Download PDF file ⬆️\")\n  BiRel(WebPage, PdfGenerator, \"2. Request API ➡️ / 3. Redirect to PDF file ⬅️\")\n\n  UpdateRelStyle(user, WebPage, $offsetX=\"-115\", $offsetY=\"-30\", $lineColor=\"blue\", $textColor=\"red\")\n  UpdateRelStyle(WebPage, PdfGenerator, $offsetX=\"-85\", $offsetY=\"45\")\n</div>\n<h3 id=\"user\">User<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#user\"></a></h3>\n<div class=\"table-responsive\">\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>사용자</th><th>용도</th></tr></thead><tbody><tr><td>Report 고객</td><td>Mybook 다운로드</td></tr><tr><td>파트너사</td><td>Mybook 인쇄</td></tr><tr><td>[.com] 고객</td><td>동의서(미리 생성)</td></tr></tbody></table></div>\n<h3 id=\"build-deployment\">Build, Deployment<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#build-deployment\"></a></h3>\n<p>github action을 통해 nuxt build.</p>\n<p>client code는 S3, cloudfront로 배포, server code는 aws lambda로 배포.\n(cloudfront는 없어도 될 듯?)</p>\n<p>현재 AWS GPJ dev 계정에만 연결되어 있음. 추후 AWS GPK 계정에도 세팅해야 함.</p>\n<h3 id=\"html-page-to-pdf-render\">HTML page to PDF render<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#html-page-to-pdf-render\"></a></h3>\n<p>이 프로젝트에서 생성할 PDF target. 2023년 Q3 현재 back-end에서 제작 중.</p>\n<p>추후 front-end에서 담당할 예정</p>\n<details>\n<summary>예제 URL</summary>\n<ul>\n<li><del>Sample URL A</del></li>\n<li><del>Sample URL B</del>\n</li></ul></details>\n\n\n<h3 id=\"pdf-file\">PDF file<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#pdf-file\"></a></h3>\n<p>S3에 저장되는 결과물. github action을 통해 하루 단위로 삭제. <a href=\"#quality-goals\">Quality Goals#4</a></p>\n<p>github 공식문서에서 언급하듯이 <a href=\"#%ED%95%98%EB%A3%A8-%ED%95%9C-%EB%B2%88-s3-directory-%EC%82%AD%EC%A0%9C\">cron 신뢰도가 좀 떨어지므로</a> 2번 trigger 걸어놓음.<br>\n결과는 slack channel로 message 보내게 해뒀으니 체크하여 대응할 수 있도록 함.</p>\n<h2 id=\"solution-strategy\">Solution Strategy<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#solution-strategy\"></a></h2>\n<div class=\"table-responsive\">\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>Quality goal</th><th>Solution Approach</th><th>Details</th></tr></thead><tbody><tr><td>$276/month 보다 저렴히</td><td>AWS Lambda 사용</td><td><a href=\"#lambda-resource-setting\">Lambda resource setting</a></td></tr><tr><td>20~30초보다 빠르게 PDF 생성</td><td>AWS Lambda 사용</td><td><a href=\"#lambda-resource-setting\">Lambda resource setting</a></td></tr><tr><td>동시 생성 가능 개수를 전체 8개보다 많게</td><td>AWS Lambda 사용</td><td><a href=\"#aws-lambda%EB%A5%BC-%EC%93%B0%EB%8A%94-%EC%9D%B4%EC%9C%A0\">AWS Lambda를 쓰는 이유</a></td></tr><tr><td>인프라·관리 비용 줄이기</td><td>Github action cron 사용</td><td><a href=\"#%ED%95%98%EB%A3%A8-%ED%95%9C-%EB%B2%88-s3-directory-%EC%82%AD%EC%A0%9C-quality-goals4\">하루 한 번 S3 dir 삭제</a></td></tr></tbody></table></div>\n<h2 id=\"building-block-view\">Building Block View<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#building-block-view\"></a></h2>\n<h3 id=\"serverroutes\">/server/routes/*<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#serverroutes\"></a></h3>\n<p>Puppeteer로 지정된 Render URL을 PDF로 생성하여 S3에 저장 후 redirect하는 API</p>\n<h3 id=\"pages\">/pages/*<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#pages\"></a></h3>\n<p><a href=\"https://github.com/eligrey/FileSaver.js\">FileSaver.js</a>, <a href=\"https://github.com/Stuk/jszip\">JSZip</a>를 사용하여 client 단에서 Download를 실행시키는 페이지</p>\n<h2 id=\"runtime-view\">Runtime View<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#runtime-view\"></a></h2>\n<ul>\n<li>AWS Lambda에서 Puppeteer + <a href=\"https://github.com/Sparticuz/chromium#-min-package\">headless chromium</a>으로 PDF 생성\n<ul>\n<li>이미 생성된 PDF가 있다면 생성과정 없이 바로 redirect</li>\n</ul>\n</li>\n<li>PDF는 <a href=\"#s3%EB%A5%BC-%EC%8D%A8%EC%95%BC-%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0\">S3에 저장</a> 후, 해당 URL을 redirect\n<ul>\n<li>내일을 expire day로 잡아 directory로 생성</li>\n<li><a href=\"#%ED%95%98%EB%A3%A8-%ED%95%9C-%EB%B2%88-s3-directory-%EC%82%AD%EC%A0%9C\">하루 한 번 Github action cron으로 directory 삭제</a></li>\n</ul>\n</li>\n<li>redirect 후 단일 PDF <a href=\"https://github.com/eligrey/FileSaver.js\">저장</a> or <a href=\"#download-multiple-pdf-into-one-zip-file\">복수 개의 PDF라면 zip으로 저장</a></li>\n</ul>\n<h2 id=\"deployment-view\">Deployment View<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#deployment-view\"></a></h2>\n<h3 id=\"gpj-dev-계정\">GPJ dev 계정<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#gpj-dev-계정\"></a></h3>\n<div class=\"table-responsive\">\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>Infrastructure</th><th>Description</th></tr></thead><tbody><tr><td>AWS Lambda</td><td><del>Lambda Function URL</del></td></tr><tr><td>AWS S3 client 배포용</td><td><del>S3 URL</del></td></tr><tr><td>AWS S3 PDF resources</td><td><del>S3 URL</del></td></tr></tbody></table></div>\n<h2 id=\"decision-log\">Decision Log<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#decision-log\"></a></h2>\n<h3 id=\"client가-아닌-server-generator을-쓰는-이유\">Client가 아닌 server generator을 쓰는 이유<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#client가-아닌-server-generator을-쓰는-이유\"></a></h3>\n<p>client에서 생성할 수 있지만, server에서 생성해서 내려주는게 사용자별 browser 호환성 문제 없다.</p>\n<details>\n<summary>Client PDF generator tools</summary>\n<ul>\n<li><a href=\"https://github.com/parallax/jsPDF\">https://github.com/parallax/jsPDF</a></li>\n<li><a href=\"https://github.com/eKoopmans/html2pdf.js\">https://github.com/eKoopmans/html2pdf.js</a>\n</li></ul></details>\n\n\n<h3 id=\"aws-lambda를-쓰는-이유\">AWS Lambda를 쓰는 이유<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#aws-lambda를-쓰는-이유\"></a></h3>\n<p>Scalability 확보를 위해. <a href=\"#quality-goals\">Quality Goals#3</a></p>\n<p>복수(30개) pdf 생성 &#x26; 다운로드 테스트해보니 <a href=\"https://stackoverflow.com/a/985704\">browser에서 동시 접속 제한</a>만큼 병렬로 생성 됨 (보통 6개)</p>\n<ul>\n<li>이전 PDFCrowd는 여러 명이 사용해도 전체 8개 제한이 있지만 Lambda는 그런 제한이 없음</li>\n</ul>\n<h3 id=\"lambda-resource-setting\">Lambda resource setting<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#lambda-resource-setting\"></a></h3>\n<h4 id=\"생성에-걸리는-시간-quality-goals2-관련\">생성에 걸리는 시간 <a href=\"#quality-goals\">Quality Goals#2 관련</a><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#생성에-걸리는-시간-quality-goals2-관련\"></a></h4>\n<p>PDFCrowd의 경우 20~30초</p>\n<p>메모리에 따라 CPU 할당도 변경.<br>\nSample PDF(6.5초 rendering) 기준, run Puppeteer + Load HTML + save PDF to S3에 걸리는 시간:</p>\n<div class=\"table-responsive\">\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>할당된 메모리</th><th>생성에 걸리는 시간</th></tr></thead><tbody><tr><td>4096MB</td><td>18초</td></tr><tr><td>2048MB</td><td>21초</td></tr><tr><td>1024MB</td><td>48초</td></tr></tbody></table></div>\n<p>CPU를 더 할당해도, lambda cold start와 API response time은 못 줄임.</p>\n<h4 id=\"가격-quality-goals1-충족\">가격 <a href=\"#quality-goals\">Quality Goals#1 충족</a><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#가격-quality-goals1-충족\"></a></h4>\n<p>2기가 기준으로 sample pdf 하나당 $0.0006993가 소모된다. (<a href=\"https://aws.amazon.com/ko/lambda/pricing/#AWS_Lambda_Pricing\">memory cpu 가격</a>만 따졌을 때) 1만 건당 7달러.<br>\n2022.08~2023.08의 1년에 약 2만 건. $14 vs $3312(PDFCrowd plan $276/month x 12개월)</p>\n<h3 id=\"s3를-써야-하는-이유\">S3를 써야 하는 이유<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#s3를-써야-하는-이유\"></a></h3>\n<p>lambda에서 직접 다운로드 불가 - <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-limits.html#function-configuration-deployment-and-execution\">용량 초과(Invocation payload)</a></p>\n<h3 id=\"하루-한-번-s3-directory-삭제-quality-goals4\">하루 한 번 S3 directory 삭제 <a href=\"#quality-goals\">Quality Goals#4</a><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#하루-한-번-s3-directory-삭제-quality-goals4\"></a></h3>\n<p>Github cron issue - <a href=\"https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#schedule\">공식 문서</a>에서 schedule time이 부정확하고 누락 가능성도 있다고 언급<br>\n-> 새벽에 2번 실행. slack message 확인 후 안됐으면 github에서 직접 실행 가능</p>\n<p>github actions나 AWS lambda 시간은 UTC+0 기준.</p>\n<h3 id=\"download-multiple-pdf-into-one-zip-file\">Download multiple PDF into one zip file<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#download-multiple-pdf-into-one-zip-file\"></a></h3>\n<p>파트너사? 사용자가 하나하나 받기 불편하다고 요청</p>\n<p><a href=\"https://github.com/eligrey/FileSaver.js\">FileSaver.js</a>, <a href=\"https://github.com/Stuk/jszip\">JSZip</a>, <a href=\"https://github.com/Stuk/jszip-utils\">JSZipUtils</a>으로 browser 단에서 받도록</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/a/985704\">browser에서 동시 접속 제한</a>만큼 병렬로 생성 됨 (보통 6개)</li>\n<li>30개 생성 + pdf download + zip 생성 후 저장에 2분 안 걸림 (227.4MB)</li>\n<li><a href=\"https://github.com/eligrey/FileSaver.js#supported-browsers\">chrome에서 2GB 제한</a>. 더 큰 파일은 stream 이용하는 code로 변경해야 함</li>\n</ul>\n<h2 id=\"references\">References<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#references\"></a></h2>\n<h3 id=\"generation-pdf-with-headless-chrome\">Generation pdf with headless chrome<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#generation-pdf-with-headless-chrome\"></a></h3>\n<p>찾는 문서마다 chromium binary가 몇 년 지난 구 버전뿐이라 다른 문서에서 설명하는 docker image로 올려야 하나 고민했는데 계속 찾아보니 최신 binary를 발견</p>\n<details>\n<summary>참고 URLs</summary>\n<ul>\n<li><a href=\"https://github.com/puppeteer/puppeteer/blob/main/docs/troubleshooting.md#running-puppeteer-on-aws-lambda\">Running Puppeteer on AWS Lambda</a>\n<ul>\n<li><a href=\"https://github.com/Sparticuz/chromium\">https://github.com/Sparticuz/chromium</a></li>\n<li><a href=\"https://github.com/Sparticuz/chromium#-min-package\">https://github.com/Sparticuz/chromium#-min-package</a>\n<ul>\n<li><a href=\"https://github.com/Sparticuz/chromium/blob/master/examples/remote-min-binary/index.js\">https://github.com/Sparticuz/chromium/blob/master/examples/remote-min-binary/index.js</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/Sparticuz/chromium#running-locally--headlessheadful-mode\">https://github.com/Sparticuz/chromium#running-locally--headlessheadful-mode</a></li>\n</ul>\n</li>\n<li><a href=\"https://dev.to/aws-builders/building-a-pdf-generator-using-aws-lambda-4220#the-best-way-out-serverside-generation\">https://dev.to/aws-builders/building-a-pdf-generator-using-aws-lambda-4220#the-best-way-out-serverside-generation</a></li>\n<li><a href=\"https://blog.carlosnunez.me/post/scraping-chromium-lambda-nodeless-zerostress/#lessons-learned\">Also make sure that you use --no-sandbox, --disable-dev-shm-usage, --disable-gpu, and --single-process.</a></li>\n<li><a href=\"https://wkhtmltopdf.org/downloads.html#stable\">https://wkhtmltopdf.org/downloads.html#stable</a> - lambda용 binary가 있어 이것도 괜찮을거 같은데 <code>Qt WebKit rendering engine</code>을 써서 개발 시 귀찮을 듯</li>\n<li><a href=\"https://awstip.com/pdf-generator-by-puppeteer-on-aws-lambda-with-nestjs-and-serverless-framework-669ba22d9fa\">Chromium only supports x86_64 architecture inside lambda docker container, not arm64</a></li>\n<li><a href=\"https://github.com/alixaxel/chrome-aws-lambda/wiki/HOWTO:-Local-Development\">Local Development</a></li>\n<li><a href=\"https://github.com/Wavelop/download-pdf-aws/blob/main/lambdas/download-pdf.ts\">header/footer template</a></li>\n<li><a href=\"https://apitemplate.io/blog/tips-for-generating-pdfs-with-puppeteer/\">puppeteer launch option</a></li>\n<li><a href=\"https://github.com/puppeteer/puppeteer/issues/1523\"><code>browser.newPage()</code> returns null</a></li>\n<li><a href=\"https://stackoverflow.com/questions/11415665/save-base64-string-as-pdf-at-client-side-with-javascript\">save base64 string as pdf at client</a>\n</li></ul></details>\n\n\n<h3 id=\"etc\">Etc<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#etc\"></a></h3>\n<details>\n<summary>그 외 참고했던 URLs</summary>\n<ul>\n<li><a href=\"https://chromedevtools.github.io/devtools-protocol/tot/Page/#method-printToPDF\">https://chromedevtools.github.io/devtools-protocol/tot/Page/#method-printToPDF</a></li>\n<li><a href=\"https://blog.grio.com/2020/08/understanding-pdf-generation-with-headless-chrome.html\">https://blog.grio.com/2020/08/understanding-pdf-generation-with-headless-chrome.html</a></li>\n<li><a href=\"https://developer.chrome.com/blog/headless-chrome/\">https://developer.chrome.com/blog/headless-chrome/</a></li>\n<li><a href=\"https://github.com/GoogleChrome/chrome-launcher\">https://github.com/GoogleChrome/chrome-launcher</a></li>\n<li><a href=\"https://medium.com/compass-true-north/go-service-to-convert-web-pages-to-pdf-using-headless-chrome-5fd9ffbae1af\">https://medium.com/compass-true-north/go-service-to-convert-web-pages-to-pdf-using-headless-chrome-5fd9ffbae1af</a></li>\n<li><a href=\"https://dev.to/aromanarguello/using-aws-lambdas-headless-chrome-to-generate-pdf-files-from-html-b4l\">https://dev.to/aromanarguello/using-aws-lambdas-headless-chrome-to-generate-pdf-files-from-html-b4l</a></li>\n<li><a href=\"https://github.com/alixaxel/chrome-aws-lambda\">https://github.com/alixaxel/chrome-aws-lambda</a></li>\n<li><a href=\"https://github.com/adieuadieu/serverless-chrome\">https://github.com/adieuadieu/serverless-chrome</a></li>\n<li><a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html\">Amazon Linux 2</a>\n<ul>\n<li><a href=\"https://commondatastorage.googleapis.com/chromium-browser-snapshots/index.html?prefix=Linux_ARM_Cross-Compile/\">https://commondatastorage.googleapis.com/chromium-browser-snapshots/index.html?prefix=Linux_ARM_Cross-Compile/</a></li>\n</ul>\n</li>\n<li><a href=\"https://dev.to/akirautio/generate-a-pdf-in-aws-lambda-with-nodejs-and-puppeteer-2b93\">https://dev.to/akirautio/generate-a-pdf-in-aws-lambda-with-nodejs-and-puppeteer-2b93</a>\n<blockquote>\n<p>And here we have everything to generate PDF in AWS lambda. To my opinion generating the pdf with 1024 MB took something like 4000ms which would mean that total price would be close to 1 euro per 20000 PDF generations after free tier.</p>\n<ul>\n<li><a href=\"https://github.com/ARautio/aws-lambda-pdf-generator-puppeteer\">https://github.com/ARautio/aws-lambda-pdf-generator-puppeteer</a></li>\n<li><a href=\"https://github.com/RelaxedJS/ReLaXed\">https://github.com/RelaxedJS/ReLaXed</a></li>\n</ul>\n</blockquote>\n</li>\n<li><a href=\"https://stackoverflow.com/questions/58629198/base64-to-pdf-export-issue-aws-lambda\">https://stackoverflow.com/questions/58629198/base64-to-pdf-export-issue-aws-lambda</a> - API gateway permission</li>\n<li><a href=\"https://aws.amazon.com/ko/blogs/architecture/field-notes-scaling-browser-automation-with-puppeteer-on-aws-lambda-with-container-image-support/\">https://aws.amazon.com/ko/blogs/architecture/field-notes-scaling-browser-automation-with-puppeteer-on-aws-lambda-with-container-image-support/</a></li>\n<li><a href=\"https://github.com/serverless/examples/tree/v3/aws-node-puppeteer\">https://github.com/serverless/examples/tree/v3/aws-node-puppeteer</a></li>\n<li><a href=\"https://stackoverflow.com/a/74549527/5163033\">https://stackoverflow.com/a/74549527/5163033</a> - generate pdf using Blob\n</li></ul></details>\n\n\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/notes/6645fjtiqxtko03nuccgjj2\">What I struggled 🧗/📣 brag In</a></li>\n</ul>","noteIndex":{"id":"Iy0MoL0KnL55Br3AfTS2C","title":"Luke","desc":"","updated":1761796791487,"created":1644449449778,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"4e745570ca97988a0362cb939b760952","links":[{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"life-tips","position":{"start":{"line":41,"column":5,"offset":2603},"end":{"line":41,"column":29,"offset":2627},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"life-tips","anchorHeader":"wodenokoto"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-read-in.2025","alias":"What I read in 2025","position":{"start":{"line":70,"column":3,"offset":4333},"end":{"line":70,"column":54,"offset":4384},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-read-in.2025"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-read-in.2024","alias":"2024","position":{"start":{"line":71,"column":5,"offset":4389},"end":{"line":71,"column":41,"offset":4425},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-read-in.2024"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-read-in.2023","alias":"2023","position":{"start":{"line":72,"column":5,"offset":4430},"end":{"line":72,"column":41,"offset":4466},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-read-in.2023"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-read-in.2022","alias":"2022","position":{"start":{"line":73,"column":5,"offset":4471},"end":{"line":73,"column":41,"offset":4507},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-read-in.2022"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-struggled-brag-in","position":{"start":{"line":79,"column":3,"offset":4643},"end":{"line":79,"column":39,"offset":4679},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-struggled-brag-in"}}],"anchors":{"what-i-read-in-past":{"type":"header","text":"What I read in past","value":"what-i-read-in-past","line":74,"column":0,"depth":2}},"children":["zd4mq442jike0pr0wba1u3m","6hzeqsofq67gdk88flxlkhp","778ijii93yu5uwnrwmn5zi4","g1fngdjl25nes6fs3lip602","ZbdkdApFqLdks4Moq92R9","uoc5hhki3o4py15cesddu8q","9qf7j06jtdkm6rnx9ymvwb0","5zn10cvj7ajy2gh2is5nqmg","4qo9ma0z0yu1czns6pxl7y5","ok0e729ho7o09xetujkxc0m","GR5x8HnNFEN6fU2UBSEIK","yirtnlj8q24yutcf3ss1xqy","eq0wc6t7wl2wv221yb68ro4","7x2fnv4j6gxts08qk0jguny","ettkt3iClONnxpbGwBVLl","7l4knev6v613tbuoskvmbdg","hvh5bud6yp7dc89tuh95tr9","4fvoqrplw0cweo554usbjos","f8qsfql0a9v8thpeo82udfa","1swsbrhqi9jk41v9eodyi5q","SQqYupi6EFddTerBA8RRD","hjNeNc1F2JUh0lTWanH4h","qf0l4wbrc9jgooyzexmbq5v","uur1lkol353z9vfeqb3n5bv","cd9n1czq3ursgkby985wkmm","k1sr43vwnfqztwc0s43pkcf","wfde75rhdvq2yfa2zy2q6rv","rjcmdv60jokmbw6zoq8u2ef","ujapvww8o6v3kpmlhtryq4k","pkwewou9d5e8ystswn1j2b4"],"parent":null,"data":{},"body":"\nHi there 👋. I'm a Front-end developer.\n\n---\n\n- 단순함과 꾸준함은 가장 쉬우면서도 지키기 어려운 원칙.\n\n- 🥱 -> 🤔💡🌱 - [On The Death of Daydreaming](https://www.afterbabel.com/p/on-the-death-of-daydreaming)\n  - boredom -> easy fun -> art -> profit?\n\n> I've often described my motivation for building software to others using imagery: I like to go find a secluded beach, build a large, magnificent sand castle, and then walk away. Will anyone notice? Probably not. Will the waves eventually destroy it? Yep. Did I still get immense satisfaction? Absolutely. - [aliasxneo](https://news.ycombinator.com/item?id=41497113)\n\n> We love to see the process, not just the result. The imperfections in your work can be beautiful if they show your struggle for perfection, not a lack of care. - [ralphammer](https://ralphammer.com/is-perfection-boring/)\n\n> Simplicity, even if it sacrifices some ideal functionality has better survival characteristics than the-right-thing. - [The Rise of Worse is Better](https://www.dreamsongs.com/RiseOfWorseIsBetter.html)\n\n> [Roberto Blake was talking about making 100 crappy videos](https://www.youtube.com/watch?v=OnUBaQ1Sp_E) to get better over time. Putting in the reps and improving a little bit each time.\n>\n> Putting in the work without expecting any external reward at first (eg views, followers, likes, etc) will pay off in the long run. - [100 Scrappy Things](https://www.florin-pop.com/blog/100-scrappy-things/)\n\n> Make the difficult habitual, the habitual easy, and the easy beautiful. - [Constantin S. Stanislavski](https://www.goodreads.com/quotes/7102271-make-the-difficult-habitual-the-habitual-easy-and-the-easy)\n\n> A good match is a **structured** dance, where players aim to **score** while they are following well-defined **rules**. This **freedom within a structure** is what makes it fun. - [ralphammer](https://ralphammer.com/how-to-get-started/)\n\n- [Pivot Points](https://longform.asmartbear.com/pivot-points/)\n\n  - non-judgmental aspects of personality that can be strengths in some contexts and weaknesses in others\n  - Pivot Points are fixed in the short term\n\n- [Hedged Bets](https://longform.asmartbear.com/predict-the-future/#hedged-bets)\n  - trading slightly less maximum upside for predictable, net-positive outcomes.\n\n> “Motivation often comes after starting, not before. Action produces momentum.”\n> [When you start a new habit, it should take less than two minutes to do.](https://jamesclear.com/how-to-stop-procrastinating)\n>\n> - James Clear\n\n> Focus is more about **not** keeping busy when you need to wait for something.  \n> Eat the boredom for a minute.\n>\n> - [[life-tips#wodenokoto]]\n\n> [4 minutes run hard enough to push heart rate to 90%, 3 minutes recover, repeat 4 times](https://news.ycombinator.com/item?id=34213181)\n>\n> - https://www.ntnu.edu/cerg/advice\n> - [Get running with Couch to 5K](https://www.nhs.uk/live-well/exercise/running-and-aerobic-exercises/get-running-with-couch-to-5k/)\n\n> [recommended routine - bodyweightfitness](https://www.reddit.com/r/bodyweightfitness/wiki/kb/recommended_routine/) - I Don't Have This Much Time!\n>\n> - Don't workout at all (saves anywhere from 20 to 60 minutes, but really, really, really, really, really, really, really, really, really not recommended)\n\n> 도무지 읽히지 않는 책 앞에서 내가 택한 방법은 펼쳐진 페이지 앞에서 멍때리기이다. 다르게 표현하면 이렇다. 펼쳐진 두 페이지 앞에서 오래 머물기.\n>\n> 책을 펼쳐놓는 것으로 충분하다. 읽지 못해도 좋다. 매일 정해진 진도를 나가야 하는 학교 수업이 아니니까. 하지만 읽지 않아도 괜찮다고 해서 펼쳐두지조차 않으면 곤란하다. 가능한 한 자주 책을 펼쳐두도록 하자. 전혀 읽지 않고 멍하니 바라보고 있다가 다시 덮게 되더라도\n>\n> - 막막한 독서. 시로군. P.10~13\n\n> I think it should be everyone's primary focus to sleep well, drink water, get outside, get active, and eat generally decently. I hate to say it, but if you're not eating a good amount of vegetables and fruit, decent protein, sleep, etc, no amount of XYZ will catch up to that detriment. - [CE02](https://news.ycombinator.com/item?id=35056071)\n\n> My real battle is doing good versus doing nothing. - [Deirdre Sullivan](https://www.npr.org/2005/08/08/4785079/always-go-to-the-funeral)\n\n[Kind Engineering](https://kind.engineering/) - How To Engineer Kindness\n\n> Sometimes magic is just someone spending more time on something than anyone else might reasonably expect. - [Teller](https://www.goodreads.com/quotes/6641527-sometimes-magic-is-just-someone-spending-more-time-on-something)\n\n---\n\n## What I read in past\n\n- [[What I read in 2025|journal.what-i-read-in.2025]]\n  - [[2024|journal.what-i-read-in.2024]]\n  - [[2023|journal.what-i-read-in.2023]]\n  - [[2022|journal.what-i-read-in.2022]]\n- 📝 [Gists](https://gist.github.com/Luke-SNAW)\n- 📜 [Journals](https://luke-snaw.github.io/Luke-SNAW__netlify-CMS.github.io/)\n\n---\n\n- [[journal.what-i-struggled-brag-in]]\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":false,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"dendronVersion":"0.115.0","enableFullHierarchyNoteTitle":false,"enablePersistentHistory":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Luke SNAW","description":"Personal knowledge space"},"github":{"enableEditLink":false,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","siteUrl":"https://luke-snaw.github.io/","duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}