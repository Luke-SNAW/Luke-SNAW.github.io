{"pageProps":{"note":{"id":"g591hgvcg5ld92hijel3i4c","title":"How to Use v-model with Form Inputs in Vue","desc":"","updated":1679385310600,"created":1679384891433,"custom":{},"fname":"dev.javascript.vue.vue-v-model-form-inputs","type":"note","vault":{"fsPath":"vault"},"contentHash":"0701b2d0af220efed5441260de5a5919","links":[],"anchors":{"1-binding-a-form-input":{"type":"header","text":"1. Binding a form input","value":"1-binding-a-form-input","line":21,"column":0,"depth":2},"2-v-model-vs-v-bind":{"type":"header","text":"2. v-model vs v-bind","value":"2-v-model-vs-v-bind","line":56,"column":0,"depth":2},"21-emulating-v-model":{"type":"header","text":"2.1 Emulating v-model","value":"21-emulating-v-model","line":98,"column":0,"depth":3},"3-binding-using-reactive":{"type":"header","text":"3. Binding using reactive()","value":"3-binding-using-reactive","line":134,"column":0,"depth":2},"4-binding-different-input-types":{"type":"header","text":"4. Binding different input types","value":"4-binding-different-input-types","line":168,"column":0,"depth":2},"41-textareas":{"type":"header","text":"4.1 Textareas","value":"41-textareas","line":172,"column":0,"depth":3},"42-select-fields":{"type":"header","text":"4.2 Select fields","value":"42-select-fields","line":190,"column":0,"depth":3},"43-checkboxes":{"type":"header","text":"4.3 Checkboxes","value":"43-checkboxes","line":242,"column":0,"depth":3},"44-radio-buttons":{"type":"header","text":"4.4 Radio buttons","value":"44-radio-buttons","line":305,"column":0,"depth":3},"5-v-model-modifiers":{"type":"header","text":"5. v-model modifiers","value":"5-v-model-modifiers","line":362,"column":0,"depth":2},"51-trim":{"type":"header","text":"5.1 trim","value":"51-trim","line":370,"column":0,"depth":3},"52-number":{"type":"header","text":"5.2 number","value":"52-number","line":392,"column":0,"depth":3},"53-lazy":{"type":"header","text":"5.3 lazy","value":"53-lazy","line":418,"column":0,"depth":3},"6-conclusion":{"type":"header","text":"6. Conclusion","value":"6-conclusion","line":450,"column":0,"depth":2}},"children":[],"parent":"p6jdsvhol2ebyzilnb5u3ot","data":{}},"body":"<h1 id=\"how-to-use-v-model-with-form-inputs-in-vue\">How to Use v-model with Form Inputs in Vue<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#how-to-use-v-model-with-form-inputs-in-vue\"></a></h1>\n<blockquote>\n<p><a href=\"https://dmitripavlutin.com/vue-v-model-form-inputs/\">https://dmitripavlutin.com/vue-v-model-form-inputs/</a></p>\n</blockquote>\n<p>The idea of <code>v-model</code> in Vue is simple.</p>\n<p>Define a reactive <code>text</code> (usually a ref), and then bind this value to an input using <code>v-model=\"text\"</code>. This creates a two-way data flow:</p>\n<ol>\n<li>User types into the input and <code>text</code> ref changes.</li>\n<li><code>text</code> ref changes programmaticaly and the input value changes.</li>\n</ol>\n<p>Let's see how to use <code>v-model</code> to bind form inputs in Vue 3.</p>\n<hr>\n<h2 id=\"1-binding-a-form-input\">1. Binding a form input<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#1-binding-a-form-input\"></a></h2>\n<p>Let's implement a component that renders an input field with the initial value <code>'Unknown'</code>. The value that user introduces into the input field renders on the screen.</p>\n<p><code>v-model</code> fits nicely to implement such a component. Connecting <code>v-model</code> with the input field requires 2 simple steps:</p>\n<ol>\n<li><code>const text = ref()</code>: reactive value to serve as a <em>data bus</em> for <code>v-model</code></li>\n<li><code>v-model=\"text\"</code>: add <code>v-model</code> to the input field tag assigned with <code>text</code>.</li>\n</ol>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>script</span> <span class=\"token attr-name\">setup</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> ref <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"vue\"</span>\n\n  <span class=\"token keyword\">const</span> text <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Unknown\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Step 1: create data bus</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token comment\">&#x3C;!-- Step 2: assign data bus to v-model --></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>input</span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>input<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>div</span><span class=\"token punctuation\">></span></span>{{ text }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>template</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<p>Open the demo. The input field contains initially <code>'Unknown'</code>. Type something into the input field: and both the input value and the text on the screen update.</p>\n<p><code>v-model=\"text\"</code> is <em>two-way data binding</em> in Vue.</p>\n<p>The first direction of flow happens during the initialization. The input value is initialized with <code>'Unknown'</code> — <code>text</code>'s initial value.</p>\n<p>The second direction of flow occurs when you type into the input field. <code>v-model</code> takes the value of the input and updates <code>text</code> ref with it.</p>\n<p><a href=\"https://dmitripavlutin.com/f3d136e04f9ab5d189b7212cedde6a9c/vue-v-model-3.svg\">Vue v-model binding</a></p>\n<h2 id=\"2-v-model-vs-v-bind\"><a href=\"https://dmitripavlutin.com/vue-v-model-form-inputs/#2-v-model-vs-v-bind\"></a>2. v-model vs v-bind<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#2-v-model-vs-v-bind\"></a></h2>\n<p><a href=\"https://vuejs.org/api/built-in-directives.html#v-bind\">v-bind</a> is another data binding mechanism in Vue:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>input</span> <span class=\"token attr-name\"><span class=\"token namespace\">v-bind:</span>value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n</code></pre>\n<p>which can be shortened to:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>input</span> <span class=\"token attr-name\">:value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n</code></pre>\n<p>What is the difference between <code>v-model</code> and <code>:value</code>? <code>&#x3C;input :value=\"value\" /></code> is a <em>one-way</em> data flow mechanism.</p>\n<p>To understand the difference let's change the previous example's input tag from <code>v-model=\"text\"</code> to <code>:value=\"text\"</code>:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>script</span> <span class=\"token attr-name\">setup</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> ref <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"vue\"</span>\n\n  <span class=\"token keyword\">const</span> text <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Unknown\"</span><span class=\"token punctuation\">)</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>input</span> <span class=\"token attr-name\">:value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>input<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>div</span><span class=\"token punctuation\">></span></span>{{ text }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>template</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<p>Open the demo. The input field is initialized with <code>'Unknown'</code>.</p>\n<p>Type some characters into the input field... and the text rendered on the screen always stays the same — <code>'Unknown'</code>. <code>text</code> ref <em>is not updated</em> when the input field changes.</p>\n<p><code>:value=\"text\"</code> makes data flow in one direction only: from the <code>text</code> ref to the input field. Changing the input field value, however, doesn't change <code>text</code> ref.</p>\n<p><a href=\"https://dmitripavlutin.com//32f0a80e66967deb2d37f62d61cb769a/vue-v-bind-3.svg\">Vue v-bind binding</a></p>\n<p>In conclusion, <code>v-model</code> enables a <em>two-way</em> data flow, while <code>:value</code> enables a <em>one-way</em> data flow.</p>\n<h3 id=\"21-emulating-v-model\"><a href=\"https://dmitripavlutin.com/vue-v-model-form-inputs/#21-emulating-v-model\"></a>2.1 Emulating v-model<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#21-emulating-v-model\"></a></h3>\n<p>Despite the difference, <code>v-model</code> can be emulated using <code>:value</code> and <code>@input</code>:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>input</span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n</code></pre>\n<p>can be expressed as:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>input</span> <span class=\"token attr-name\">:value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">@input</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text = $event.target.value<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n</code></pre>\n<p>The following code doesn't use <code>v-model</code>, but still has two-way data flow working:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>script</span> <span class=\"token attr-name\">setup</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> ref <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"vue\"</span>\n\n  <span class=\"token keyword\">const</span> text <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Unknown\"</span><span class=\"token punctuation\">)</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>input</span> <span class=\"token attr-name\">:value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">@input</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text = $event.target.value<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>input<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>div</span><span class=\"token punctuation\">></span></span>{{ text }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>template</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<p>Open the demo and type some characters into the input. The two-way binding is working correctly.</p>\n<p>The regular binding <code>:value=\"text\"</code> enables the first flow.</p>\n<p><code>@input=\"text = $event.target.value\"</code> updates <code>text</code> when user types into the input field gets triggered. That's the second flow.</p>\n<h2 id=\"3-binding-using-reactive\"><a href=\"https://dmitripavlutin.com/vue-v-model-form-inputs/#3-binding-using-reactive\"></a>3. Binding using reactive()<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#3-binding-using-reactive\"></a></h2>\n<p><a href=\"https://vuejs.org/api/reactivity-core.html#reactive\">reactive()</a> is a Vue reactivity API that makes an object reactive.</p>\n<p>The main <a href=\"https://dmitripavlutin.com/ref-reactive-differences-vue/\">difference</a> between <code>ref()</code> and <code>reactive()</code> is that refs can store primitives and objects, while <code>reactive()</code> accepts only objects. And <code>reactive()</code> object can be access directly (without <code>.value</code> property as in the case of refs).</p>\n<p>Binding a reactive object to form inputs is handy when you have a lot of inputs. You can bind each input field with a specific property of the reactive object.</p>\n<p>Let's implement a form having first and last name inputs, and bound these to a reactive object's properties:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>script</span> <span class=\"token attr-name\">setup</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> reactive <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"vue\"</span>\n\n  <span class=\"token keyword\">const</span> person <span class=\"token operator\">=</span> <span class=\"token function\">reactive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> firstName<span class=\"token operator\">:</span> <span class=\"token string\">\"John\"</span><span class=\"token punctuation\">,</span> lastName<span class=\"token operator\">:</span> <span class=\"token string\">\"Smith\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>input</span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>person.firstName<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>input<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>input</span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>person.lastName<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>input<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>div</span><span class=\"token punctuation\">></span></span>Full name is {{ person.firstName }} {{ person.lastName }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>template</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<p><code>const person = reactive({ firstName: '', lastName: '' })</code> creates a reactive object.</p>\n<p><code>v-model=\"person.firstName\"</code> binds with the first name property, as well as <code>v-model=\"person.lastName\"</code> binds to the last name property.</p>\n<p>Open the demo. Type into the first or last name inputs, and you'll see that the rendered text changes according to the name you type.</p>\n<p>Pretty nice! Properties of a reactive object can serve as data buses for <code>v-model</code>. Use this approach to bind many input fields.</p>\n<h2 id=\"4-binding-different-input-types\"><a href=\"https://dmitripavlutin.com/vue-v-model-form-inputs/#4-binding-different-input-types\"></a>4. Binding different input types<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#4-binding-different-input-types\"></a></h2>\n<p>Many other input types like select, textarea, checkboxes, radio buttons can bind using <code>v-model</code>. Let's explore them.</p>\n<h3 id=\"41-textareas\"><a href=\"https://dmitripavlutin.com/vue-v-model-form-inputs/#41-textareas\"></a>4.1 Textareas<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#41-textareas\"></a></h3>\n<p>Binding a textarea to a ref is straightforward. Just use <code>v-model</code> on the textarea tag <code>&#x3C;textarea v-model=\"longText\" /></code>:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>script</span> <span class=\"token attr-name\">setup</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> ref <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"vue\"</span>\n\n  <span class=\"token keyword\">const</span> longText <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Well... here's my story. One morning...\"</span><span class=\"token punctuation\">)</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>textarea</span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>longText<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>div</span><span class=\"token punctuation\">></span></span>{{ longText }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>template</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<h3 id=\"42-select-fields\"><a href=\"https://dmitripavlutin.com/vue-v-model-form-inputs/#42-select-fields\"></a>4.2 Select fields<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#42-select-fields\"></a></h3>\n<p>The select (aka dropdown) field offers user a pre-defined set of options to choose from.</p>\n<p>Binding a select is simple: <code>&#x3C;select v-model=\"selected\" /></code>:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>script</span> <span class=\"token attr-name\">setup</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> ref <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"vue\"</span>\n\n  <span class=\"token keyword\">const</span> employeeId <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2\"</span><span class=\"token punctuation\">)</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>select</span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>employeeId<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Jane Doe<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>option</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>John Doe<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>option</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>3<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>John Smith<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>option</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>select</span><span class=\"token punctuation\">></span></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>div</span><span class=\"token punctuation\">></span></span>Selected id: {{ employeeId }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>template</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<p><code>employeeId</code> is the ref bound to the select and will get the value of the option being selected.</p>\n<p>Because <code>employeeId</code> ref is initialized with <code>'2'</code>, <code>John Doe</code> option is initially selected.</p>\n<p>When you select another option, you can see that <code>employeeId</code> updates with the newly selected option value.</p>\n<p>If the select options do not have <code>value</code> attributes, then the binding works with the <em>text</em> of the options:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>script</span> <span class=\"token attr-name\">setup</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> ref <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"vue\"</span>\n\n  <span class=\"token keyword\">const</span> employee <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Jane Doe\"</span><span class=\"token punctuation\">)</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>select</span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>employee<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>option</span><span class=\"token punctuation\">></span></span>Jane Doe<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>option</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>option</span><span class=\"token punctuation\">></span></span>John Doe<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>option</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>option</span><span class=\"token punctuation\">></span></span>John Smith<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>option</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>select</span><span class=\"token punctuation\">></span></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>div</span><span class=\"token punctuation\">></span></span>Selected: {{ employee }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>template</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<p>Now the binding works directly with the textual value of the options. If you'd select the second option, then <code>employee</code> ref is assigned with <code>'John Doe'</code>.</p>\n<h3 id=\"43-checkboxes\"><a href=\"https://dmitripavlutin.com/vue-v-model-form-inputs/#43-checkboxes\"></a>4.3 Checkboxes<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#43-checkboxes\"></a></h3>\n<p>Thanks to <code>v-model</code> binding checkboxes is easy:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>input</span> <span class=\"token attr-name\">ref</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>checked<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>checkbox<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n</code></pre>\n<p><code>checked</code> ref is assigned with a boolean value indicating whether the checkbox is checked or not.</p>\n<p>Let's create a checkbox that bounds to a <code>checked</code> ref:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>script</span> <span class=\"token attr-name\">setup</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> ref <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"vue\"</span>\n\n  <span class=\"token keyword\">const</span> checked <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>label</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>input</span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>checked<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>checkbox<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>Want a pizza?<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>label</span><span class=\"token punctuation\">></span></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>div</span><span class=\"token punctuation\">></span></span>{{ checked }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>template</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<p><code>checked</code> ref is initialized with <code>true</code> and thus initially the checkbox is checked. Checking or unchecking the checkbox updates <code>checked</code> ref correspondingly with <code>true</code> or <code>false</code>. No rocket science here.</p>\n<p>To customize the checked/unchecked binding to other values that a boolean, then Vue offers 2 Vue-specific attributes on the checkbox:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>input</span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>checked<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">true-value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Yes!<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">false-value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>No<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n</code></pre>\n<p>Now <code>checked</code> would be assigned to <code>'Yes!'</code> (as true value) or <code>'No'</code> (as false value) string depending on the checkbox status.</p>\n<p>Let's modify the previous example to use the custom values <code>'Yes!'</code> and <code>'No'</code>:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>script</span> <span class=\"token attr-name\">setup</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> ref <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"vue\"</span>\n\n  <span class=\"token keyword\">const</span> answer <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Yes!\"</span><span class=\"token punctuation\">)</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>label</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>input</span>\n      <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>answer<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>checkbox<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">true-value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Yes!<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">false-value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>No<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token punctuation\">/></span></span>\n\n    Want a pizza?\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>label</span><span class=\"token punctuation\">></span></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>div</span><span class=\"token punctuation\">></span></span>{{ answer }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>template</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<p><code>answer</code> now can have either <code>'Yes!'</code> or <code>'No'</code> depending on the checkbox's check status.</p>\n<h3 id=\"44-radio-buttons\"><a href=\"https://dmitripavlutin.com/vue-v-model-form-inputs/#44-radio-buttons\"></a>4.4 Radio buttons<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#44-radio-buttons\"></a></h3>\n<p>To bind a group of radio buttons apply to the group the same the same bus binding <code>v-model=\"option\"</code>:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>radio<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>option<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>a<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>radio<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>option<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>b<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>radio<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>option<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>c<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n</code></pre>\n<p>For example, let's implement a radio buttons group to select the color of a T-shirt:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>script</span> <span class=\"token attr-name\">setup</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> ref <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"vue\"</span>\n\n  <span class=\"token keyword\">const</span> color <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"white\"</span><span class=\"token punctuation\">)</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>label</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>radio<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>color<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>white<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>White<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>label</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>label</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>radio<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>color<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>red<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>Red<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>label</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>label</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>radio<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>color<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>blue<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>Blue<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>label</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>div</span><span class=\"token punctuation\">></span></span>T-shirt color: {{ color }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>template</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<p>Initially, the <code>White</code> radio is selected because the <code>color</code> ref is initialized with <code>'white'</code>.</p>\n<p>Click on any other T-shirt color, and the <code>color</code> ref changes according to the selected color.</p>\n<p><code>value</code> attribute of the radio is bindable: you can use <code>:value</code>. That is helpful when the list of options comes from an array, for example:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>script</span> <span class=\"token attr-name\">setup</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> ref <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"vue\"</span>\n\n  <span class=\"token keyword\">const</span> color <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"white\"</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token constant\">COLORS</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span> option<span class=\"token operator\">:</span> <span class=\"token string\">\"white\"</span><span class=\"token punctuation\">,</span> label<span class=\"token operator\">:</span> <span class=\"token string\">\"White\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token punctuation\">{</span> option<span class=\"token operator\">:</span> <span class=\"token string\">\"black\"</span><span class=\"token punctuation\">,</span> label<span class=\"token operator\">:</span> <span class=\"token string\">\"Black\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token punctuation\">{</span> option<span class=\"token operator\">:</span> <span class=\"token string\">\"blue\"</span><span class=\"token punctuation\">,</span> label<span class=\"token operator\">:</span> <span class=\"token string\">\"Blue\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>label</span> <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{ option, label } in COLORS<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>option<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>radio<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>color<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>option<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span> {{ label }}\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>label</span><span class=\"token punctuation\">></span></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>div</span><span class=\"token punctuation\">></span></span>T-shirt color: {{ color }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>template</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<h2 id=\"5-v-model-modifiers\"><a href=\"https://dmitripavlutin.com/vue-v-model-form-inputs/#5-v-model-modifiers\"></a>5. v-model modifiers<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#5-v-model-modifiers\"></a></h2>\n<p>On top of doing a wonderful job with binding form inputs, <code>v-model</code> has an additional feature called modifier.</p>\n<blockquote>\n<p><em>A modifier</em> is a piece of logic applied to <code>v-model</code> to customize its behavior. A modifier is applied to <code>v-model</code> by using a dot syntax <code>v-model.&#x3C;modifier></code>, for example <code>v-mode.trim</code>.</p>\n</blockquote>\n<p>By default Vue offers 3 modifies: trim, number, and lazy.</p>\n<h3 id=\"51-trim\"><a href=\"https://dmitripavlutin.com/vue-v-model-form-inputs/#51-trim\"></a>5.1 trim<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#51-trim\"></a></h3>\n<p>Trimming a string means removing whitespaces from the beginning and the end of the string. For example, trim applied to <code>' Wow! '</code> results in <code>'Wow!'</code>.</p>\n<p><code>v-model.trim</code> modifier trims the input field value before assinging the value to the bound ref.</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>script</span> <span class=\"token attr-name\">setup</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> ref <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"vue\"</span>\n\n  <span class=\"token keyword\">const</span> text <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>input</span> <span class=\"token attr-name\">v-model.trim</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>pre</span><span class=\"token punctuation\">></span></span>\"{{ text }}\"<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>pre</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>template</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<p>Open the demo. Type a value that starts or ends with spaces, e.g. <code>' Hi! '</code>. You'll see that the rendered text <code>'Hi!'</code> doesn't have spaces on both ends.</p>\n<h3 id=\"52-number\"><a href=\"https://dmitripavlutin.com/vue-v-model-form-inputs/#52-number\"></a>5.2 number<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#52-number\"></a></h3>\n<p><code>v-mode.number</code> modifier applies a number parser on the input field value.</p>\n<p><code>v-model.number=\"number\"</code> assigns to <code>number</code> a real number if the user introduced a value that can be parsed to a number. In other cases, if the introduced value is not numeric, <code>number</code> ref is just assigned to the original string.</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>script</span> <span class=\"token attr-name\">setup</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> ref <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"vue\"</span>\n\n  <span class=\"token keyword\">const</span> number <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>input</span> <span class=\"token attr-name\">v-model.number</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>number<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>div</span><span class=\"token punctuation\">></span></span>{{ typeof number }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>template</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<p><a href=\"https://codesandbox.io/s/v-model-number-vbeifz?file=/src/App.vue\">Open the demo.</a></p>\n<p>When you introduce <code>'345'</code> into the input, then <code>number</code> ref becomes <code>345</code> (a number). Value parsing happens automatically.</p>\n<p>But if you introduce a non-numeric value into the input, like <code>'abc'</code>, then <code>number</code> ref is assigned with the same value <code>'abc'</code>.</p>\n<h3 id=\"53-lazy\"><a href=\"https://dmitripavlutin.com/vue-v-model-form-inputs/#53-lazy\"></a>5.3 lazy<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#53-lazy\"></a></h3>\n<p>By default, <code>v-model</code> uses <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event\">\"input\"</a> event to determine when to update the bound ref. But using the modifier <code>v-model.lazy</code> you can alter the event to be <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event\">\"change\"</a> event.</p>\n<p>What's the main difference between <code>input</code> and <code>change</code> events?</p>\n<p><code>input</code> is triggered every time you keypress in the input field.</p>\n<p><code>change</code>, however, is triggered <em>only</em> when you take the focus from the input field. Typing into the input field does not trigger <code>change</code>.</p>\n<p>The following example uses lazy binding:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>script</span> <span class=\"token attr-name\">setup</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> ref <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"vue\"</span>\n\n  <span class=\"token keyword\">const</span> text <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Unknown\"</span><span class=\"token punctuation\">)</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>input</span> <span class=\"token attr-name\">v-model.lazy</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>input<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>div</span><span class=\"token punctuation\">></span></span>{{ text }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>template</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<p>Open the demo and type a few characters into the input. The rendered text stays the same: <code>Unknown</code>.</p>\n<p>Now click somewhere outside of the input field to make it lose focus. The rendered text updates to the value that you introduced earlier.</p>\n<p>If you have a form with many input fields and heavy state, you can apply the lazy modifier to disable realtime reactivity as the user types. That could prevent page <em>freezes</em> during typing.</p>\n<h2 id=\"6-conclusion\"><a href=\"https://dmitripavlutin.com/vue-v-model-form-inputs/#6-conclusion\"></a>6. Conclusion<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#6-conclusion\"></a></h2>\n<p>From all the details you've read, remember just one.</p>\n<p><code>v-model</code> binds form inputs to refs or reactive objects.</p>\n<p>Binding is performed in 2 easy steps:</p>\n<ul>\n<li>First, create the ref <code>const text = ref('')</code>.</li>\n<li>Second, assign the ref to the <code>v-model</code> attribute: <code>&#x3C;input v-model=\"text\" type=\"text\" /></code></li>\n</ul>\n<p><code>text</code> ref is kept in sync (bound) with the input field value.</p>","noteIndex":{"id":"Iy0MoL0KnL55Br3AfTS2C","title":"Luke","desc":"","updated":1761796791487,"created":1644449449778,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"4e745570ca97988a0362cb939b760952","links":[{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"life-tips","position":{"start":{"line":41,"column":5,"offset":2603},"end":{"line":41,"column":29,"offset":2627},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"life-tips","anchorHeader":"wodenokoto"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-read-in.2025","alias":"What I read in 2025","position":{"start":{"line":70,"column":3,"offset":4333},"end":{"line":70,"column":54,"offset":4384},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-read-in.2025"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-read-in.2024","alias":"2024","position":{"start":{"line":71,"column":5,"offset":4389},"end":{"line":71,"column":41,"offset":4425},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-read-in.2024"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-read-in.2023","alias":"2023","position":{"start":{"line":72,"column":5,"offset":4430},"end":{"line":72,"column":41,"offset":4466},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-read-in.2023"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-read-in.2022","alias":"2022","position":{"start":{"line":73,"column":5,"offset":4471},"end":{"line":73,"column":41,"offset":4507},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-read-in.2022"}},{"type":"wiki","from":{"fname":"root","id":"Iy0MoL0KnL55Br3AfTS2C","vaultName":"vault"},"value":"journal.what-i-struggled-brag-in","position":{"start":{"line":79,"column":3,"offset":4643},"end":{"line":79,"column":39,"offset":4679},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"journal.what-i-struggled-brag-in"}}],"anchors":{"what-i-read-in-past":{"type":"header","text":"What I read in past","value":"what-i-read-in-past","line":74,"column":0,"depth":2}},"children":["zd4mq442jike0pr0wba1u3m","6hzeqsofq67gdk88flxlkhp","778ijii93yu5uwnrwmn5zi4","g1fngdjl25nes6fs3lip602","ZbdkdApFqLdks4Moq92R9","uoc5hhki3o4py15cesddu8q","9qf7j06jtdkm6rnx9ymvwb0","5zn10cvj7ajy2gh2is5nqmg","4qo9ma0z0yu1czns6pxl7y5","ok0e729ho7o09xetujkxc0m","GR5x8HnNFEN6fU2UBSEIK","yirtnlj8q24yutcf3ss1xqy","eq0wc6t7wl2wv221yb68ro4","7x2fnv4j6gxts08qk0jguny","ettkt3iClONnxpbGwBVLl","7l4knev6v613tbuoskvmbdg","hvh5bud6yp7dc89tuh95tr9","4fvoqrplw0cweo554usbjos","f8qsfql0a9v8thpeo82udfa","1swsbrhqi9jk41v9eodyi5q","SQqYupi6EFddTerBA8RRD","hjNeNc1F2JUh0lTWanH4h","qf0l4wbrc9jgooyzexmbq5v","uur1lkol353z9vfeqb3n5bv","cd9n1czq3ursgkby985wkmm","k1sr43vwnfqztwc0s43pkcf","wfde75rhdvq2yfa2zy2q6rv","rjcmdv60jokmbw6zoq8u2ef","ujapvww8o6v3kpmlhtryq4k","pkwewou9d5e8ystswn1j2b4"],"parent":null,"data":{},"body":"\nHi there 👋. I'm a Front-end developer.\n\n---\n\n- 단순함과 꾸준함은 가장 쉬우면서도 지키기 어려운 원칙.\n\n- 🥱 -> 🤔💡🌱 - [On The Death of Daydreaming](https://www.afterbabel.com/p/on-the-death-of-daydreaming)\n  - boredom -> easy fun -> art -> profit?\n\n> I've often described my motivation for building software to others using imagery: I like to go find a secluded beach, build a large, magnificent sand castle, and then walk away. Will anyone notice? Probably not. Will the waves eventually destroy it? Yep. Did I still get immense satisfaction? Absolutely. - [aliasxneo](https://news.ycombinator.com/item?id=41497113)\n\n> We love to see the process, not just the result. The imperfections in your work can be beautiful if they show your struggle for perfection, not a lack of care. - [ralphammer](https://ralphammer.com/is-perfection-boring/)\n\n> Simplicity, even if it sacrifices some ideal functionality has better survival characteristics than the-right-thing. - [The Rise of Worse is Better](https://www.dreamsongs.com/RiseOfWorseIsBetter.html)\n\n> [Roberto Blake was talking about making 100 crappy videos](https://www.youtube.com/watch?v=OnUBaQ1Sp_E) to get better over time. Putting in the reps and improving a little bit each time.\n>\n> Putting in the work without expecting any external reward at first (eg views, followers, likes, etc) will pay off in the long run. - [100 Scrappy Things](https://www.florin-pop.com/blog/100-scrappy-things/)\n\n> Make the difficult habitual, the habitual easy, and the easy beautiful. - [Constantin S. Stanislavski](https://www.goodreads.com/quotes/7102271-make-the-difficult-habitual-the-habitual-easy-and-the-easy)\n\n> A good match is a **structured** dance, where players aim to **score** while they are following well-defined **rules**. This **freedom within a structure** is what makes it fun. - [ralphammer](https://ralphammer.com/how-to-get-started/)\n\n- [Pivot Points](https://longform.asmartbear.com/pivot-points/)\n\n  - non-judgmental aspects of personality that can be strengths in some contexts and weaknesses in others\n  - Pivot Points are fixed in the short term\n\n- [Hedged Bets](https://longform.asmartbear.com/predict-the-future/#hedged-bets)\n  - trading slightly less maximum upside for predictable, net-positive outcomes.\n\n> “Motivation often comes after starting, not before. Action produces momentum.”\n> [When you start a new habit, it should take less than two minutes to do.](https://jamesclear.com/how-to-stop-procrastinating)\n>\n> - James Clear\n\n> Focus is more about **not** keeping busy when you need to wait for something.  \n> Eat the boredom for a minute.\n>\n> - [[life-tips#wodenokoto]]\n\n> [4 minutes run hard enough to push heart rate to 90%, 3 minutes recover, repeat 4 times](https://news.ycombinator.com/item?id=34213181)\n>\n> - https://www.ntnu.edu/cerg/advice\n> - [Get running with Couch to 5K](https://www.nhs.uk/live-well/exercise/running-and-aerobic-exercises/get-running-with-couch-to-5k/)\n\n> [recommended routine - bodyweightfitness](https://www.reddit.com/r/bodyweightfitness/wiki/kb/recommended_routine/) - I Don't Have This Much Time!\n>\n> - Don't workout at all (saves anywhere from 20 to 60 minutes, but really, really, really, really, really, really, really, really, really not recommended)\n\n> 도무지 읽히지 않는 책 앞에서 내가 택한 방법은 펼쳐진 페이지 앞에서 멍때리기이다. 다르게 표현하면 이렇다. 펼쳐진 두 페이지 앞에서 오래 머물기.\n>\n> 책을 펼쳐놓는 것으로 충분하다. 읽지 못해도 좋다. 매일 정해진 진도를 나가야 하는 학교 수업이 아니니까. 하지만 읽지 않아도 괜찮다고 해서 펼쳐두지조차 않으면 곤란하다. 가능한 한 자주 책을 펼쳐두도록 하자. 전혀 읽지 않고 멍하니 바라보고 있다가 다시 덮게 되더라도\n>\n> - 막막한 독서. 시로군. P.10~13\n\n> I think it should be everyone's primary focus to sleep well, drink water, get outside, get active, and eat generally decently. I hate to say it, but if you're not eating a good amount of vegetables and fruit, decent protein, sleep, etc, no amount of XYZ will catch up to that detriment. - [CE02](https://news.ycombinator.com/item?id=35056071)\n\n> My real battle is doing good versus doing nothing. - [Deirdre Sullivan](https://www.npr.org/2005/08/08/4785079/always-go-to-the-funeral)\n\n[Kind Engineering](https://kind.engineering/) - How To Engineer Kindness\n\n> Sometimes magic is just someone spending more time on something than anyone else might reasonably expect. - [Teller](https://www.goodreads.com/quotes/6641527-sometimes-magic-is-just-someone-spending-more-time-on-something)\n\n---\n\n## What I read in past\n\n- [[What I read in 2025|journal.what-i-read-in.2025]]\n  - [[2024|journal.what-i-read-in.2024]]\n  - [[2023|journal.what-i-read-in.2023]]\n  - [[2022|journal.what-i-read-in.2022]]\n- 📝 [Gists](https://gist.github.com/Luke-SNAW)\n- 📜 [Journals](https://luke-snaw.github.io/Luke-SNAW__netlify-CMS.github.io/)\n\n---\n\n- [[journal.what-i-struggled-brag-in]]\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":false,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"dendronVersion":"0.115.0","enableFullHierarchyNoteTitle":false,"enablePersistentHistory":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Luke SNAW","description":"Personal knowledge space"},"github":{"enableEditLink":false,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","siteUrl":"https://luke-snaw.github.io/","duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}