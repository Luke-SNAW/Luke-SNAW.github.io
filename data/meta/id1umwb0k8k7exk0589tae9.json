{"id":"id1umwb0k8k7exk0589tae9","title":"Making the Web Faster with Service Workers and Performance Research","desc":"","updated":1672708357794,"created":1672707051806,"custom":{},"fname":"dev.web.performance.making-the-web-faster-with-service-workers-and-performance-research","type":"note","vault":{"fsPath":"vault"},"contentHash":"97ec1369a3d6c82b0f2f3057b1967970","links":[],"anchors":{"tldr":{"type":"header","text":"TLDR;","value":"tldr","line":10,"column":0,"depth":2},"targeting-large-gains-in-web-performance":{"type":"header","text":"Targeting large gains in web performance","value":"targeting-large-gains-in-web-performance","line":21,"column":0,"depth":2},"bottlenecks-in-modern-web-performance":{"type":"header","text":"Bottlenecks in modern web performance","value":"bottlenecks-in-modern-web-performance","line":31,"column":0,"depth":2},"accelerating-dynamic-resources-how-it-works":{"type":"header","text":"Accelerating Dynamic Resources: How it works","value":"accelerating-dynamic-resources-how-it-works","line":57,"column":0,"depth":2},"challenge-1-caching-personalized-content":{"type":"header","text":"Challenge 1: Caching personalized content","value":"challenge-1-caching-personalized-content","line":77,"column":0,"depth":3},"challenge-11-delaying-js-to-avoid-problems-from-merging-personalized-content":{"type":"header","text":"Challenge 1.1: Delaying JS to avoid problems from merging personalized content","value":"challenge-11-delaying-js-to-avoid-problems-from-merging-personalized-content","line":104,"column":0,"depth":4},"challenge-2-automatic-cache-sync-via-change-detection":{"type":"header","text":"Challenge 2: Automatic cache sync via Change Detection","value":"challenge-2-automatic-cache-sync-via-change-detection","line":133,"column":0,"depth":3},"challenge-3-browser-caching-without-staleness":{"type":"header","text":"Challenge 3: Browser caching without staleness","value":"challenge-3-browser-caching-without-staleness","line":155,"column":0,"depth":3},"dynamic-browser-caching-the-bloom-filter-based-cache-sketch":{"type":"header","text":"Dynamic Browser Caching: The Bloom filter-based cache sketch","value":"dynamic-browser-caching-the-bloom-filter-based-cache-sketch","line":170,"column":0,"depth":4},"trade-offs":{"type":"header","text":"Trade-offs","value":"trade-offs","line":191,"column":0,"depth":3},"advanced-frontend-optimizations":{"type":"header","text":"Advanced frontend optimizations","value":"advanced-frontend-optimizations","line":200,"column":0,"depth":2},"evaluating-performance-with-ab-tests-and-rum":{"type":"header","text":"Evaluating performance with A/B tests and RUM","value":"evaluating-performance-with-ab-tests-and-rum","line":208,"column":0,"depth":2}},"children":[],"parent":"pa1bstln0xt54o30z6taebc","data":{}}
